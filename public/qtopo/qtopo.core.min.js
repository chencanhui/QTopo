!function(g){function I(A){if(C[A])return C[A].exports;var n=C[A]={i:A,l:!1,exports:{}};return g[A].call(n.exports,n,n.exports,I),n.l=!0,n.exports}var C={};return I.m=g,I.c=C,I.i=function(g){return g},I.d=function(g,C,A){I.o(g,C)||Object.defineProperty(g,C,{configurable:!1,enumerable:!0,get:A})},I.n=function(g){var C=g&&g.__esModule?function(){return g.default}:function(){return g};return I.d(C,"a",C),C},I.o=function(g,I){return Object.prototype.hasOwnProperty.call(g,I)},I.p="",I(I.s=74)}({1:function(module,exports){eval('/**\r\n * @module core\r\n */\r\nmodule.exports = Element;\r\n/**\r\n * 元素基类,用以继承\r\n * @class [E] Element\r\n * @constructor\r\n * @param jtopo 元素核心的jtopo对象\r\n */\r\nfunction Element(jtopo) {\r\n    if (jtopo) {\r\n        /**\r\n         * 核心Jtopo对象\r\n         * @property [E] jtopo {Object}\r\n         */\r\n        this.jtopo = jtopo;\r\n        jtopo.qtopo = this;\r\n    }\r\n    if (!this.attr.jsonId) {\r\n        this.attr.jsonId = QTopo.util.makeId();\r\n    }\r\n    /**\r\n     * 预定义的额外属性,参考实际元素\r\n     * @property [E] extra {object}\r\n     */\r\n    this.extra = {};\r\n    /**\r\n     * 预定义的基本属性，参考实际元素\r\n     * @property [E] attr {object}\r\n     */\r\n}\r\n/**\r\n *  设置jsonId\r\n *  @method [E] setJsonId\r\n *  @param id {string} id\r\n */\r\nElement.prototype.setJsonId = function (id) {\r\n    this.attr.jsonId = id;\r\n};\r\n/**\r\n *  显示元素\r\n *  @method [E] show\r\n */\r\nElement.prototype.show = function () {\r\n    switch (this.getType()) {\r\n        case QTopo.constant.NODE:\r\n            toggleNode.call(this, true);\r\n            break;\r\n        case QTopo.constant.CONTAINER:\r\n            toggleContainer.call(this, true);\r\n            break;\r\n        case QTopo.constant.LINK:\r\n            toggleLink.call(this, true);\r\n    }\r\n};\r\n/**\r\n *  隐藏元素\r\n *  @method [E] hide\r\n */\r\nElement.prototype.hide = function () {\r\n    switch (this.getType()) {\r\n        case QTopo.constant.NODE:\r\n            toggleNode.call(this, false);\r\n            break;\r\n        case QTopo.constant.CONTAINER:\r\n            toggleContainer.call(this, false);\r\n            break;\r\n        case QTopo.constant.LINK:\r\n            toggleLink.call(this, false);\r\n    }\r\n};\r\n/**\r\n *  设置使用类型\r\n *  @method [E] setUseType\r\n *  @param type {string}\r\n */\r\nElement.prototype.setUseType = function (type) {\r\n    this.attr.useType = type;\r\n};\r\n/**\r\n *  获取使用类型\r\n *  @method [E] getUseType\r\n *  @return {string}\r\n */\r\nElement.prototype.getUseType = function () {\r\n    return this.attr.useType;\r\n};\r\n/**\r\n *  设置元素文本\r\n *  @method [E] setText\r\n *  @param text {string}\r\n */\r\nElement.prototype.setText = function (text) {\r\n    if (text) {\r\n        this.jtopo.text = (text + "").trim();\r\n    }\r\n    this.attr.text = this.jtopo.text;\r\n};\r\n/**\r\n *  设置元素边框\r\n *  @method [E] setBorder\r\n *  @param border {object}\r\n *  color:颜色,width:宽度,radius:角弧度\r\n */\r\nElement.prototype.setBorder = function (border) {\r\n    var jtopo = this.jtopo;\r\n    if (border.color) {\r\n        jtopo.borderColor = QTopo.util.transHex(border.color.toLowerCase());\r\n    }\r\n    if ($.isNumeric(border.width)) {\r\n        jtopo.borderWidth = parseInt(border.width);\r\n    }\r\n    if ($.isNumeric(border.radius)) {\r\n        jtopo.borderRadius = parseInt(border.radius);\r\n    }\r\n    this.attr.border.color = jtopo.borderColor;\r\n    this.attr.border.width = jtopo.borderWidth;\r\n    this.attr.border.radius = jtopo.borderRadius;\r\n};\r\n/**\r\n *  绑定事件,可用off删除对应事件\r\n *  @method [E] on\r\n *  @param name {string} 事件名\r\n *\r\n *  click,dbclick,mousedown,mouseup,mouseover,mouseout,mousemove,mousedrag,mousewheel,touchstart,touchmove,touchend,keydown,keyup\r\n *\r\n *  @param fn {function} 处理函数\r\n */\r\nElement.prototype.on = function (name, fn) {\r\n    this.jtopo.addEventListener(name, function (e) {\r\n        if (e.target && e.target.qtopo) {\r\n            fn(e, e.target.qtopo);\r\n        } else {\r\n            fn(e);\r\n        }\r\n    });\r\n};\r\n/**\r\n *  解除事件，可删除on绑定的事件\r\n *  @method [E] off\r\n *  @param name {string} 事件名\r\n *\r\n *  click,dbclick,mousedown,mouseup,mouseover,mouseout,mousemove,mousedrag,mousewheel,touchstart,touchmove,touchend,keydown,keyup\r\n *\r\n *   @param [fn]{function} 处理的函数对象，若无参则删除该事件下所有函数\r\n */\r\nElement.prototype.off = function (name, fn) {\r\n    this.jtopo.removeEventListener(name);\r\n};\r\n/**\r\n *  设置元素层级\r\n *  @method [E] setZIndex\r\n *  @param zIndex {number} 值高的元素覆盖在值低的元素上,默认节点>链接>分组\r\n */\r\nElement.prototype.setZIndex = function (zIndex) {\r\n    if ($.isNumeric(zIndex)) {\r\n        this.jtopo.zIndex = parseInt(zIndex);\r\n    }\r\n    this.attr.zIndex = this.jtopo.zIndex;\r\n};\r\n/**\r\n *  设置元素字体\r\n *  @method [E] setFont\r\n *  @param font {object}\r\n *\r\n *  type:字体,\r\n *  color:颜色,\r\n *  size:大小\r\n */\r\nElement.prototype.setFont = function (font) {\r\n    var type = this.attr.font.type;\r\n    var size = this.attr.font.size;\r\n    if (font) {\r\n        if ($.isNumeric(font.size)) {\r\n            size = font.size;\r\n        }\r\n        if (font.type) {\r\n            type = font.type;\r\n        }\r\n        this.jtopo.font = (size ? size : 14) + "px " + type;\r\n        if (font.color) {\r\n            this.jtopo.fontColor = QTopo.util.transHex(font.color.toLowerCase());\r\n        }\r\n    }\r\n    this.attr.font.type = type;\r\n    this.attr.font.size = size;\r\n    this.attr.font.color = this.jtopo.fontColor;\r\n};\r\n/**\r\n *  设置元素透明度\r\n *  @method [E] setAlpha\r\n *  @param alpha {number} 值域0-1\r\n */\r\nElement.prototype.setAlpha = function (alpha) {\r\n    if ($.isNumeric(alpha) && alpha <= 1 && alpha > 0) {\r\n        this.jtopo.alpha = alpha;\r\n    } else {\r\n        this.jtopo.alpha = 1;\r\n    }\r\n    this.attr.alpha = this.jtopo.alpha;\r\n};\r\n/**\r\n *  设置元素位置\r\n *  @method [E] setPosition\r\n *  @param position {array} [x,y]在图层上的坐标\r\n */\r\nElement.prototype.setPosition = function (position) {\r\n    if ($.isArray(position) && position.length >= 2) {\r\n        if ($.isNumeric(position[0]) && $.isNumeric(position[1])) {\r\n            this.jtopo.setLocation(parseInt(position[0]), parseInt(position[1]));\r\n        }\r\n    }\r\n};\r\n/**\r\n *  设置元素大小\r\n *  @method [E] setSize\r\n *  @param size {array} [width,height]\r\n */\r\nElement.prototype.setSize = function (size) {\r\n    if ($.isArray(size) && $.isNumeric(size[0]) && $.isNumeric(size[1])) {\r\n        this.jtopo.setSize(parseInt(size[0]), parseInt(size[1]));\r\n    } else {\r\n        this.jtopo.setSize(64, 64);\r\n    }\r\n    this.attr.size = [this.jtopo.width, this.jtopo.height];\r\n};\r\n/**\r\n *  元素是否锁定位置\r\n *  @method [E] setDragable\r\n *  @param dragable {boolean}\r\n */\r\nElement.prototype.setDragable = function (dragable) {\r\n    if (typeof dragable == \'boolean\') {\r\n        this.jtopo.dragable = dragable;\r\n    }\r\n    this.attr.dragable = this.jtopo.dragable;\r\n};\r\n/**\r\n *  设置元素文字位置\r\n *  @method [E] setNamePosition\r\n *  @param [namePosition] {string} 无参则设为bottom\r\n *\r\n *  hide,bottom,top,left,right,center\r\n *\r\n */\r\nElement.prototype.setNamePosition = function (namePosition) {\r\n    var jtopo = this.jtopo;\r\n    jtopo.text = this.attr.name || "";\r\n    switch (namePosition) {\r\n        case \'hide\':\r\n            jtopo.text = \'\';\r\n            this.attr.namePosition = "hide";\r\n            break;\r\n        case \'bottom\':\r\n            jtopo.textOffsetX = 0;\r\n            jtopo.textOffsetY = 0;\r\n            jtopo.textPosition = "Bottom_Center";\r\n            this.attr.namePosition = "bottom";\r\n            break;\r\n        case \'top\':\r\n            jtopo.textOffsetX = 0;\r\n            jtopo.textOffsetY = 0;\r\n            jtopo.textPosition = "Top_Center";\r\n            this.attr.namePosition = "top";\r\n            break;\r\n        case \'left\':\r\n            jtopo.textOffsetX = -5;\r\n            jtopo.textOffsetY = 0;\r\n            jtopo.textPosition = "Middle_Left";\r\n            this.attr.namePosition = "left";\r\n            break;\r\n        case \'right\':\r\n            jtopo.textOffsetX = 5;\r\n            jtopo.textOffsetY = 0;\r\n            jtopo.textPosition = "Middle_Right";\r\n            this.attr.namePosition = "right";\r\n            break;\r\n        case "center":\r\n            jtopo.textOffsetX = 0;\r\n            jtopo.textOffsetY = 0;\r\n            jtopo.textPosition = "Middle_Center";\r\n            this.attr.namePosition = "center";\r\n            break;\r\n        default:\r\n            jtopo.textOffsetX = 0;\r\n            jtopo.textOffsetY = 0;\r\n            jtopo.textPosition = \'Bottom_Center\';\r\n            this.attr.namePosition = "bottom";\r\n            QTopo.util.error(this, "set wrong namePosition,default is bottom");\r\n            break;\r\n    }\r\n};\r\n/**\r\n *  私有函数,设置元素属性,只要有对应函数则传入参数设置,不应直接调用\r\n *\r\n *  实际元素中应重写set函数，在set函数中对特殊参数做处理后再调用该函数\r\n *  @method [E] _setAttr\r\n *  @param config {object}\r\n */\r\nElement.prototype._setAttr = function (config) {\r\n    var self = this;\r\n    $.each(config, function (k, v) {\r\n        try {\r\n            var fn = self[\'set\' + QTopo.util.upFirst(k)];\r\n            if (fn) {\r\n                fn.call(self, v);\r\n            }\r\n        } catch (e) {\r\n            QTopo.util.error(self, "Element _setAttr error :" + k, e);\r\n        }\r\n    });\r\n};\r\n/**\r\n * 获取元素基本属性\r\n *  @method [E] get\r\n *  @param name {string} 属性名\r\n *  @example\r\n *          Element.setPosition([100,100])\r\n *          Element.get(\'position\')       //[100,100]\r\n */\r\nElement.prototype.get = function (name) {\r\n    return this.attr[name];\r\n};\r\n/**\r\n * 获取元素的属性,修改/赋值元素额外属性\r\n *  @method [E] val\r\n *  @param key {string} 属性名\r\n *\r\n *  要操作的属性名,与get不同，该函数会在整个对象中查找与key匹配的属性\r\n *\r\n *  无论是额外属性还是基本属性又或是Element.xx属性，只要匹配成功即返回.\r\n *\r\n *  优先级为 额外属性>基本属性>Element.xx属性\r\n *\r\n *  用该函数赋予额外属性时，可以直接传入一个对象作为参数\r\n *\r\n *  该函数会遍历该参数对象将其内容全部覆盖到额外属性上\r\n *\r\n *  @param [value] {string|object|void} 值,无参则为取值\r\n *  @example\r\n *\r\n *       赋值操作   1. Element.val(\'pid\',\'12345\')\r\n *                  2. Element.val({\r\n *                          pid:"12345",\r\n *                          path:[]\r\n *                      })\r\n *       取属性操作 Element.val(\'pid\')       //"12345"\r\n *                  Element.val(\'position\') //[x,y]\r\n *                  Element.val(\'path\')       //[]\r\n *                  Element.val(\'name\')       //""\r\n */\r\nElement.prototype.val = function (key, value) {\r\n    if (QTopo.util.getClass(key) == \'Object\') {\r\n        var self = this;\r\n        $.each(key, function (name, value) {\r\n            self.extra[name] = value;\r\n        })\r\n    } else {\r\n        if (typeof value == \'undefined\') {\r\n            var result;\r\n            if (this.extra[key]) {\r\n                result = this.extra[key];\r\n            } else if (this.attr[key]) {\r\n                result = this.attr[key];\r\n            } else {\r\n                result = this[key];\r\n            }\r\n            return result;\r\n        } else {\r\n            this.extra[key] = value;\r\n        }\r\n    }\r\n};\r\n/*\r\n * 对象links属性内的所有线进行切换\r\n * @links node/container的links属性\r\n * @fnName \'show\'/\'hide\'方法名\r\n */\r\nfunction toggle(links, fnName) {\r\n    try {\r\n        $.each(links, function (name, arr) {\r\n            arr.forEach(function (item) {\r\n                item[fnName]();\r\n            });\r\n        })\r\n    } catch (e) {\r\n        QTopo.util.error("切换隐藏/显示时错误", e);\r\n    }\r\n}\r\n//线的显示只有当其两端节点都显示时才显示\r\nfunction toggleLink(flag) {\r\n    if (flag) {\r\n        if (this.path.start.jtopo && this.path.end.jtopo) {\r\n            if (this.path.start.jtopo.visible && this.path.end.jtopo.visible) {\r\n                this.jtopo.visible = true;\r\n            }\r\n        }\r\n    } else {\r\n        this.jtopo.visible = false;\r\n    }\r\n}\r\nfunction toggleNode(flag) {\r\n    this.jtopo.visible = flag;\r\n    var string = flag ? "show" : "hide";\r\n    toggle(this.links, string);\r\n}\r\nfunction toggleContainer(flag) {\r\n    this.jtopo.visible = flag;\r\n    var string = flag ? "show" : "hide";\r\n    //切换子类显示隐藏\r\n    for (var i = 0; i < this.children.length; i++) {\r\n        this.children[i][string]();\r\n    }\r\n    toggle(this.links, string);\r\n}\r\n/**\r\n * 获取元素中心坐标\r\n *  @method [E] getCenterPosition\r\n *  @return {object} {x,y}\r\n */\r\nElement.prototype.getCenterPosition = function () {\r\n    return {\r\n        x: this.jtopo.cx,\r\n        y: this.jtopo.cy\r\n    }\r\n};\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9kZXZlbG9wL2NvcmUvZWxlbWVudC9FbGVtZW50LmpzPzg1ZDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsT0FBTztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixPQUFPO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLGVBQWUsU0FBUztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsT0FBTztBQUN4QjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsU0FBUztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixPQUFPO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixPQUFPO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLE1BQU07QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixNQUFNO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLE9BQU87QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixPQUFPO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLE9BQU87QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixtQkFBbUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLDBCQUEwQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsT0FBTyxFQUFFO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQG1vZHVsZSBjb3JlXHJcbiAqL1xyXG5tb2R1bGUuZXhwb3J0cyA9IEVsZW1lbnQ7XHJcbi8qKlxyXG4gKiDlhYPntKDln7rnsbss55So5Lul57un5om/XHJcbiAqIEBjbGFzcyBbRV0gRWxlbWVudFxyXG4gKiBAY29uc3RydWN0b3JcclxuICogQHBhcmFtIGp0b3BvIOWFg+e0oOaguOW/g+eahGp0b3Bv5a+56LGhXHJcbiAqL1xyXG5mdW5jdGlvbiBFbGVtZW50KGp0b3BvKSB7XHJcbiAgICBpZiAoanRvcG8pIHtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiDmoLjlv4NKdG9wb+WvueixoVxyXG4gICAgICAgICAqIEBwcm9wZXJ0eSBbRV0ganRvcG8ge09iamVjdH1cclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLmp0b3BvID0ganRvcG87XHJcbiAgICAgICAganRvcG8ucXRvcG8gPSB0aGlzO1xyXG4gICAgfVxyXG4gICAgaWYgKCF0aGlzLmF0dHIuanNvbklkKSB7XHJcbiAgICAgICAgdGhpcy5hdHRyLmpzb25JZCA9IFFUb3BvLnV0aWwubWFrZUlkKCk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOmihOWumuS5ieeahOmineWkluWxnuaApyzlj4LogIPlrp7pmYXlhYPntKBcclxuICAgICAqIEBwcm9wZXJ0eSBbRV0gZXh0cmEge29iamVjdH1cclxuICAgICAqL1xyXG4gICAgdGhpcy5leHRyYSA9IHt9O1xyXG4gICAgLyoqXHJcbiAgICAgKiDpooTlrprkuYnnmoTln7rmnKzlsZ7mgKfvvIzlj4LogIPlrp7pmYXlhYPntKBcclxuICAgICAqIEBwcm9wZXJ0eSBbRV0gYXR0ciB7b2JqZWN0fVxyXG4gICAgICovXHJcbn1cclxuLyoqXHJcbiAqICDorr7nva5qc29uSWRcclxuICogIEBtZXRob2QgW0VdIHNldEpzb25JZFxyXG4gKiAgQHBhcmFtIGlkIHtzdHJpbmd9IGlkXHJcbiAqL1xyXG5FbGVtZW50LnByb3RvdHlwZS5zZXRKc29uSWQgPSBmdW5jdGlvbiAoaWQpIHtcclxuICAgIHRoaXMuYXR0ci5qc29uSWQgPSBpZDtcclxufTtcclxuLyoqXHJcbiAqICDmmL7npLrlhYPntKBcclxuICogIEBtZXRob2QgW0VdIHNob3dcclxuICovXHJcbkVsZW1lbnQucHJvdG90eXBlLnNob3cgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICBzd2l0Y2ggKHRoaXMuZ2V0VHlwZSgpKSB7XHJcbiAgICAgICAgY2FzZSBRVG9wby5jb25zdGFudC5OT0RFOlxyXG4gICAgICAgICAgICB0b2dnbGVOb2RlLmNhbGwodGhpcywgdHJ1ZSk7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgUVRvcG8uY29uc3RhbnQuQ09OVEFJTkVSOlxyXG4gICAgICAgICAgICB0b2dnbGVDb250YWluZXIuY2FsbCh0aGlzLCB0cnVlKTtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSBRVG9wby5jb25zdGFudC5MSU5LOlxyXG4gICAgICAgICAgICB0b2dnbGVMaW5rLmNhbGwodGhpcywgdHJ1ZSk7XHJcbiAgICB9XHJcbn07XHJcbi8qKlxyXG4gKiAg6ZqQ6JeP5YWD57SgXHJcbiAqICBAbWV0aG9kIFtFXSBoaWRlXHJcbiAqL1xyXG5FbGVtZW50LnByb3RvdHlwZS5oaWRlID0gZnVuY3Rpb24gKCkge1xyXG4gICAgc3dpdGNoICh0aGlzLmdldFR5cGUoKSkge1xyXG4gICAgICAgIGNhc2UgUVRvcG8uY29uc3RhbnQuTk9ERTpcclxuICAgICAgICAgICAgdG9nZ2xlTm9kZS5jYWxsKHRoaXMsIGZhbHNlKTtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSBRVG9wby5jb25zdGFudC5DT05UQUlORVI6XHJcbiAgICAgICAgICAgIHRvZ2dsZUNvbnRhaW5lci5jYWxsKHRoaXMsIGZhbHNlKTtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSBRVG9wby5jb25zdGFudC5MSU5LOlxyXG4gICAgICAgICAgICB0b2dnbGVMaW5rLmNhbGwodGhpcywgZmFsc2UpO1xyXG4gICAgfVxyXG59O1xyXG4vKipcclxuICogIOiuvue9ruS9v+eUqOexu+Wei1xyXG4gKiAgQG1ldGhvZCBbRV0gc2V0VXNlVHlwZVxyXG4gKiAgQHBhcmFtIHR5cGUge3N0cmluZ31cclxuICovXHJcbkVsZW1lbnQucHJvdG90eXBlLnNldFVzZVR5cGUgPSBmdW5jdGlvbiAodHlwZSkge1xyXG4gICAgdGhpcy5hdHRyLnVzZVR5cGUgPSB0eXBlO1xyXG59O1xyXG4vKipcclxuICogIOiOt+WPluS9v+eUqOexu+Wei1xyXG4gKiAgQG1ldGhvZCBbRV0gZ2V0VXNlVHlwZVxyXG4gKiAgQHJldHVybiB7c3RyaW5nfVxyXG4gKi9cclxuRWxlbWVudC5wcm90b3R5cGUuZ2V0VXNlVHlwZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHJldHVybiB0aGlzLmF0dHIudXNlVHlwZTtcclxufTtcclxuLyoqXHJcbiAqICDorr7nva7lhYPntKDmlofmnKxcclxuICogIEBtZXRob2QgW0VdIHNldFRleHRcclxuICogIEBwYXJhbSB0ZXh0IHtzdHJpbmd9XHJcbiAqL1xyXG5FbGVtZW50LnByb3RvdHlwZS5zZXRUZXh0ID0gZnVuY3Rpb24gKHRleHQpIHtcclxuICAgIGlmICh0ZXh0KSB7XHJcbiAgICAgICAgdGhpcy5qdG9wby50ZXh0ID0gKHRleHQgKyBcIlwiKS50cmltKCk7XHJcbiAgICB9XHJcbiAgICB0aGlzLmF0dHIudGV4dCA9IHRoaXMuanRvcG8udGV4dDtcclxufTtcclxuLyoqXHJcbiAqICDorr7nva7lhYPntKDovrnmoYZcclxuICogIEBtZXRob2QgW0VdIHNldEJvcmRlclxyXG4gKiAgQHBhcmFtIGJvcmRlciB7b2JqZWN0fVxyXG4gKiAgY29sb3I66aKc6ImyLHdpZHRoOuWuveW6pixyYWRpdXM66KeS5byn5bqmXHJcbiAqL1xyXG5FbGVtZW50LnByb3RvdHlwZS5zZXRCb3JkZXIgPSBmdW5jdGlvbiAoYm9yZGVyKSB7XHJcbiAgICB2YXIganRvcG8gPSB0aGlzLmp0b3BvO1xyXG4gICAgaWYgKGJvcmRlci5jb2xvcikge1xyXG4gICAgICAgIGp0b3BvLmJvcmRlckNvbG9yID0gUVRvcG8udXRpbC50cmFuc0hleChib3JkZXIuY29sb3IudG9Mb3dlckNhc2UoKSk7XHJcbiAgICB9XHJcbiAgICBpZiAoJC5pc051bWVyaWMoYm9yZGVyLndpZHRoKSkge1xyXG4gICAgICAgIGp0b3BvLmJvcmRlcldpZHRoID0gcGFyc2VJbnQoYm9yZGVyLndpZHRoKTtcclxuICAgIH1cclxuICAgIGlmICgkLmlzTnVtZXJpYyhib3JkZXIucmFkaXVzKSkge1xyXG4gICAgICAgIGp0b3BvLmJvcmRlclJhZGl1cyA9IHBhcnNlSW50KGJvcmRlci5yYWRpdXMpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5hdHRyLmJvcmRlci5jb2xvciA9IGp0b3BvLmJvcmRlckNvbG9yO1xyXG4gICAgdGhpcy5hdHRyLmJvcmRlci53aWR0aCA9IGp0b3BvLmJvcmRlcldpZHRoO1xyXG4gICAgdGhpcy5hdHRyLmJvcmRlci5yYWRpdXMgPSBqdG9wby5ib3JkZXJSYWRpdXM7XHJcbn07XHJcbi8qKlxyXG4gKiAg57uR5a6a5LqL5Lu2LOWPr+eUqG9mZuWIoOmZpOWvueW6lOS6i+S7tlxyXG4gKiAgQG1ldGhvZCBbRV0gb25cclxuICogIEBwYXJhbSBuYW1lIHtzdHJpbmd9IOS6i+S7tuWQjVxyXG4gKlxyXG4gKiAgY2xpY2ssZGJjbGljayxtb3VzZWRvd24sbW91c2V1cCxtb3VzZW92ZXIsbW91c2VvdXQsbW91c2Vtb3ZlLG1vdXNlZHJhZyxtb3VzZXdoZWVsLHRvdWNoc3RhcnQsdG91Y2htb3ZlLHRvdWNoZW5kLGtleWRvd24sa2V5dXBcclxuICpcclxuICogIEBwYXJhbSBmbiB7ZnVuY3Rpb259IOWkhOeQhuWHveaVsFxyXG4gKi9cclxuRWxlbWVudC5wcm90b3R5cGUub24gPSBmdW5jdGlvbiAobmFtZSwgZm4pIHtcclxuICAgIHRoaXMuanRvcG8uYWRkRXZlbnRMaXN0ZW5lcihuYW1lLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgIGlmIChlLnRhcmdldCAmJiBlLnRhcmdldC5xdG9wbykge1xyXG4gICAgICAgICAgICBmbihlLCBlLnRhcmdldC5xdG9wbyk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgZm4oZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbn07XHJcbi8qKlxyXG4gKiAg6Kej6Zmk5LqL5Lu277yM5Y+v5Yig6Zmkb27nu5HlrprnmoTkuovku7ZcclxuICogIEBtZXRob2QgW0VdIG9mZlxyXG4gKiAgQHBhcmFtIG5hbWUge3N0cmluZ30g5LqL5Lu25ZCNXHJcbiAqXHJcbiAqICBjbGljayxkYmNsaWNrLG1vdXNlZG93bixtb3VzZXVwLG1vdXNlb3Zlcixtb3VzZW91dCxtb3VzZW1vdmUsbW91c2VkcmFnLG1vdXNld2hlZWwsdG91Y2hzdGFydCx0b3VjaG1vdmUsdG91Y2hlbmQsa2V5ZG93bixrZXl1cFxyXG4gKlxyXG4gKiAgIEBwYXJhbSBbZm5de2Z1bmN0aW9ufSDlpITnkIbnmoTlh73mlbDlr7nosaHvvIzoi6Xml6Dlj4LliJnliKDpmaTor6Xkuovku7bkuIvmiYDmnInlh73mlbBcclxuICovXHJcbkVsZW1lbnQucHJvdG90eXBlLm9mZiA9IGZ1bmN0aW9uIChuYW1lLCBmbikge1xyXG4gICAgdGhpcy5qdG9wby5yZW1vdmVFdmVudExpc3RlbmVyKG5hbWUpO1xyXG59O1xyXG4vKipcclxuICogIOiuvue9ruWFg+e0oOWxgue6p1xyXG4gKiAgQG1ldGhvZCBbRV0gc2V0WkluZGV4XHJcbiAqICBAcGFyYW0gekluZGV4IHtudW1iZXJ9IOWAvOmrmOeahOWFg+e0oOimhuebluWcqOWAvOS9jueahOWFg+e0oOS4iizpu5jorqToioLngrk+6ZO+5o6lPuWIhue7hFxyXG4gKi9cclxuRWxlbWVudC5wcm90b3R5cGUuc2V0WkluZGV4ID0gZnVuY3Rpb24gKHpJbmRleCkge1xyXG4gICAgaWYgKCQuaXNOdW1lcmljKHpJbmRleCkpIHtcclxuICAgICAgICB0aGlzLmp0b3BvLnpJbmRleCA9IHBhcnNlSW50KHpJbmRleCk7XHJcbiAgICB9XHJcbiAgICB0aGlzLmF0dHIuekluZGV4ID0gdGhpcy5qdG9wby56SW5kZXg7XHJcbn07XHJcbi8qKlxyXG4gKiAg6K6+572u5YWD57Sg5a2X5L2TXHJcbiAqICBAbWV0aG9kIFtFXSBzZXRGb250XHJcbiAqICBAcGFyYW0gZm9udCB7b2JqZWN0fVxyXG4gKlxyXG4gKiAgdHlwZTrlrZfkvZMsXHJcbiAqICBjb2xvcjrpopzoibIsXHJcbiAqICBzaXplOuWkp+Wwj1xyXG4gKi9cclxuRWxlbWVudC5wcm90b3R5cGUuc2V0Rm9udCA9IGZ1bmN0aW9uIChmb250KSB7XHJcbiAgICB2YXIgdHlwZSA9IHRoaXMuYXR0ci5mb250LnR5cGU7XHJcbiAgICB2YXIgc2l6ZSA9IHRoaXMuYXR0ci5mb250LnNpemU7XHJcbiAgICBpZiAoZm9udCkge1xyXG4gICAgICAgIGlmICgkLmlzTnVtZXJpYyhmb250LnNpemUpKSB7XHJcbiAgICAgICAgICAgIHNpemUgPSBmb250LnNpemU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChmb250LnR5cGUpIHtcclxuICAgICAgICAgICAgdHlwZSA9IGZvbnQudHlwZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5qdG9wby5mb250ID0gKHNpemUgPyBzaXplIDogMTQpICsgXCJweCBcIiArIHR5cGU7XHJcbiAgICAgICAgaWYgKGZvbnQuY29sb3IpIHtcclxuICAgICAgICAgICAgdGhpcy5qdG9wby5mb250Q29sb3IgPSBRVG9wby51dGlsLnRyYW5zSGV4KGZvbnQuY29sb3IudG9Mb3dlckNhc2UoKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgdGhpcy5hdHRyLmZvbnQudHlwZSA9IHR5cGU7XHJcbiAgICB0aGlzLmF0dHIuZm9udC5zaXplID0gc2l6ZTtcclxuICAgIHRoaXMuYXR0ci5mb250LmNvbG9yID0gdGhpcy5qdG9wby5mb250Q29sb3I7XHJcbn07XHJcbi8qKlxyXG4gKiAg6K6+572u5YWD57Sg6YCP5piO5bqmXHJcbiAqICBAbWV0aG9kIFtFXSBzZXRBbHBoYVxyXG4gKiAgQHBhcmFtIGFscGhhIHtudW1iZXJ9IOWAvOWfnzAtMVxyXG4gKi9cclxuRWxlbWVudC5wcm90b3R5cGUuc2V0QWxwaGEgPSBmdW5jdGlvbiAoYWxwaGEpIHtcclxuICAgIGlmICgkLmlzTnVtZXJpYyhhbHBoYSkgJiYgYWxwaGEgPD0gMSAmJiBhbHBoYSA+IDApIHtcclxuICAgICAgICB0aGlzLmp0b3BvLmFscGhhID0gYWxwaGE7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHRoaXMuanRvcG8uYWxwaGEgPSAxO1xyXG4gICAgfVxyXG4gICAgdGhpcy5hdHRyLmFscGhhID0gdGhpcy5qdG9wby5hbHBoYTtcclxufTtcclxuLyoqXHJcbiAqICDorr7nva7lhYPntKDkvY3nva5cclxuICogIEBtZXRob2QgW0VdIHNldFBvc2l0aW9uXHJcbiAqICBAcGFyYW0gcG9zaXRpb24ge2FycmF5fSBbeCx5XeWcqOWbvuWxguS4iueahOWdkOagh1xyXG4gKi9cclxuRWxlbWVudC5wcm90b3R5cGUuc2V0UG9zaXRpb24gPSBmdW5jdGlvbiAocG9zaXRpb24pIHtcclxuICAgIGlmICgkLmlzQXJyYXkocG9zaXRpb24pICYmIHBvc2l0aW9uLmxlbmd0aCA+PSAyKSB7XHJcbiAgICAgICAgaWYgKCQuaXNOdW1lcmljKHBvc2l0aW9uWzBdKSAmJiAkLmlzTnVtZXJpYyhwb3NpdGlvblsxXSkpIHtcclxuICAgICAgICAgICAgdGhpcy5qdG9wby5zZXRMb2NhdGlvbihwYXJzZUludChwb3NpdGlvblswXSksIHBhcnNlSW50KHBvc2l0aW9uWzFdKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59O1xyXG4vKipcclxuICogIOiuvue9ruWFg+e0oOWkp+Wwj1xyXG4gKiAgQG1ldGhvZCBbRV0gc2V0U2l6ZVxyXG4gKiAgQHBhcmFtIHNpemUge2FycmF5fSBbd2lkdGgsaGVpZ2h0XVxyXG4gKi9cclxuRWxlbWVudC5wcm90b3R5cGUuc2V0U2l6ZSA9IGZ1bmN0aW9uIChzaXplKSB7XHJcbiAgICBpZiAoJC5pc0FycmF5KHNpemUpICYmICQuaXNOdW1lcmljKHNpemVbMF0pICYmICQuaXNOdW1lcmljKHNpemVbMV0pKSB7XHJcbiAgICAgICAgdGhpcy5qdG9wby5zZXRTaXplKHBhcnNlSW50KHNpemVbMF0pLCBwYXJzZUludChzaXplWzFdKSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHRoaXMuanRvcG8uc2V0U2l6ZSg2NCwgNjQpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5hdHRyLnNpemUgPSBbdGhpcy5qdG9wby53aWR0aCwgdGhpcy5qdG9wby5oZWlnaHRdO1xyXG59O1xyXG4vKipcclxuICogIOWFg+e0oOaYr+WQpumUgeWumuS9jee9rlxyXG4gKiAgQG1ldGhvZCBbRV0gc2V0RHJhZ2FibGVcclxuICogIEBwYXJhbSBkcmFnYWJsZSB7Ym9vbGVhbn1cclxuICovXHJcbkVsZW1lbnQucHJvdG90eXBlLnNldERyYWdhYmxlID0gZnVuY3Rpb24gKGRyYWdhYmxlKSB7XHJcbiAgICBpZiAodHlwZW9mIGRyYWdhYmxlID09ICdib29sZWFuJykge1xyXG4gICAgICAgIHRoaXMuanRvcG8uZHJhZ2FibGUgPSBkcmFnYWJsZTtcclxuICAgIH1cclxuICAgIHRoaXMuYXR0ci5kcmFnYWJsZSA9IHRoaXMuanRvcG8uZHJhZ2FibGU7XHJcbn07XHJcbi8qKlxyXG4gKiAg6K6+572u5YWD57Sg5paH5a2X5L2N572uXHJcbiAqICBAbWV0aG9kIFtFXSBzZXROYW1lUG9zaXRpb25cclxuICogIEBwYXJhbSBbbmFtZVBvc2l0aW9uXSB7c3RyaW5nfSDml6Dlj4LliJnorr7kuLpib3R0b21cclxuICpcclxuICogIGhpZGUsYm90dG9tLHRvcCxsZWZ0LHJpZ2h0LGNlbnRlclxyXG4gKlxyXG4gKi9cclxuRWxlbWVudC5wcm90b3R5cGUuc2V0TmFtZVBvc2l0aW9uID0gZnVuY3Rpb24gKG5hbWVQb3NpdGlvbikge1xyXG4gICAgdmFyIGp0b3BvID0gdGhpcy5qdG9wbztcclxuICAgIGp0b3BvLnRleHQgPSB0aGlzLmF0dHIubmFtZSB8fCBcIlwiO1xyXG4gICAgc3dpdGNoIChuYW1lUG9zaXRpb24pIHtcclxuICAgICAgICBjYXNlICdoaWRlJzpcclxuICAgICAgICAgICAganRvcG8udGV4dCA9ICcnO1xyXG4gICAgICAgICAgICB0aGlzLmF0dHIubmFtZVBvc2l0aW9uID0gXCJoaWRlXCI7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgJ2JvdHRvbSc6XHJcbiAgICAgICAgICAgIGp0b3BvLnRleHRPZmZzZXRYID0gMDtcclxuICAgICAgICAgICAganRvcG8udGV4dE9mZnNldFkgPSAwO1xyXG4gICAgICAgICAgICBqdG9wby50ZXh0UG9zaXRpb24gPSBcIkJvdHRvbV9DZW50ZXJcIjtcclxuICAgICAgICAgICAgdGhpcy5hdHRyLm5hbWVQb3NpdGlvbiA9IFwiYm90dG9tXCI7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgJ3RvcCc6XHJcbiAgICAgICAgICAgIGp0b3BvLnRleHRPZmZzZXRYID0gMDtcclxuICAgICAgICAgICAganRvcG8udGV4dE9mZnNldFkgPSAwO1xyXG4gICAgICAgICAgICBqdG9wby50ZXh0UG9zaXRpb24gPSBcIlRvcF9DZW50ZXJcIjtcclxuICAgICAgICAgICAgdGhpcy5hdHRyLm5hbWVQb3NpdGlvbiA9IFwidG9wXCI7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGNhc2UgJ2xlZnQnOlxyXG4gICAgICAgICAgICBqdG9wby50ZXh0T2Zmc2V0WCA9IC01O1xyXG4gICAgICAgICAgICBqdG9wby50ZXh0T2Zmc2V0WSA9IDA7XHJcbiAgICAgICAgICAgIGp0b3BvLnRleHRQb3NpdGlvbiA9IFwiTWlkZGxlX0xlZnRcIjtcclxuICAgICAgICAgICAgdGhpcy5hdHRyLm5hbWVQb3NpdGlvbiA9IFwibGVmdFwiO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlICdyaWdodCc6XHJcbiAgICAgICAgICAgIGp0b3BvLnRleHRPZmZzZXRYID0gNTtcclxuICAgICAgICAgICAganRvcG8udGV4dE9mZnNldFkgPSAwO1xyXG4gICAgICAgICAgICBqdG9wby50ZXh0UG9zaXRpb24gPSBcIk1pZGRsZV9SaWdodFwiO1xyXG4gICAgICAgICAgICB0aGlzLmF0dHIubmFtZVBvc2l0aW9uID0gXCJyaWdodFwiO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlIFwiY2VudGVyXCI6XHJcbiAgICAgICAgICAgIGp0b3BvLnRleHRPZmZzZXRYID0gMDtcclxuICAgICAgICAgICAganRvcG8udGV4dE9mZnNldFkgPSAwO1xyXG4gICAgICAgICAgICBqdG9wby50ZXh0UG9zaXRpb24gPSBcIk1pZGRsZV9DZW50ZXJcIjtcclxuICAgICAgICAgICAgdGhpcy5hdHRyLm5hbWVQb3NpdGlvbiA9IFwiY2VudGVyXCI7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgIGp0b3BvLnRleHRPZmZzZXRYID0gMDtcclxuICAgICAgICAgICAganRvcG8udGV4dE9mZnNldFkgPSAwO1xyXG4gICAgICAgICAgICBqdG9wby50ZXh0UG9zaXRpb24gPSAnQm90dG9tX0NlbnRlcic7XHJcbiAgICAgICAgICAgIHRoaXMuYXR0ci5uYW1lUG9zaXRpb24gPSBcImJvdHRvbVwiO1xyXG4gICAgICAgICAgICBRVG9wby51dGlsLmVycm9yKHRoaXMsIFwic2V0IHdyb25nIG5hbWVQb3NpdGlvbixkZWZhdWx0IGlzIGJvdHRvbVwiKTtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICB9XHJcbn07XHJcbi8qKlxyXG4gKiAg56eB5pyJ5Ye95pWwLOiuvue9ruWFg+e0oOWxnuaApyzlj6ropoHmnInlr7nlupTlh73mlbDliJnkvKDlhaXlj4LmlbDorr7nva4s5LiN5bqU55u05o6l6LCD55SoXHJcbiAqXHJcbiAqICDlrp7pmYXlhYPntKDkuK3lupTph43lhplzZXTlh73mlbDvvIzlnKhzZXTlh73mlbDkuK3lr7nnibnmrorlj4LmlbDlgZrlpITnkIblkI7lho3osIPnlKjor6Xlh73mlbBcclxuICogIEBtZXRob2QgW0VdIF9zZXRBdHRyXHJcbiAqICBAcGFyYW0gY29uZmlnIHtvYmplY3R9XHJcbiAqL1xyXG5FbGVtZW50LnByb3RvdHlwZS5fc2V0QXR0ciA9IGZ1bmN0aW9uIChjb25maWcpIHtcclxuICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgICQuZWFjaChjb25maWcsIGZ1bmN0aW9uIChrLCB2KSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgdmFyIGZuID0gc2VsZlsnc2V0JyArIFFUb3BvLnV0aWwudXBGaXJzdChrKV07XHJcbiAgICAgICAgICAgIGlmIChmbikge1xyXG4gICAgICAgICAgICAgICAgZm4uY2FsbChzZWxmLCB2KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgUVRvcG8udXRpbC5lcnJvcihzZWxmLCBcIkVsZW1lbnQgX3NldEF0dHIgZXJyb3IgOlwiICsgaywgZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbn07XHJcbi8qKlxyXG4gKiDojrflj5blhYPntKDln7rmnKzlsZ7mgKdcclxuICogIEBtZXRob2QgW0VdIGdldFxyXG4gKiAgQHBhcmFtIG5hbWUge3N0cmluZ30g5bGe5oCn5ZCNXHJcbiAqICBAZXhhbXBsZVxyXG4gKiAgICAgICAgICBFbGVtZW50LnNldFBvc2l0aW9uKFsxMDAsMTAwXSlcclxuICogICAgICAgICAgRWxlbWVudC5nZXQoJ3Bvc2l0aW9uJykgICAgICAgLy9bMTAwLDEwMF1cclxuICovXHJcbkVsZW1lbnQucHJvdG90eXBlLmdldCA9IGZ1bmN0aW9uIChuYW1lKSB7XHJcbiAgICByZXR1cm4gdGhpcy5hdHRyW25hbWVdO1xyXG59O1xyXG4vKipcclxuICog6I635Y+W5YWD57Sg55qE5bGe5oCnLOS/ruaUuS/otYvlgLzlhYPntKDpop3lpJblsZ7mgKdcclxuICogIEBtZXRob2QgW0VdIHZhbFxyXG4gKiAgQHBhcmFtIGtleSB7c3RyaW5nfSDlsZ7mgKflkI1cclxuICpcclxuICogIOimgeaTjeS9nOeahOWxnuaAp+WQjSzkuI5nZXTkuI3lkIzvvIzor6Xlh73mlbDkvJrlnKjmlbTkuKrlr7nosaHkuK3mn6Xmib7kuI5rZXnljLnphY3nmoTlsZ7mgKdcclxuICpcclxuICogIOaXoOiuuuaYr+mineWkluWxnuaAp+i/mOaYr+WfuuacrOWxnuaAp+WPiOaIluaYr0VsZW1lbnQueHjlsZ7mgKfvvIzlj6ropoHljLnphY3miJDlip/ljbPov5Tlm54uXHJcbiAqXHJcbiAqICDkvJjlhYjnuqfkuLog6aKd5aSW5bGe5oCnPuWfuuacrOWxnuaApz5FbGVtZW50Lnh45bGe5oCnXHJcbiAqXHJcbiAqICDnlKjor6Xlh73mlbDotYvkuojpop3lpJblsZ7mgKfml7bvvIzlj6/ku6Xnm7TmjqXkvKDlhaXkuIDkuKrlr7nosaHkvZzkuLrlj4LmlbBcclxuICpcclxuICogIOivpeWHveaVsOS8mumBjeWOhuivpeWPguaVsOWvueixoeWwhuWFtuWGheWuueWFqOmDqOimhuebluWIsOmineWkluWxnuaAp+S4ilxyXG4gKlxyXG4gKiAgQHBhcmFtIFt2YWx1ZV0ge3N0cmluZ3xvYmplY3R8dm9pZH0g5YC8LOaXoOWPguWImeS4uuWPluWAvFxyXG4gKiAgQGV4YW1wbGVcclxuICpcclxuICogICAgICAg6LWL5YC85pON5L2cICAgMS4gRWxlbWVudC52YWwoJ3BpZCcsJzEyMzQ1JylcclxuICogICAgICAgICAgICAgICAgICAyLiBFbGVtZW50LnZhbCh7XHJcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICBwaWQ6XCIxMjM0NVwiLFxyXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgcGF0aDpbXVxyXG4gKiAgICAgICAgICAgICAgICAgICAgICB9KVxyXG4gKiAgICAgICDlj5blsZ7mgKfmk43kvZwgRWxlbWVudC52YWwoJ3BpZCcpICAgICAgIC8vXCIxMjM0NVwiXHJcbiAqICAgICAgICAgICAgICAgICAgRWxlbWVudC52YWwoJ3Bvc2l0aW9uJykgLy9beCx5XVxyXG4gKiAgICAgICAgICAgICAgICAgIEVsZW1lbnQudmFsKCdwYXRoJykgICAgICAgLy9bXVxyXG4gKiAgICAgICAgICAgICAgICAgIEVsZW1lbnQudmFsKCduYW1lJykgICAgICAgLy9cIlwiXHJcbiAqL1xyXG5FbGVtZW50LnByb3RvdHlwZS52YWwgPSBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xyXG4gICAgaWYgKFFUb3BvLnV0aWwuZ2V0Q2xhc3Moa2V5KSA9PSAnT2JqZWN0Jykge1xyXG4gICAgICAgIHZhciBzZWxmID0gdGhpcztcclxuICAgICAgICAkLmVhY2goa2V5LCBmdW5jdGlvbiAobmFtZSwgdmFsdWUpIHtcclxuICAgICAgICAgICAgc2VsZi5leHRyYVtuYW1lXSA9IHZhbHVlO1xyXG4gICAgICAgIH0pXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgICAgICAgdmFyIHJlc3VsdDtcclxuICAgICAgICAgICAgaWYgKHRoaXMuZXh0cmFba2V5XSkge1xyXG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gdGhpcy5leHRyYVtrZXldO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuYXR0cltrZXldKSB7XHJcbiAgICAgICAgICAgICAgICByZXN1bHQgPSB0aGlzLmF0dHJba2V5XTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHJlc3VsdCA9IHRoaXNba2V5XTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuZXh0cmFba2V5XSA9IHZhbHVlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufTtcclxuLypcclxuICog5a+56LGhbGlua3PlsZ7mgKflhoXnmoTmiYDmnInnur/ov5vooYzliIfmjaJcclxuICogQGxpbmtzIG5vZGUvY29udGFpbmVy55qEbGlua3PlsZ7mgKdcclxuICogQGZuTmFtZSAnc2hvdycvJ2hpZGUn5pa55rOV5ZCNXHJcbiAqL1xyXG5mdW5jdGlvbiB0b2dnbGUobGlua3MsIGZuTmFtZSkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgICAkLmVhY2gobGlua3MsIGZ1bmN0aW9uIChuYW1lLCBhcnIpIHtcclxuICAgICAgICAgICAgYXJyLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHtcclxuICAgICAgICAgICAgICAgIGl0ZW1bZm5OYW1lXSgpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KVxyXG4gICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgIFFUb3BvLnV0aWwuZXJyb3IoXCLliIfmjaLpmpDol48v5pi+56S65pe26ZSZ6K+vXCIsIGUpO1xyXG4gICAgfVxyXG59XHJcbi8v57q/55qE5pi+56S65Y+q5pyJ5b2T5YW25Lik56uv6IqC54K56YO95pi+56S65pe25omN5pi+56S6XHJcbmZ1bmN0aW9uIHRvZ2dsZUxpbmsoZmxhZykge1xyXG4gICAgaWYgKGZsYWcpIHtcclxuICAgICAgICBpZiAodGhpcy5wYXRoLnN0YXJ0Lmp0b3BvICYmIHRoaXMucGF0aC5lbmQuanRvcG8pIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMucGF0aC5zdGFydC5qdG9wby52aXNpYmxlICYmIHRoaXMucGF0aC5lbmQuanRvcG8udmlzaWJsZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5qdG9wby52aXNpYmxlID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhpcy5qdG9wby52aXNpYmxlID0gZmFsc2U7XHJcbiAgICB9XHJcbn1cclxuZnVuY3Rpb24gdG9nZ2xlTm9kZShmbGFnKSB7XHJcbiAgICB0aGlzLmp0b3BvLnZpc2libGUgPSBmbGFnO1xyXG4gICAgdmFyIHN0cmluZyA9IGZsYWcgPyBcInNob3dcIiA6IFwiaGlkZVwiO1xyXG4gICAgdG9nZ2xlKHRoaXMubGlua3MsIHN0cmluZyk7XHJcbn1cclxuZnVuY3Rpb24gdG9nZ2xlQ29udGFpbmVyKGZsYWcpIHtcclxuICAgIHRoaXMuanRvcG8udmlzaWJsZSA9IGZsYWc7XHJcbiAgICB2YXIgc3RyaW5nID0gZmxhZyA/IFwic2hvd1wiIDogXCJoaWRlXCI7XHJcbiAgICAvL+WIh+aNouWtkOexu+aYvuekuumakOiXj1xyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmNoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgdGhpcy5jaGlsZHJlbltpXVtzdHJpbmddKCk7XHJcbiAgICB9XHJcbiAgICB0b2dnbGUodGhpcy5saW5rcywgc3RyaW5nKTtcclxufVxyXG4vKipcclxuICog6I635Y+W5YWD57Sg5Lit5b+D5Z2Q5qCHXHJcbiAqICBAbWV0aG9kIFtFXSBnZXRDZW50ZXJQb3NpdGlvblxyXG4gKiAgQHJldHVybiB7b2JqZWN0fSB7eCx5fVxyXG4gKi9cclxuRWxlbWVudC5wcm90b3R5cGUuZ2V0Q2VudGVyUG9zaXRpb24gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIHg6IHRoaXMuanRvcG8uY3gsXHJcbiAgICAgICAgeTogdGhpcy5qdG9wby5jeVxyXG4gICAgfVxyXG59O1xyXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2RldmVsb3AvY29yZS9lbGVtZW50L0VsZW1lbnQuanNcbi8vIG1vZHVsZSBpZCA9IDFcbi8vIG1vZHVsZSBjaHVua3MgPSAxIl0sInNvdXJjZVJvb3QiOiIifQ==');
},10:function(module,exports){eval('!function (window) {\r\n    function Element() {\r\n        this.initialize = function () {\r\n            this.elementType = "element", this.serializedProperties = ["elementType"], this.propertiesStack = [], this._id = "" + (new Date).getTime()\r\n        }, this.distroy = function () {\r\n        }, this.removeHandler = function () {\r\n        }, this.attr = function (a, b) {\r\n            if (null != a && null != b)this[a] = b; else if (null != a)return this[a];\r\n            return this\r\n        }, this.save = function () {\r\n            var a = this, b = {};\r\n            this.serializedProperties.forEach(function (c) {\r\n                b[c] = a[c]\r\n            }), this.propertiesStack.push(b)\r\n        }, this.restore = function () {\r\n            if (null != this.propertiesStack && 0 != this.propertiesStack.length) {\r\n                var a = this, b = this.propertiesStack.pop();\r\n                this.serializedProperties.forEach(function (c) {\r\n                    a[c] = b[c]\r\n                })\r\n            }\r\n        }, this.toJson = function () {\r\n            var a = this, b = "{", c = this.serializedProperties.length;\r\n            return this.serializedProperties.forEach(function (d, e) {\r\n                var f = a[d];\r\n                "string" == typeof f && (f = \'"\' + f + \'"\'), b += \'"\' + d + \'":\' + f, c > e + 1 && (b += ",")\r\n            }), b += "}"\r\n        }\r\n    }\r\n\r\n    /*a=this.x - this.borderWidth / 2 b=this.y - this.borderWidth / 2,*/\r\n    CanvasRenderingContext2D.prototype.JTopoRoundRect = function (a, b, w_borderWidth, h_borderWidth, borderRadius) {\r\n        //画元素圆角边框\r\n        "undefined" == typeof borderRadius && (borderRadius = 5),\r\n            this.beginPath(),\r\n            this.moveTo(a + borderRadius, b),\r\n            this.lineTo(a + w_borderWidth - borderRadius, b),\r\n            this.quadraticCurveTo(a + w_borderWidth, b, a + w_borderWidth, b + borderRadius),\r\n            this.lineTo(a + w_borderWidth, b + h_borderWidth - borderRadius),\r\n            this.quadraticCurveTo(a + w_borderWidth, b + h_borderWidth, a + w_borderWidth - borderRadius, b + h_borderWidth),\r\n            this.lineTo(a + borderRadius, b + h_borderWidth),\r\n            this.quadraticCurveTo(a, b + h_borderWidth, a, b + h_borderWidth - borderRadius),\r\n            this.lineTo(a, b + borderRadius),\r\n            this.quadraticCurveTo(a, b, a + borderRadius, b),\r\n            this.closePath()\r\n    };\r\n    CanvasRenderingContext2D.prototype.JTopoDashedLineTo = function (sX, sY, eX, eY, dashedPattern) {\r\n        //画虚线\r\n        if ("undefined" == typeof dashedPattern) {\r\n            dashedPattern = 5;\r\n        }\r\n        var dX = eX - sX;\r\n        var dY = eY - sY;\r\n        var length = Math.floor(Math.sqrt(dX * dX + dY * dY));\r\n        var dashL = 0 >= dashedPattern ? length : length / dashedPattern;\r\n        var tY = dY / length * dashedPattern;\r\n        var tX = dX / length * dashedPattern;\r\n        this.beginPath();\r\n        for (var m = 0; dashL > m; m++) {\r\n            if (m % 2) {\r\n                this.lineTo(sX + m * tX, sY + m * tY);\r\n            } else {\r\n                this.moveTo(sX + m * tX, sY + m * tY);\r\n            }\r\n        }\r\n        this.stroke();\r\n    };\r\n    var JTopo = {\r\n        version: "0.4.8_01",\r\n        zIndex_Container: 1,\r\n        zIndex_Link: 2,\r\n        zIndex_Node: 3,\r\n        SceneMode: {normal: "normal", drag: "drag", edit: "edit", select: "select"},\r\n        MouseCursor: {\r\n            normal: "default",\r\n            pointer: "pointer",\r\n            top_left: "nw-resize",\r\n            top_center: "n-resize",\r\n            top_right: "ne-resize",\r\n            middle_left: "e-resize",\r\n            middle_right: "e-resize",\r\n            bottom_left: "ne-resize",\r\n            bottom_center: "n-resize",\r\n            bottom_right: "nw-resize",\r\n            move: "move",\r\n            open_hand: "default",\r\n            closed_hand: "default"\r\n        },\r\n        createStageFromJson: function (jsonStr, canvas) {\r\n            eval("var jsonObj = " + jsonStr);\r\n            var stage = new JTopo.Stage(canvas);\r\n            for (var k in jsonObj)"childs" != k && (stage[k] = jsonObj[k]);\r\n            var scenes = jsonObj.childs;\r\n            return scenes.forEach(function (a) {\r\n                var b = new JTopo.Scene(stage);\r\n                for (var c in a)"childs" != c && (b[c] = a[c]), "background" == c && (b.background = a[c]);\r\n                var d = a.childs;\r\n                d.forEach(function (a) {\r\n                    var c = null, d = a.elementType;\r\n                    "node" == d ? c = new JTopo.Node : "CircleNode" == d && (c = new JTopo.CircleNode);\r\n                    for (var e in a)c[e] = a[e];\r\n                    b.add(c)\r\n                })\r\n            }), stage\r\n        }\r\n    };\r\n    JTopo.Element = Element;\r\n    window.JTopo = JTopo;\r\n}(window), function (JTopo) {\r\n    function MessageBus(a) {\r\n        this.name = a;\r\n        this.messageMap = {};\r\n        this.messageCount = 0;\r\n    }\r\n\r\n    MessageBus.prototype.subscribe = function (evenName, fn) {\r\n        var d = this.messageMap[evenName];\r\n        if (null == d) {\r\n            this.messageMap[evenName] = [];\r\n        }\r\n        this.messageMap[evenName].push(fn);\r\n        this.messageCount++;\r\n    };\r\n    MessageBus.prototype.unsubscribe = function (evenName, fn) {\r\n        var event = this.messageMap[evenName];\r\n        if (null != event) {\r\n            if (fn && \'function\' == typeof fn) {\r\n                var index = event.indexOf(fn);\r\n                if (index > -1) {\r\n                    event.splice(index, 1);\r\n                }\r\n            } else {\r\n                this.messageMap[evenName] = null;\r\n                delete this.messageMap[evenName];\r\n                this.messageCount--;\r\n            }\r\n        }\r\n    };\r\n    MessageBus.prototype.publish = function (evenName, e, boolean) {\r\n        var eventMap = this.messageMap[evenName];\r\n        if (null != eventMap) {\r\n            eventMap.forEach(function (fn) {\r\n                if (boolean) {\r\n                    setTimeout(function () {\r\n                        fn(e);\r\n                    });\r\n                } else {\r\n                    if (e.target && e.target.qtopo) {\r\n                        fn(e, e.target.qtopo);\r\n                    } else {\r\n                        fn(e);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    function getDistance(pointA, pointB, c, d) {\r\n        var width, height;\r\n        if (null == c && null == d) {\r\n            if (pointA && pointB) {\r\n                width = pointB.x - pointA.x;\r\n                height = pointB.y - pointA.y;\r\n            }\r\n        } else {\r\n            width = c - pointA;\r\n            height = d - pointB;\r\n        }\r\n        return Math.sqrt(width * width + height * height);\r\n    }\r\n\r\n    function getElementsBound(elements) {\r\n        var b = {\r\n            left: Number.MAX_VALUE,\r\n            right: Number.MIN_VALUE,\r\n            top: Number.MAX_VALUE,\r\n            bottom: Number.MIN_VALUE\r\n        };\r\n        elements.forEach(function (element) {\r\n            if (!(element instanceof JTopo.Link)) {\r\n                if (b.left > element.x) {\r\n                    b.left = element.x;\r\n                    b.leftNode = element;\r\n                }\r\n                if (b.right < element.x + element.width) {\r\n                    b.right = element.x + element.width;\r\n                    b.rightNode = element;\r\n                }\r\n                if (b.top > element.y) {\r\n                    b.top = element.y;\r\n                    b.topNode = element;\r\n                }\r\n                if (b.bottom < element.y + element.height) {\r\n                    b.bottom = element.y + element.height;\r\n                    b.bottomNode = element;\r\n                }\r\n            }\r\n        });\r\n        b.width = b.right - b.left;\r\n        b.height = b.bottom - b.top;\r\n        return b;\r\n    }\r\n\r\n    function getEventPosition(event) {\r\n        event = cloneEvent(event);\r\n        if (!event.pageX) {\r\n            event.pageX = event.clientX + document.body.scrollLeft - document.body.clientLeft;\r\n            event.pageY = event.clientY + document.body.scrollTop - document.body.clientTop;\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function rotatePoint(aX, aY, bX, bY, c) {\r\n        var width = bX - aX;\r\n        var height = bY - aY;\r\n        var ditance = Math.sqrt(width * width + height * height);\r\n        var i = Math.atan2(height, width) + c;\r\n        return {\r\n            x: aX + Math.cos(i) * ditance,\r\n            y: aY + Math.sin(i) * ditance\r\n        }\r\n    }\r\n\r\n    function rotatePoints(root, childs, beginAngle) {\r\n        for (var d = [], e = 0; e < childs.length; e++) {\r\n            d.push(rotatePoint(root.x, root.y, childs[e].x, childs[e].y, beginAngle));\r\n        }\r\n        return d\r\n    }\r\n\r\n    function cloneEvent(a) {\r\n        var b = {};\r\n        for (var c in a) {\r\n            if ("returnValue" != c && "keyLocation" != c) {\r\n                b[c] = a[c];\r\n            }\r\n        }\r\n        return b\r\n    }\r\n\r\n    function clone(object) {\r\n        var b = {};\r\n        for (var c in object) {\r\n            b[c] = object[c];\r\n        }\r\n        return b\r\n    }\r\n\r\n    function isPointInRect(rect, points) {\r\n        var X = points.x;\r\n        var Y = points.y;\r\n        var W = points.width;\r\n        var H = points.height;\r\n        return rect.x > X && rect.x < X + W && rect.y > Y && rect.y < Y + H;\r\n    }\r\n\r\n    function isPointInLine(points, start, end) {\r\n        var line = JTopo.util.getDistance(start, end);\r\n        var toStart = JTopo.util.getDistance(start, points);\r\n        var toEnd = JTopo.util.getDistance(end, points);\r\n        return Math.abs(toStart + toEnd - line) <= 0.5;\r\n    }\r\n\r\n    function removeFromArray(arr, item) {\r\n        for (var c = 0; c < arr.length; c++) {\r\n            var d = arr[c];\r\n            if (d === item) {\r\n                arr = arr.del(c);\r\n                break\r\n            }\r\n        }\r\n        return arr\r\n    }\r\n\r\n    function randomColor() {\r\n        return Math.floor(255 * Math.random()) + "," + Math.floor(255 * Math.random()) + "," + Math.floor(255 * Math.random())\r\n    }\r\n\r\n\r\n    function loadStageFromJson(json, canvas) {\r\n        var obj = eval(json), stage = new JTopo.Stage(canvas);\r\n        for (var k in stageObj)if ("scenes" != k)stage[k] = obj[k]; else for (var scenes = obj.scenes, i = 0; i < scenes.length; i++) {\r\n            var sceneObj = scenes[i], scene = new JTopo.Scene(stage);\r\n            for (var p in sceneObj)if ("elements" != p)scene[p] = sceneObj[p]; else for (var nodeMap = {}, elements = sceneObj.elements, m = 0; m < elements.length; m++) {\r\n                var elementObj = elements[m], type = elementObj.elementType, element;\r\n                "Node" == type && (element = new JTopo.Node);\r\n                for (var mk in elementObj)element[mk] = elementObj[mk];\r\n                nodeMap[element.text] = element, scene.add(element)\r\n            }\r\n        }\r\n        return console.log(stage), stage\r\n    }\r\n\r\n    function changeColor(ctx, image, color) {\r\n        var colorArr = color.split(",");\r\n        var R = parseInt(colorArr[0]);\r\n        var G = parseInt(colorArr[1]);\r\n        var B = parseInt(colorArr[2]);\r\n        var imageWidth = canvas.width = image.width;\r\n        var imageHeight = canvas.height = image.height;\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        ctx.drawImage(image, 0, 0);\r\n        var ImageData = ctx.getImageData(0, 0, image.width, image.height);\r\n        var data = ImageData.data;\r\n        for (var i = 0; imageWidth > i; i++) {\r\n            for (var j = 0; imageHeight > j; j++) {\r\n                var n = 4 * (i + j * imageWidth);\r\n                if (0 != data[n + 3]) {\r\n                    if (null != R) {\r\n                        data[n + 0] += R;\r\n                    }\r\n                    if (null != G) {\r\n                        data[n + 1] += G;\r\n                    }\r\n                    if (null != B) {\r\n                        data[n + 2] += B;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        ctx.putImageData(ImageData, 0, 0, 0, 0, image.width, image.height);\r\n        return canvas.toDataURL();\r\n    }\r\n\r\n    function genImageAlarm(image, color) {\r\n        var src = image.src + color;\r\n        if (alarmImageCache[src])return alarmImageCache[src];\r\n        var newImage = new Image;\r\n        newImage.src = changeColor(graphics, image, color);\r\n        alarmImageCache[src] = newImage;\r\n        return newImage;\r\n    }\r\n\r\n    function getOffsetPosition(canvas) {\r\n        if (!canvas) {\r\n            return {left: 0, top: 0};\r\n        }\r\n        var b = 0, c = 0;\r\n        if ("getBoundingClientRect" in document.documentElement) {\r\n            var d = canvas.getBoundingClientRect();\r\n            var e = canvas.ownerDocument;\r\n            var f = e.body;\r\n            var g = e.documentElement;\r\n            var h = g.clientTop || f.clientTop || 0;\r\n            var i = g.clientLeft || f.clientLeft || 0;\r\n            b = d.top + (self.pageYOffset || g && g.scrollTop || f.scrollTop) - h;\r\n            c = d.left + (self.pageXOffset || g && g.scrollLeft || f.scrollLeft) - i;\r\n\r\n        } else {\r\n            do {\r\n                b += canvas.offsetTop || 0;\r\n                c += canvas.offsetLeft || 0;\r\n                canvas = canvas.offsetParent;\r\n            } while (canvas);\r\n        }\r\n        return {left: c, top: b}\r\n    }\r\n\r\n    function lineF(x1, y1, x2, y2) {\r\n        function e(a) {\r\n            return a * f + g\r\n        }\r\n\r\n        var f = (y2 - y1) / (x2 - x1), g = y1 - x1 * f;\r\n        return e.k = f, e.b = g, e.x1 = x1, e.x2 = x2, e.y1 = y1, e.y2 = y2, e\r\n    }\r\n\r\n    function inRange(a, b, c) {\r\n        var d = Math.abs(b - c), e = Math.abs(b - a), f = Math.abs(c - a), g = Math.abs(d - (e + f));\r\n        return 1e-6 > g ? !0 : !1\r\n    }\r\n\r\n    function isPointInLineSeg(a, b, c) {\r\n        return inRange(a, c.x1, c.x2) && inRange(b, c.y1, c.y2)\r\n    }\r\n\r\n    function intersection(a, b) {\r\n        var c, d;\r\n        return a.k == b.k ? null : (1 / 0 == a.k || a.k == -1 / 0 ? (c = a.x1, d = b(a.x1)) : 1 / 0 == b.k || b.k == -1 / 0 ? (c = b.x1, d = a(b.x1)) : (c = (b.b - a.b) / (a.k - b.k), d = a(c)), 0 == isPointInLineSeg(c, d, a) ? null : 0 == isPointInLineSeg(c, d, b) ? null : {\r\n            x: c,\r\n            y: d\r\n        })\r\n    }\r\n\r\n    function intersectionLineBound(link, bound) {\r\n        var c = JTopo.util.lineF(bound.left, bound.top, bound.left, bound.bottom);\r\n        var d = JTopo.util.intersection(link, c);\r\n        if (null == d) {\r\n            c = JTopo.util.lineF(bound.left, bound.top, bound.right, bound.top);\r\n            d = JTopo.util.intersection(link, c);\r\n            if (null == d) {\r\n                c = JTopo.util.lineF(bound.right, bound.top, bound.right, bound.bottom);\r\n                d = JTopo.util.intersection(link, c);\r\n                if (null == d) {\r\n                    c = JTopo.util.lineF(bound.left, bound.bottom, bound.right, bound.bottom);\r\n                    d = JTopo.util.intersection(link, c);\r\n                }\r\n            }\r\n        }\r\n\r\n        return d;\r\n    }\r\n\r\n    window.requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame || function (a) {\r\n            setTimeout(a, 1e3 / 24)\r\n        };\r\n    Array.prototype.del = function (item) {\r\n        if ("number" != typeof item) {\r\n            var index = this.indexOf(item);\r\n            if (index > -1) {\r\n                this.splice(index, 1);\r\n            }\r\n            return this\r\n        } else {\r\n            if (item > -1) {\r\n                this.splice(item, 1);\r\n            }\r\n            return this;\r\n        }\r\n    };\r\n    if (![].indexOf) {\r\n        Array.prototype.indexOf = function (a) {\r\n            for (var i = 0; i < this.length; i++) {\r\n                if (this[i] === a) {\r\n                    return i;\r\n                }\r\n            }\r\n            return -1;\r\n        }\r\n    }\r\n    window.console || (window.console = {\r\n        log: function () {\r\n        }, info: function () {\r\n        }, debug: function () {\r\n        }, warn: function () {\r\n        }, error: function () {\r\n        }\r\n    });\r\n    var canvas = document.createElement("canvas"), graphics = canvas.getContext("2d"), alarmImageCache = {};\r\n    JTopo.util = {\r\n        rotatePoint: rotatePoint,\r\n        rotatePoints: rotatePoints,\r\n        getDistance: getDistance,\r\n        getEventPosition: getEventPosition,\r\n        MessageBus: MessageBus,\r\n        isFirefox: navigator.userAgent.indexOf("Firefox") > 0,\r\n        isIE: !(!window.attachEvent || -1 !== navigator.userAgent.indexOf("Opera")),\r\n        isChrome: null != navigator.userAgent.toLowerCase().match(/chrome/),\r\n        clone: clone,\r\n        isPointInRect: isPointInRect,\r\n        isPointInLine: isPointInLine,\r\n        removeFromArray: removeFromArray,\r\n        cloneEvent: cloneEvent,\r\n        randomColor: randomColor,\r\n        loadStageFromJson: loadStageFromJson,\r\n        getElementsBound: getElementsBound,\r\n        genImageAlarm: genImageAlarm,\r\n        getOffsetPosition: getOffsetPosition,\r\n        lineF: lineF,\r\n        intersection: intersection,\r\n        intersectionLineBound: intersectionLineBound\r\n    }\r\n}(JTopo),\r\n    function (jtopo) {\r\n        function initEagleEye(stage) {\r\n            return {\r\n                hgap: 16,\r\n                visible: !1,\r\n                exportCanvas: document.createElement("canvas"),\r\n                getImage: function (b, c) {\r\n                    var d = stage.getBound();\r\n                    var e = 1;\r\n                    var f = 1;\r\n                    this.exportCanvas.width = stage.canvas.width;\r\n                    this.exportCanvas.height = stage.canvas.height;\r\n                    if (null != b && null != c) {\r\n                        this.exportCanvas.width = b;\r\n                        this.exportCanvas.height = c;\r\n                        e = b / d.width;\r\n                        f = c / d.height;\r\n                    } else {\r\n                        if (d.width > stage.canvas.width) {\r\n                            this.exportCanvas.width = d.width;\r\n                        }\r\n                        if (d.height > stage.canvas.height) {\r\n                            this.exportCanvas.height = d.height;\r\n                        }\r\n                    }\r\n                    var g = this.exportCanvas.getContext("2d");\r\n                    if (stage.childs.length > 0) {\r\n                        g.save();\r\n                        g.clearRect(0, 0, this.exportCanvas.width, this.exportCanvas.height);\r\n                        stage.childs.forEach(function (a) {\r\n                            if (1 == a.visible) {\r\n                                a.save();\r\n                                a.translateX = 0;\r\n                                a.translateY = 0;\r\n                                a.scaleX = 1;\r\n                                a.scaleY = 1;\r\n                                g.scale(e, f);\r\n                                if (d.left < 0) {\r\n                                    a.translateX = Math.abs(d.left)\r\n                                }\r\n                                if (d.top < 0) {\r\n                                    a.translateY = Math.abs(d.top)\r\n                                }\r\n                                a.paintAll = !0;\r\n                                a.repaint(g);\r\n                                a.paintAll = !1;\r\n                                a.restore();\r\n                            }\r\n                        });\r\n                        g.restore();\r\n                    }\r\n                    return this.exportCanvas.toDataURL("image/png");\r\n                },\r\n                canvas: document.createElement("canvas"),\r\n                update: function () {\r\n                    this.eagleImageDatas = this.getData(stage);\r\n                },\r\n                setSize: function (a, b) {\r\n                    this.width = this.canvas.width = a;\r\n                    this.height = this.canvas.height = b;\r\n                },\r\n                getData: function (b, c) {\r\n                    function d(a) {\r\n                        var b = a.stage.canvas.width, c = a.stage.canvas.height, d = b / a.scaleX / 2, e = c / a.scaleY / 2;\r\n                        return {translateX: a.translateX + d - d * a.scaleX, translateY: a.translateY + e - e * a.scaleY}\r\n                    }\r\n\r\n                    null != j && null != k ? this.setSize(b, c) : this.setSize(200, 160);\r\n                    var e = this.canvas.getContext("2d");\r\n                    if (stage.childs.length > 0) {\r\n                        e.save(), e.clearRect(0, 0, this.canvas.width, this.canvas.height), stage.childs.forEach(function (a) {\r\n                            1 == a.visible && (a.save(), a.centerAndZoom(null, null, e), a.repaint(e), a.restore())\r\n                        });\r\n                        var f = d(stage.childs[0]), g = f.translateX * (this.canvas.width / stage.canvas.width) * stage.childs[0].scaleX, h = f.translateY * (this.canvas.height / stage.canvas.height) * stage.childs[0].scaleY, i = stage.getBound(), j = stage.canvas.width / stage.childs[0].scaleX / i.width, k = stage.canvas.height / stage.childs[0].scaleY / i.height;\r\n                        j > 1 && (j = 1), k > 1 && (j = 1), g *= j, h *= k, i.left < 0 && (g -= Math.abs(i.left) * (this.width / i.width)), i.top < 0 && (h -= Math.abs(i.top) * (this.height / i.height)), e.save(), e.lineWidth = 1, e.strokeStyle = "rgba(255,0,0,1)", e.strokeRect(-g, -h, e.canvas.width * j, e.canvas.height * k), e.restore();\r\n                        var l = null;\r\n                        try {\r\n                            l = e.getImageData(0, 0, e.canvas.width, e.canvas.height)\r\n                        } catch (m) {\r\n                        }\r\n                        return l\r\n                    }\r\n                    return null\r\n                },\r\n                paint: function () {\r\n                    if (null != this.eagleImageDatas) {\r\n                        var b = stage.graphics;\r\n                        b.save();\r\n                        b.fillStyle = "rgba(211,211,211,0.3)";\r\n                        b.fillRect(stage.canvas.width - this.canvas.width - 2 * this.hgap, stage.canvas.height - this.canvas.height - 1, stage.canvas.width - this.canvas.width, this.canvas.height + 1);\r\n                        b.fill();\r\n                        b.save();\r\n                        b.lineWidth = 1;\r\n                        b.strokeStyle = "rgba(0,0,0,1)";\r\n                        b.rect(stage.canvas.width - this.canvas.width - 2 * this.hgap, stage.canvas.height - this.canvas.height - 1, stage.canvas.width - this.canvas.width, this.canvas.height + 1);\r\n                        b.stroke();\r\n                        b.restore();\r\n                        b.putImageData(this.eagleImageDatas, stage.canvas.width - this.canvas.width - this.hgap, stage.canvas.height - this.canvas.height);\r\n                        b.restore()\r\n                    } else {\r\n                        this.eagleImageDatas = this.getData(stage);\r\n                    }\r\n                },\r\n                eventHandler: function (a, b, c) {\r\n                    var d = b.x, e = b.y;\r\n                    if (d > c.canvas.width - this.canvas.width && e > c.canvas.height - this.canvas.height) {\r\n                        if (d = b.x - this.canvas.width, e = b.y - this.canvas.height, "mousedown" == a && (this.lastTranslateX = c.childs[0].translateX, this.lastTranslateY = c.childs[0].translateY), "mousedrag" == a && c.childs.length > 0) {\r\n                            var f = b.dx, g = b.dy, h = c.getBound(), i = this.canvas.width / c.childs[0].scaleX / h.width, j = this.canvas.height / c.childs[0].scaleY / h.height;\r\n                            c.childs[0].translateX = this.lastTranslateX - f / i, c.childs[0].translateY = this.lastTranslateY - g / j\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function stage(canvas) {\r\n            function getEventObject(event) {\r\n                var eventPosition = jtopo.util.getEventPosition(event);\r\n                var offsetPosition = jtopo.util.getOffsetPosition(theStage.canvas);\r\n                eventPosition.offsetLeft = eventPosition.pageX - offsetPosition.left;\r\n                eventPosition.offsetTop = eventPosition.pageY - offsetPosition.top;\r\n                eventPosition.x = eventPosition.offsetLeft;\r\n                eventPosition.y = eventPosition.offsetTop;\r\n                eventPosition.target = null;\r\n                return eventPosition;\r\n            }\r\n\r\n            function mouseOver(event) {\r\n                document.onselectstart = function () {\r\n                    return !1\r\n                }, this.mouseOver = !0;\r\n                var b = getEventObject(event);\r\n                theStage.dispatchEventToScenes("mouseover", b), theStage.dispatchEvent("mouseover", b)\r\n            }\r\n\r\n            function mouseOut(a) {\r\n                p = setTimeout(function () {\r\n                    o = !0\r\n                }, 500), document.onselectstart = function () {\r\n                    return !0\r\n                };\r\n                var b = getEventObject(a);\r\n                theStage.dispatchEventToScenes("mouseout", b), theStage.dispatchEvent("mouseout", b), theStage.needRepaint = 0 == theStage.animate ? !1 : !0\r\n            }\r\n\r\n            function mouseDown(a) {\r\n                var b = getEventObject(a);\r\n                theStage.mouseDown = !0, theStage.mouseDownX = b.x, theStage.mouseDownY = b.y, theStage.dispatchEventToScenes("mousedown", b), theStage.dispatchEvent("mousedown", b)\r\n            }\r\n\r\n            function mouseUp(a) {\r\n                var b = getEventObject(a);\r\n                theStage.dispatchEventToScenes("mouseup", b), theStage.dispatchEvent("mouseup", b), theStage.mouseDown = !1, theStage.needRepaint = 0 == theStage.animate ? !1 : !0\r\n            }\r\n\r\n            function mouseMove(event) {\r\n                if (p) {\r\n                    window.clearTimeout(p);\r\n                    p = null;\r\n                }\r\n                o = !1;\r\n                var b = getEventObject(event);\r\n                if (theStage.mouseDown) {\r\n                    if (0 == event.button) {\r\n                        b.dx = b.x - theStage.mouseDownX;\r\n                        b.dy = b.y - theStage.mouseDownY;\r\n                        theStage.dispatchEventToScenes("mousedrag", b);\r\n                        theStage.dispatchEvent("mousedrag", b);\r\n                        if (1 == theStage.eagleEye.visible) {\r\n                            theStage.eagleEye.update();\r\n                        }\r\n                    }\r\n                } else {\r\n                    theStage.dispatchEventToScenes("mousemove", b);\r\n                    theStage.dispatchEvent("mousemove", b);\r\n                }\r\n            }\r\n\r\n            function click(a) {\r\n                var b = getEventObject(a);\r\n                theStage.dispatchEventToScenes("click", b), theStage.dispatchEvent("click", b)\r\n            }\r\n\r\n            function dbclick(a) {\r\n                var b = getEventObject(a);\r\n                theStage.dispatchEventToScenes("dbclick", b), theStage.dispatchEvent("dbclick", b)\r\n            }\r\n\r\n            function mouseWheel(a) {\r\n                var b = getEventObject(a);\r\n                theStage.dispatchEventToScenes("mousewheel", b), theStage.dispatchEvent("mousewheel", b), null != theStage.wheelZoom && (a.preventDefault ? a.preventDefault() : (a = a || window.event, a.returnValue = !1), 1 == theStage.eagleEye.visible && theStage.eagleEye.update())\r\n            }\r\n\r\n            function addEventInCanvas(canvas) {\r\n                if (jtopo.util.isIE || !window.addEventListener) {\r\n                    canvas.onmouseout = mouseOut;\r\n                    canvas.onmouseover = mouseOver;\r\n                    canvas.onmousedown = mouseDown;\r\n                    canvas.onmouseup = mouseUp;\r\n                    canvas.onmousemove = mouseMove;\r\n                    canvas.onclick = click;\r\n                    canvas.ondblclick = dbclick;\r\n                    canvas.onmousewheel = mouseWheel;\r\n                    canvas.touchstart = mouseDown;\r\n                    canvas.touchmove = mouseMove;\r\n                    canvas.touchend = mouseUp;\r\n                } else {\r\n                    canvas.addEventListener("mouseout", mouseOut);\r\n                    canvas.addEventListener("mouseover", mouseOver);\r\n                    canvas.addEventListener("mousedown", mouseDown);\r\n                    canvas.addEventListener("mouseup", mouseUp);\r\n                    canvas.addEventListener("mousemove", mouseMove);\r\n                    canvas.addEventListener("click", click);\r\n                    canvas.addEventListener("dblclick", dbclick);\r\n                    if (jtopo.util.isFirefox) {\r\n                        canvas.addEventListener("DOMMouseScroll", mouseWheel);\r\n                    } else {\r\n                        canvas.addEventListener("mousewheel", mouseWheel);\r\n                    }\r\n                }\r\n                if (window.addEventListener) {\r\n                    window.addEventListener("keydown", function (event) {\r\n                        theStage.dispatchEventToScenes("keydown", jtopo.util.cloneEvent(event));\r\n                        var keyCode = event.keyCode;\r\n                        if (37 == keyCode || 38 == keyCode || 39 == keyCode || 40 == keyCode) {\r\n                            if (event.preventDefault) {\r\n                                event.preventDefault()\r\n                            } else {\r\n                                event = event || window.event;\r\n                                event.returnValue = !1;\r\n                            }\r\n                        }\r\n                    }, !0);\r\n                    window.addEventListener("keyup", function (event) {\r\n                        theStage.dispatchEventToScenes("keyup", jtopo.util.cloneEvent(event));\r\n                        var keyCode = event.keyCode;\r\n                        if (37 == keyCode || 38 == keyCode || 39 == keyCode || 40 == keyCode) {\r\n                            if (event.preventDefault) {\r\n                                event.preventDefault()\r\n                            } else {\r\n                                event = event || window.event;\r\n                                event.returnValue = !1;\r\n                            }\r\n                        }\r\n                    }, !0);\r\n                }\r\n            }\r\n\r\n            jtopo.stage = this;\r\n            var theStage = this;\r\n            var self = this;\r\n            this.initialize = function (canvas) {\r\n                addEventInCanvas(canvas);\r\n                this.canvas = canvas;\r\n                this.graphics = canvas.getContext("2d");\r\n                this.childs = [];\r\n                this.frames = 24;\r\n                this.messageBus = new jtopo.util.MessageBus;\r\n                this.eagleEye = initEagleEye(this);\r\n                this.wheelZoom = null;\r\n                this.mouseDownX = 0;\r\n                this.mouseDownY = 0;\r\n                this.mouseDown = !1;\r\n                this.mouseOver = !1;\r\n                this.needRepaint = !0;\r\n                this.serializedProperties = ["frames", "wheelZoom"];\r\n            };\r\n            if (null != canvas) {\r\n                this.initialize(canvas);\r\n            }\r\n            var o = !0, p = null;\r\n            document.oncontextmenu = function () {\r\n                return o\r\n            };\r\n            this.dispatchEventToScenes = function (a, b) {\r\n                if (0 != this.frames && (this.needRepaint = !0), 1 == this.eagleEye.visible && -1 != a.indexOf("mouse")) {\r\n                    var c = b.x, d = b.y;\r\n                    if (c > this.width - this.eagleEye.width && d > this.height - this.eagleEye.height)return void this.eagleEye.eventHandler(a, b, this)\r\n                }\r\n                this.childs.forEach(function (c) {\r\n                    if (1 == c.visible) {\r\n                        var d = c[a + "Handler"];\r\n                        if (null == d)throw new Error("Function not found:" + a + "Handler");\r\n                        d.call(c, b)\r\n                    }\r\n                })\r\n            };\r\n            this.add = function (a) {\r\n                for (var b = 0; b < this.childs.length; b++)if (this.childs[b] === a)return;\r\n                a.addTo(this), this.childs.push(a)\r\n            };\r\n            this.remove = function (a) {\r\n                if (null == a)throw new Error("Stage.remove出错: 参数为null!");\r\n                for (var b = 0; b < this.childs.length; b++)if (this.childs[b] === a)return a.stage = null, this.childs = this.childs.del(b), this;\r\n                return this\r\n            };\r\n            this.clear = function () {\r\n                this.childs = []\r\n            };\r\n            this.addEventListener = function (eventName, fn) {\r\n                var self = this;\r\n                var b = function (e) {\r\n                    fn.call(self, e);\r\n                };\r\n                this.messageBus.subscribe(eventName, fn);\r\n                return this;\r\n            };\r\n            this.removeEventListener = function (a, f) {\r\n                this.messageBus.unsubscribe(a, f)\r\n            };\r\n            this.removeAllEventListener = function () {\r\n                this.messageBus = new jtopo.util.MessageBus\r\n            };\r\n            this.dispatchEvent = function (a, b) {\r\n                this.messageBus.publish(a, b);\r\n                return this;\r\n            };\r\n            var q = "click,dbclick,mousedown,mouseup,mouseover,mouseout,mousemove,mousedrag,mousewheel,touchstart,touchmove,touchend,keydown,keyup".split(","), r = this;\r\n            q.forEach(function (a) {\r\n                r[a] = function (b) {\r\n                    null != b ? this.addEventListener(a, b) : this.dispatchEvent(a)\r\n                }\r\n            });\r\n            this.saveImageInfo = function (a, b) {\r\n                var c = this.eagleEye.getImage(a, b), d = window.open("about:blank");\r\n                return d.document.write("<img src=\'" + c + "\' alt=\'from canvas\'/>"), this\r\n            };\r\n            this.saveAsLocalImage = function (a, b) {\r\n                var c = this.eagleEye.getImage(a, b);\r\n                return c.replace("image/png", "image/octet-stream"), window.location.href = c, this\r\n            };\r\n            this.paint = function () {\r\n                null != this.canvas && (this.graphics.save(), this.graphics.clearRect(0, 0, this.width, this.height), this.childs.forEach(function (a) {\r\n                    1 == a.visible && a.repaint(theStage.graphics)\r\n                }), 1 == this.eagleEye.visible && this.eagleEye.paint(this), this.graphics.restore())\r\n            };\r\n            this.repaint = function () {\r\n                0 != this.frames && (this.frames < 0 && 0 == this.needRepaint || (this.paint(), this.frames < 0 && (this.needRepaint = !1)))\r\n            };\r\n            this.zoom = function (a) {\r\n                this.childs.forEach(function (b) {\r\n                    0 != b.visible && b.zoom(a)\r\n                })\r\n            };\r\n            this.zoomOut = function (a) {\r\n                this.childs.forEach(function (b) {\r\n                    0 != b.visible && b.zoomOut(a)\r\n                })\r\n            };\r\n            this.zoomIn = function (a) {\r\n                this.childs.forEach(function (b) {\r\n                    0 != b.visible && b.zoomIn(a)\r\n                })\r\n            };\r\n            this.centerAndZoom = function () {\r\n                this.childs.forEach(function (a) {\r\n                    0 != a.visible && a.centerAndZoom()\r\n                })\r\n            };\r\n            this.setCenter = function (a, b) {\r\n                var c = this;\r\n                this.childs.forEach(function (d) {\r\n                    var e = a - c.canvas.width / 2, f = b - c.canvas.height / 2;\r\n                    d.translateX = -e, d.translateY = -f\r\n                })\r\n            };\r\n            this.getBound = function () {\r\n                var a = {left: Number.MAX_VALUE, right: Number.MIN_VALUE, top: Number.MAX_VALUE, bottom: Number.MIN_VALUE};\r\n                return this.childs.forEach(function (b) {\r\n                    var c = b.getElementsBound();\r\n                    c.left < a.left && (a.left = c.left, a.leftNode = c.leftNode), c.top < a.top && (a.top = c.top, a.topNode = c.topNode), c.right > a.right && (a.right = c.right, a.rightNode = c.rightNode), c.bottom > a.bottom && (a.bottom = c.bottom, a.bottomNode = c.bottomNode)\r\n                }), a.width = a.right - a.left, a.height = a.bottom - a.top, a\r\n            };\r\n            this.toJson = function () {\r\n                {\r\n                    var b = this, c = \'{"version":"\' + jtopo.version + \'",\';\r\n                    this.serializedProperties.length\r\n                }\r\n                return this.serializedProperties.forEach(function (a) {\r\n                    var d = b[a];\r\n                    "string" == typeof d && (d = \'"\' + d + \'"\'), c += \'"\' + a + \'":\' + d + ","\r\n                }), c += \'"childs":[\', this.childs.forEach(function (a) {\r\n                    c += a.toJson()\r\n                }), c += "]", c += "}"\r\n            }, function () {\r\n                if (0 == theStage.frames) {\r\n                    setTimeout(arguments.callee, 100);\r\n                } else if (theStage.frames < 0) {\r\n                    theStage.repaint();\r\n                    setTimeout(arguments.callee, 1e3 / -theStage.frames);\r\n                } else {\r\n                    theStage.repaint();\r\n                    setTimeout(arguments.callee, 1e3 / theStage.frames);\r\n                }\r\n            }();\r\n            setTimeout(function () {\r\n                theStage.mousewheel(function (a) {\r\n                    var direction = null == a.wheelDelta ? a.detail : a.wheelDelta;\r\n                    if (null != self.wheelZoom) {\r\n                        if (direction < 0) {\r\n                            self.zoomIn(self.wheelZoom);\r\n                        } else {\r\n                            self.zoomOut(self.wheelZoom);\r\n                        }\r\n                    }\r\n                });\r\n                theStage.paint();\r\n            }, 300);\r\n            setTimeout(function () {\r\n                theStage.paint()\r\n            }, 1e3);\r\n            setTimeout(function () {\r\n                theStage.paint()\r\n            }, 3e3);\r\n        }\r\n\r\n        stage.prototype = {\r\n            get width() {\r\n                return this.canvas.width\r\n            }, get height() {\r\n                return this.canvas.height\r\n            }, set cursor(a) {\r\n                this.canvas.style.cursor = a\r\n            }, get cursor() {\r\n                return this.canvas.style.cursor\r\n            }, set mode(a) {\r\n                this.childs.forEach(function (b) {\r\n                    b.mode = a\r\n                })\r\n            }\r\n        }, jtopo.Stage = stage\r\n    }(JTopo),\r\n    function (jtopo) {\r\n        function scene(c) {\r\n            function d(a, b, c, d) {\r\n                return function (e) {\r\n                    e.beginPath(), e.strokeStyle = "rgba(0,0,236,0.5)", e.fillStyle = "rgba(0,0,236,0.1)", e.rect(a, b, c, d), e.fill(), e.stroke(), e.closePath()\r\n                }\r\n            }\r\n\r\n            var scene_self = this;\r\n            this.initialize = function () {\r\n                scene.prototype.initialize.apply(this, arguments);\r\n                this.messageBus = new jtopo.util.MessageBus;\r\n                this.elementType = "scene";\r\n                this.childs = [];\r\n                this.zIndexMap = {};\r\n                this.zIndexArray = [];\r\n                this.backgroundColor = "255,255,255";\r\n                this.visible = !0;\r\n                this.alpha = 0;\r\n                this.scaleX = 1;\r\n                this.scaleY = 1;\r\n                this.mode = jtopo.SceneMode.normal;\r\n                this.translate = !0;\r\n                this.translateX = 0;\r\n                this.translateY = 0;\r\n                this.lastTranslateX = 0;\r\n                this.lastTranslateY = 0;\r\n                this.mouseDown = !1;\r\n                this.mouseDownX = null;\r\n                this.mouseDownY = null;\r\n                this.mouseDownEvent = null;\r\n                this.areaSelect = !0;\r\n                this.operations = [];\r\n                this.selectedElements = [];\r\n                this.paintAll = !1;\r\n                var c = "background,backgroundColor,mode,paintAll,areaSelect,translate,translateX,translateY,lastTranslatedX,lastTranslatedY,alpha,visible,scaleX,scaleY".split(",");\r\n                this.serializedProperties = this.serializedProperties.concat(c);\r\n            };\r\n            this.initialize();\r\n            this.setBackground = function (a) {\r\n                this.background = a\r\n            };\r\n            this.addTo = function (a) {\r\n                this.stage !== a && null != a && (this.stage = a)\r\n            };\r\n            null != c && (c.add(this), this.addTo(c)), this.show = function () {\r\n                this.visible = !0\r\n            };\r\n            this.hide = function () {\r\n                this.visible = !1\r\n            };\r\n            this.paint = function (a) {\r\n                if (0 != this.visible && null != this.stage) {\r\n                    if (a.save(), this.paintBackgroud(a), a.restore(), a.save(), a.scale(this.scaleX, this.scaleY), 1 == this.translate) {\r\n                        var b = this.getOffsetTranslate(a);\r\n                        a.translate(b.translateX, b.translateY)\r\n                    }\r\n                    this.paintChilds(a), a.restore(), a.save(), this.paintOperations(a, this.operations), a.restore()\r\n                }\r\n            };\r\n            this.repaint = function (a) {\r\n                0 != this.visible && this.paint(a)\r\n            };\r\n            this.paintBackgroud = function (a) {\r\n                null != this.background ? a.drawImage(this.background, 0, 0, a.canvas.width, a.canvas.height) : (a.beginPath(), a.fillStyle = "rgba(" + this.backgroundColor + "," + this.alpha + ")", a.fillRect(0, 0, a.canvas.width, a.canvas.height), a.closePath())\r\n            };\r\n            this.getDisplayedElements = function () {\r\n                for (var a = [], b = 0; b < this.zIndexArray.length; b++)for (var c = this.zIndexArray[b], d = this.zIndexMap[c], e = 0; e < d.length; e++) {\r\n                    var f = d[e];\r\n                    this.isVisiable(f) && a.push(f)\r\n                }\r\n                return a\r\n            };\r\n            this.getDisplayedNodes = function () {\r\n                for (var b = [], c = 0; c < this.childs.length; c++) {\r\n                    var d = this.childs[c];\r\n                    d instanceof jtopo.Node && this.isVisiable(d) && b.push(d)\r\n                }\r\n                return b\r\n            };\r\n            this.paintChilds = function (context) {\r\n                for (var i = 0; i < this.zIndexArray.length; i++) {\r\n                    var zIndex = this.zIndexArray[i];\r\n                    var zIndexElements = this.zIndexMap[zIndex];\r\n                    for (var j = 0; j < zIndexElements.length; j++) {\r\n                        var element = zIndexElements[j];\r\n                        if (1 == this.paintAll || this.isVisiable(element)) {\r\n                            context.save();\r\n                            if (1 == element.transformAble) {\r\n                                var center = element.getCenterLocation();\r\n                                context.translate(center.x, center.y);\r\n                                if (element.rotate) {\r\n                                    context.rotate(element.rotate);\r\n                                }\r\n                                if (element.scaleX && element.scaleY) {\r\n                                    context.scale(element.scaleX, element.scaleY)\r\n                                } else if (element.scaleX) {\r\n                                    context.scale(element.scaleX, 1);\r\n                                } else if (element.scaleY) {\r\n                                    context.scale(1, element.scaleY);\r\n                                }\r\n                            }\r\n                            if (1 == element.shadow) {\r\n                                context.shadowBlur = element.shadowBlur;\r\n                                context.shadowColor = element.shadowColor;\r\n                                context.shadowOffsetX = element.shadowOffsetX;\r\n                                context.shadowOffsetY = element.shadowOffsetY;\r\n                            }\r\n                            if (element instanceof jtopo.InteractiveElement) {\r\n                                if (element.selected && 1 == element.showSelected) {\r\n                                    element.paintSelected(context)\r\n                                }\r\n                                if (1 == element.isMouseOver) {\r\n                                    element.paintMouseover(context)\r\n                                }\r\n                            }\r\n                            element.paint(context);\r\n                            context.restore();\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            this.getOffsetTranslate = function (a) {\r\n                var b = this.stage.canvas.width, c = this.stage.canvas.height;\r\n                null != a && "move" != a && (b = a.canvas.width, c = a.canvas.height);\r\n                var d = b / this.scaleX / 2, e = c / this.scaleY / 2, f = {translateX: this.translateX + (d - d * this.scaleX), translateY: this.translateY + (e - e * this.scaleY)};\r\n                return f\r\n            };\r\n            this.isVisiable = function (b) {\r\n                if (1 != b.visible)return !1;\r\n                if (b instanceof jtopo.Link)return !0;\r\n                var c = this.getOffsetTranslate(), d = b.x + c.translateX, e = b.y + c.translateY;\r\n                d *= this.scaleX, e *= this.scaleY;\r\n                var f = d + b.width * this.scaleX, g = e + b.height * this.scaleY;\r\n                return d > this.stage.canvas.width || e > this.stage.canvas.height || 0 > f || 0 > g ? !1 : !0\r\n            };\r\n            this.paintOperations = function (a, b) {\r\n                for (var c = 0; c < b.length; c++)b[c](a)\r\n            };\r\n            this.findElements = function (a) {\r\n                for (var b = [], c = 0; c < this.childs.length; c++)1 == a(this.childs[c]) && b.push(this.childs[c]);\r\n                return b\r\n            };\r\n            this.getElementsByClass = function (a) {\r\n                return this.findElements(function (b) {\r\n                    return b instanceof a\r\n                })\r\n            };\r\n            this.addOperation = function (a) {\r\n                return this.operations.push(a), this\r\n            };\r\n            this.clearOperations = function () {\r\n                return this.operations = [], this\r\n            };\r\n            this.getElementByXY = function (b, c) {\r\n                for (var d = null, e = this.zIndexArray.length - 1; e >= 0; e--)for (var f = this.zIndexArray[e], g = this.zIndexMap[f], h = g.length - 1; h >= 0; h--) {\r\n                    var i = g[h];\r\n                    if (i instanceof jtopo.InteractiveElement && this.isVisiable(i) && i.isInBound(b, c))return d = i\r\n                }\r\n                return d\r\n            };\r\n            this.add = function (a) {\r\n                this.childs.push(a);\r\n                if (null == this.zIndexMap[a.zIndex]) {\r\n                    this.zIndexMap[a.zIndex] = [];\r\n                    this.zIndexArray.push(a.zIndex);\r\n                    this.zIndexArray.sort(function (a, b) {\r\n                        return a - b\r\n                    });\r\n                }\r\n                this.zIndexMap["" + a.zIndex].push(a);\r\n            };\r\n            this.remove = function (item) {\r\n                this.childs = jtopo.util.removeFromArray(this.childs, item);\r\n                var elements = this.zIndexMap[item.zIndex];\r\n                if (elements) {\r\n                    this.zIndexMap[item.zIndex] = jtopo.util.removeFromArray(elements, item);\r\n                }\r\n                item.removeHandler(this);\r\n            };\r\n            this.clear = function () {\r\n                var self = this;\r\n                this.childs.forEach(function (child) {\r\n                    child.removeHandler(self);\r\n                });\r\n                this.childs = [];\r\n                this.operations = [];\r\n                this.zIndexArray = [];\r\n                this.zIndexMap = {};\r\n            };\r\n            this.addToSelected = function (a) {\r\n                this.selectedElements.push(a)\r\n            };\r\n            this.cancleAllSelected = function (a) {\r\n                for (var b = 0; b < this.selectedElements.length; b++)this.selectedElements[b].unselectedHandler(a);\r\n                this.selectedElements = []\r\n            };\r\n            this.notInSelectedNodes = function (a) {\r\n                for (var b = 0; b < this.selectedElements.length; b++)if (a === this.selectedElements[b])return !1;\r\n                return !0\r\n            };\r\n            this.removeFromSelected = function (a) {\r\n                for (var b = 0; b < this.selectedElements.length; b++) {\r\n                    var c = this.selectedElements[b];\r\n                    a === c && (this.selectedElements = this.selectedElements.del(b))\r\n                }\r\n            };\r\n            this.toSceneEvent = function (b) {\r\n                var c = jtopo.util.clone(b);\r\n                if (c.x /= this.scaleX, c.y /= this.scaleY, 1 == this.translate) {\r\n                    var d = this.getOffsetTranslate();\r\n                    c.x -= d.translateX, c.y -= d.translateY\r\n                }\r\n                return null != c.dx && (c.dx /= this.scaleX, c.dy /= this.scaleY), null != this.currentElement && (c.target = this.currentElement), c.scene = this, c\r\n            };\r\n            this.selectElement = function (a) {\r\n                var b = scene_self.getElementByXY(a.x, a.y);\r\n                if (null != b)if (a.target = b, b.mousedownHander(a), b.selectedHandler(a), scene_self.notInSelectedNodes(b))a.ctrlKey || scene_self.cancleAllSelected(), scene_self.addToSelected(b); else {\r\n                    1 == a.ctrlKey && (b.unselectedHandler(), this.removeFromSelected(b));\r\n                    for (var c = 0; c < this.selectedElements.length; c++) {\r\n                        var d = this.selectedElements[c];\r\n                        d.selectedHandler(a)\r\n                    }\r\n                } else a.ctrlKey || scene_self.cancleAllSelected();\r\n                this.currentElement = b\r\n            };\r\n            this.mousedownHandler = function (b) {\r\n                var c = this.toSceneEvent(b);\r\n                if (this.mouseDown = !0, this.mouseDownX = c.x, this.mouseDownY = c.y, this.mouseDownEvent = c, this.mode == jtopo.SceneMode.normal)this.selectElement(c), (null == this.currentElement || this.currentElement instanceof jtopo.Link) && 1 == this.translate && (this.lastTranslateX = this.translateX, this.lastTranslateY = this.translateY); else {\r\n                    if (this.mode == jtopo.SceneMode.drag && 1 == this.translate)return this.lastTranslateX = this.translateX, void(this.lastTranslateY = this.translateY);\r\n                    this.mode == jtopo.SceneMode.select ? this.selectElement(c) : this.mode == jtopo.SceneMode.edit && (this.selectElement(c), (null == this.currentElement || this.currentElement instanceof jtopo.Link) && 1 == this.translate && (this.lastTranslateX = this.translateX, this.lastTranslateY = this.translateY))\r\n                }\r\n                scene_self.dispatchEvent("mousedown", c)\r\n            };\r\n            this.mouseupHandler = function (b) {\r\n                this.stage.cursor != jtopo.MouseCursor.normal && (this.stage.cursor = jtopo.MouseCursor.normal), scene_self.clearOperations();\r\n                var c = this.toSceneEvent(b);\r\n                null != this.currentElement && (c.target = scene_self.currentElement, this.currentElement.mouseupHandler(c)), this.dispatchEvent("mouseup", c), this.mouseDown = !1\r\n            };\r\n            this.dragElements = function (b) {\r\n                if (null != this.currentElement && 1 == this.currentElement.dragable)for (var c = 0; c < this.selectedElements.length; c++) {\r\n                    var d = this.selectedElements[c];\r\n                    if (0 != d.dragable) {\r\n                        var e = jtopo.util.clone(b);\r\n                        e.target = d, d.mousedragHandler(e)\r\n                    }\r\n                }\r\n            };\r\n            this.mousedragHandler = function (b) {\r\n                var c = this.toSceneEvent(b);\r\n                this.mode == jtopo.SceneMode.normal ? null == this.currentElement || this.currentElement instanceof jtopo.Link ? 1 == this.translate && (this.stage.cursor = jtopo.MouseCursor.closed_hand, this.translateX = this.lastTranslateX + c.dx, this.translateY = this.lastTranslateY + c.dy) : this.dragElements(c) : this.mode == jtopo.SceneMode.drag ? 1 == this.translate && (this.stage.cursor = jtopo.MouseCursor.closed_hand, this.translateX = this.lastTranslateX + c.dx, this.translateY = this.lastTranslateY + c.dy) : this.mode == jtopo.SceneMode.select ? null != this.currentElement ? 1 == this.currentElement.dragable && this.dragElements(c) : 1 == this.areaSelect && this.areaSelectHandle(c) : this.mode == jtopo.SceneMode.edit && (null == this.currentElement || this.currentElement instanceof jtopo.Link ? 1 == this.translate && (this.stage.cursor = jtopo.MouseCursor.closed_hand, this.translateX = this.lastTranslateX + c.dx, this.translateY = this.lastTranslateY + c.dy) : this.dragElements(c)), this.dispatchEvent("mousedrag", c)\r\n            };\r\n            this.areaSelectHandle = function (a) {\r\n                var b = a.offsetLeft, c = a.offsetTop, f = this.mouseDownEvent.offsetLeft, g = this.mouseDownEvent.offsetTop, h = b >= f ? f : b, i = c >= g ? g : c, j = Math.abs(a.dx) * this.scaleX, k = Math.abs(a.dy) * this.scaleY, l = new d(h, i, j, k);\r\n                scene_self.clearOperations().addOperation(l), b = a.x, c = a.y, f = this.mouseDownEvent.x, g = this.mouseDownEvent.y, h = b >= f ? f : b, i = c >= g ? g : c, j = Math.abs(a.dx), k = Math.abs(a.dy);\r\n                for (var m = h + j, n = i + k, o = 0; o < scene_self.childs.length; o++) {\r\n                    var p = scene_self.childs[o];\r\n                    p.x > h && p.x + p.width < m && p.y > i && p.y + p.height < n && scene_self.notInSelectedNodes(p) && (p.selectedHandler(a), scene_self.addToSelected(p))\r\n                }\r\n            };\r\n            this.mousemoveHandler = function (b) {\r\n                this.mousecoord = {\r\n                    x: b.x,\r\n                    y: b.y\r\n                };\r\n                var c = this.toSceneEvent(b);\r\n                if (this.mode == jtopo.SceneMode.drag) {\r\n                    return void(this.stage.cursor = jtopo.MouseCursor.open_hand);\r\n                }\r\n                if (this.mode == jtopo.SceneMode.normal) {\r\n                    this.stage.cursor = jtopo.MouseCursor.normal;\r\n                } else if (this.mode == jtopo.SceneMode.select) {\r\n                    this.stage.cursor = jtopo.MouseCursor.normal;\r\n                }\r\n\r\n                var d = scene_self.getElementByXY(c.x, c.y);\r\n                if (null != d) {\r\n                    if (scene_self.mouseOverelement && scene_self.mouseOverelement !== d) {\r\n                        c.target = d, scene_self.mouseOverelement.mouseoutHandler(c)\r\n                    }\r\n                    scene_self.mouseOverelement = d;\r\n                    if (0 == d.isMouseOver) {\r\n                        c.target = d;\r\n                        d.mouseoverHandler(c);\r\n                        scene_self.dispatchEvent("mouseover", c);\r\n                    } else {\r\n                        c.target = d;\r\n                        d.mousemoveHandler(c);\r\n                        scene_self.dispatchEvent("mousemove", c);\r\n                    }\r\n                } else {\r\n                    if (scene_self.mouseOverelement) {\r\n                        c.target = d;\r\n                        scene_self.mouseOverelement.mouseoutHandler(c);\r\n                        scene_self.mouseOverelement = null;\r\n                        scene_self.dispatchEvent("mouseout", c);\r\n                    } else {\r\n                        c.target = null;\r\n                        scene_self.dispatchEvent("mousemove", c)\r\n                    }\r\n                }\r\n            }, this.mouseoverHandler = function (a) {\r\n                var b = this.toSceneEvent(a);\r\n                this.dispatchEvent("mouseover", b)\r\n            }, this.mouseoutHandler = function (a) {\r\n                var b = this.toSceneEvent(a);\r\n                this.dispatchEvent("mouseout", b)\r\n            }, this.clickHandler = function (a) {\r\n                var b = this.toSceneEvent(a);\r\n                this.currentElement && (b.target = this.currentElement, this.currentElement.clickHandler(b)), this.dispatchEvent("click", b)\r\n            }, this.dbclickHandler = function (a) {\r\n                var b = this.toSceneEvent(a);\r\n                this.currentElement ? (b.target = this.currentElement, this.currentElement.dbclickHandler(b)) : scene_self.cancleAllSelected(), this.dispatchEvent("dbclick", b)\r\n            }, this.mousewheelHandler = function (a) {\r\n                var b = this.toSceneEvent(a);\r\n                this.dispatchEvent("mousewheel", b)\r\n            }, this.touchstart = this.mousedownHander, this.touchmove = this.mousedragHandler, this.touchend = this.mousedownHander, this.keydownHandler = function (a) {\r\n                this.dispatchEvent("keydown", a)\r\n            }, this.keyupHandler = function (a) {\r\n                this.dispatchEvent("keyup", a)\r\n            }, this.addEventListener = function (eventName, fn) {\r\n                var self = this;\r\n                var b = function (e) {\r\n                    fn.call(self, e);\r\n                };\r\n                this.messageBus.subscribe(eventName, fn);\r\n                return this;\r\n            }, this.removeEventListener = function (a, f) {\r\n                this.messageBus.unsubscribe(a, f)\r\n            }, this.removeAllEventListener = function () {\r\n                this.messageBus = new jtopo.util.MessageBus\r\n            }, this.dispatchEvent = function (a, b) {\r\n                return this.messageBus.publish(a, b), this\r\n            };\r\n            var f = "click,dbclick,mousedown,mouseup,mouseover,mouseout,mousemove,mousedrag,mousewheel,touchstart,touchmove,touchend,keydown,keyup".split(","), g = this;\r\n            return f.forEach(function (a) {\r\n                g[a] = function (b) {\r\n                    null != b ? this.addEventListener(a, b) : this.dispatchEvent(a)\r\n                }\r\n            }), this.zoom = function (a, b) {\r\n                null != a && 0 != a && (this.scaleX = a), null != b && 0 != b && (this.scaleY = b)\r\n            }, this.zoomOut = function (a) {\r\n                0 != a && (null == a && (a = .8), this.scaleX /= a, this.scaleY /= a)\r\n            }, this.zoomIn = function (a) {\r\n                0 != a && (null == a && (a = .8), this.scaleX *= a, this.scaleY *= a)\r\n            }, this.getBound = function () {\r\n                return {left: 0, top: 0, right: this.stage.canvas.width, bottom: this.stage.canvas.height, width: this.stage.canvas.width, height: this.stage.canvas.height}\r\n            }, this.getElementsBound = function () {\r\n                return jtopo.util.getElementsBound(this.childs)\r\n            }, this.translateToCenter = function (a) {\r\n                var b = this.getElementsBound(), c = this.stage.canvas.width / 2 - (b.left + b.right) / 2, d = this.stage.canvas.height / 2 - (b.top + b.bottom) / 2;\r\n                a && (c = a.canvas.width / 2 - (b.left + b.right) / 2, d = a.canvas.height / 2 - (b.top + b.bottom) / 2), this.translateX = c, this.translateY = d\r\n            }, this.setCenter = function (a, b) {\r\n                var c = a - this.stage.canvas.width / 2, d = b - this.stage.canvas.height / 2;\r\n                this.translateX = -c, this.translateY = -d\r\n            }, this.centerAndZoom = function (a, b, c) {\r\n                if (this.translateToCenter(c), null == a || null == b) {\r\n                    var d = this.getElementsBound(), e = d.right - d.left, f = d.bottom - d.top, g = this.stage.canvas.width / e, h = this.stage.canvas.height / f;\r\n                    c && (g = c.canvas.width / e, h = c.canvas.height / f);\r\n                    var i = Math.min(g, h);\r\n                    if (i > 1)return;\r\n                    this.zoom(i, i)\r\n                }\r\n                this.zoom(a, b)\r\n            }, this.getCenterLocation = function () {\r\n                return {x: scene_self.stage.canvas.width / 2, y: scene_self.stage.canvas.height / 2}\r\n            }, this.doLayout = function (a) {\r\n                a && a(this, this.childs)\r\n            }, this.toJson = function () {\r\n                {\r\n                    var a = this, b = "{";\r\n                    this.serializedProperties.length\r\n                }\r\n                this.serializedProperties.forEach(function (c) {\r\n                    var d = a[c];\r\n                    "background" == c && (d = a._background.src), "string" == typeof d && (d = \'"\' + d + \'"\'), b += \'"\' + c + \'":\' + d + ","\r\n                }), b += \'"childs":[\';\r\n                var c = this.childs.length;\r\n                return this.childs.forEach(function (a, d) {\r\n                    b += a.toJson(), c > d + 1 && (b += ",")\r\n                }), b += "]", b += "}"\r\n            }, scene_self\r\n        }\r\n\r\n        scene.prototype = new jtopo.Element;\r\n        var c = {};\r\n        Object.defineProperties(scene.prototype, {\r\n            background: {\r\n                get: function () {\r\n                    return this._background\r\n                }, set: function (a) {\r\n                    if ("string" == typeof a) {\r\n                        var b = c[a];\r\n                        null == b && (b = new Image, b.src = a, b.onload = function () {\r\n                            c[a] = b\r\n                        }), this._background = b\r\n                    } else this._background = a\r\n                }\r\n            }\r\n        }), jtopo.Scene = scene\r\n    }(JTopo),\r\n    function (jtopo) {\r\n        function DisplayElement() {\r\n            this.initialize = function () {\r\n                DisplayElement.prototype.initialize.apply(this, arguments);\r\n                this.elementType = "displayElement";\r\n                this.x = 0;\r\n                this.y = 0;\r\n                this.width = 32;\r\n                this.height = 32;\r\n                this.visible = !0;\r\n                this.alpha = 1;\r\n                this.rotate = 0;\r\n                this.scaleX = 1;\r\n                this.scaleY = 1;\r\n                this.strokeColor = "22,124,255";\r\n                this.borderColor = "22,124,255";\r\n                this.fillColor = "22,124,255";\r\n                this.shadow = !1;\r\n                this.shadowBlur = 5;\r\n                this.shadowColor = "rgba(0,0,0,0.5)";\r\n                this.shadowOffsetX = 3;\r\n                this.shadowOffsetY = 6;\r\n                this.transformAble = !1;\r\n                this.zIndex = 0;\r\n                var a = "x,y,width,height,visible,alpha,rotate,scaleX,scaleY,strokeColor,fillColor,shadow,shadowColor,shadowOffsetX,shadowOffsetY,transformAble,zIndex".split(",");\r\n                this.serializedProperties = this.serializedProperties.concat(a)\r\n            };\r\n            this.initialize();\r\n            this.paint = function (a) {\r\n                a.beginPath();\r\n                a.fillStyle = "rgba(" + this.fillColor + "," + this.alpha + ")";\r\n                a.rect(-this.width / 2, -this.height / 2, this.width, this.height);\r\n                a.fill();\r\n                a.stroke();\r\n                a.closePath();\r\n            };\r\n            this.getLocation = function () {\r\n                return {\r\n                    x: this.x,\r\n                    y: this.y\r\n                }\r\n            };\r\n            this.setLocation = function (a, b) {\r\n                if (this.qtopo && this.qtopo.attr && this.qtopo.attr.position) {\r\n                    this.qtopo.attr.position[0] = a;\r\n                    this.qtopo.attr.position[1] = b;\r\n                }\r\n                return this.x = a, this.y = b, this\r\n            };\r\n            this.getCenterLocation = function () {\r\n                return {\r\n                    x: this.x + this.width / 2,\r\n                    y: this.y + this.height / 2\r\n                }\r\n            };\r\n            this.setCenterLocation = function (a, b) {\r\n                this.x = a - this.width / 2;\r\n                this.y = b - this.height / 2;\r\n                return this;\r\n            };\r\n            this.getSize = function () {\r\n                return {\r\n                    width: this.width,\r\n                    height: this.heith\r\n                }\r\n            };\r\n            this.setSize = function (a, b) {\r\n                this.width = a;\r\n                this.height = b;\r\n                return this;\r\n            };\r\n            this.getBound = function () {\r\n                return {\r\n                    left: this.x,\r\n                    top: this.y,\r\n                    right: this.x + this.width,\r\n                    bottom: this.y + this.height,\r\n                    width: this.width,\r\n                    height: this.height\r\n                }\r\n            };\r\n            this.setBound = function (a, b, c, d) {\r\n                this.setLocation(a, b);\r\n                this.setSize(c, d);\r\n                return this;\r\n            };\r\n            this.getDisplayBound = function () {\r\n                return {\r\n                    left: this.x,\r\n                    top: this.y,\r\n                    right: this.x + this.width * this.scaleX,\r\n                    bottom: this.y + this.height * this.scaleY\r\n                }\r\n            };\r\n            this.getDisplaySize = function () {\r\n                return {\r\n                    width: this.width * this.scaleX,\r\n                    height: this.height * this.scaleY\r\n                }\r\n            };\r\n            this.getPosition = function (a) {\r\n                var position,\r\n                    c = this.getBound();\r\n                switch (a) {\r\n                    case "Top_Left":\r\n                        position = {x: c.left, y: c.top};\r\n                        break;\r\n                    case "Top_Center":\r\n                        position = {x: this.cx, y: c.top};\r\n                        break;\r\n                    case "Top_Right":\r\n                        position = {x: c.right, y: c.top};\r\n                        break;\r\n                    case "Middle_Left":\r\n                        position = {x: c.left, y: this.cy};\r\n                        break;\r\n                    case "Middle_Center":\r\n                        position = {x: this.cx, y: this.cy};\r\n                        break;\r\n                    case "Middle_Right":\r\n                        position = {x: c.right, y: this.cy};\r\n                        break;\r\n                    case "Bottom_Left":\r\n                        position = {x: c.left, y: c.bottom};\r\n                        break;\r\n                    case "Bottom_Center":\r\n                        position = {x: this.cx, y: c.bottom};\r\n                        break;\r\n                    case  "Bottom_Right":\r\n                        position = {x: c.right, y: c.bottom};\r\n                        break;\r\n                    default:\r\n                        position = {x: c.left, y: c.top};\r\n                }\r\n                return position;\r\n            };\r\n        }\r\n\r\n        function interactiveElement() {\r\n            this.initialize = function () {\r\n                interactiveElement.prototype.initialize.apply(this, arguments);\r\n                this.elementType = "interactiveElement";\r\n                this.dragable = !1;\r\n                this.selected = !1;\r\n                this.showSelected = !0;\r\n                this.selectedLocation = null;\r\n                this.isMouseOver = !1;\r\n                var a = "dragable,selected,showSelected,isMouseOver".split(",");\r\n                this.serializedProperties = this.serializedProperties.concat(a);\r\n            };\r\n            this.initialize();\r\n            this.paintSelected = function (a) {\r\n                if (0 != this.showSelected) {\r\n                    a.save();\r\n                    a.beginPath();\r\n                    a.strokeStyle = "rgba(168,202,255, 0.9)";\r\n                    a.fillStyle = "rgba(168,202,236,0.7)";\r\n                    a.rect(-this.width / 2 - 3, -this.height / 2 - 3, this.width + 6, this.height + 6);\r\n                    a.fill();\r\n                    a.stroke();\r\n                    a.closePath();\r\n                    a.restore();\r\n                }\r\n                return this;\r\n            };\r\n            this.paintMouseover = function (a) {\r\n                return this.paintSelected(a);\r\n            };\r\n            this.isInBound = function (pointX, pointY) {\r\n                return pointX > this.x && pointX < this.x + this.width * Math.abs(this.scaleX) && pointY > this.y && pointY < this.y + this.height * Math.abs(this.scaleY)\r\n            };\r\n            this.selectedHandler = function () {\r\n                this.selected = !0;\r\n                this.selectedLocation = {\r\n                    x: this.x,\r\n                    y: this.y\r\n                };\r\n                return this;\r\n            };\r\n            this.unselectedHandler = function () {\r\n                this.selected = !1;\r\n                this.selectedLocation = null;\r\n                return this;\r\n            };\r\n            this.dbclickHandler = function (a) {\r\n                this.dispatchEvent("dbclick", a);\r\n                return this;\r\n            };\r\n            this.clickHandler = function (a) {\r\n                this.dispatchEvent("click", a);\r\n                return this;\r\n            };\r\n            this.mousedownHander = function (a) {\r\n                this.dispatchEvent("mousedown", a);\r\n                return this;\r\n            };\r\n            this.mouseupHandler = function (a) {\r\n                this.dispatchEvent("mouseup", a);\r\n                return this;\r\n            };\r\n            this.mouseoverHandler = function (a) {\r\n                this.isMouseOver = !0;\r\n                this.dispatchEvent("mouseover", a);\r\n                return this;\r\n            };\r\n            this.mousemoveHandler = function (a) {\r\n                this.dispatchEvent("mousemove", a);\r\n                return this;\r\n            };\r\n            this.mouseoutHandler = function (a) {\r\n                this.isMouseOver = !1;\r\n                this.dispatchEvent("mouseout", a);\r\n                return this;\r\n            };\r\n            this.mousedragHandler = function (a) {\r\n                var b = this.selectedLocation.x + a.dx;\r\n                var c = this.selectedLocation.y + a.dy;\r\n                this.setLocation(b, c);\r\n                this.dispatchEvent("mousedrag", a);\r\n                return this;\r\n            };\r\n            this.addEventListener = function (event, fn) {\r\n                if (!this.messageBus) {\r\n                    this.messageBus = new jtopo.util.MessageBus;\r\n                }\r\n                this.messageBus.subscribe(event, fn);\r\n                return this;\r\n            };\r\n            this.dispatchEvent = function (event, e) {\r\n                if (this.messageBus) {\r\n                    this.messageBus.publish(event, e);\r\n                    return this;\r\n                }\r\n            };\r\n            this.removeEventListener = function (event, fn) {\r\n                this.messageBus.unsubscribe(event, fn);\r\n            };\r\n            this.removeAllEventListener = function () {\r\n                this.messageBus = new jtopo.util.MessageBus\r\n            };\r\n            var self = this;\r\n            "click,dbclick,mousedown,mouseup,mouseover,mouseout,mousemove,mousedrag,touchstart,touchmove,touchend".split(",")\r\n                .forEach(function (eventName) {\r\n                    self[eventName] = function (e) {\r\n                        if (null != e) {\r\n                            this.addEventListener(eventName, e);\r\n                        } else {\r\n                            this.dispatchEvent(eventName);\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n\r\n        function EditableElement() {\r\n            this.initialize = function () {\r\n                EditableElement.prototype.initialize.apply(this, arguments);\r\n                this.editAble = !1;\r\n                this.selectedPoint = null;\r\n            };\r\n            this.getCtrlPosition = function (a) {\r\n                var b = 5;\r\n                var c = 5;\r\n                var d = this.getPosition(a);\r\n                return {\r\n                    left: d.x - b,\r\n                    top: d.y - c,\r\n                    right: d.x + b,\r\n                    bottom: d.y + c\r\n                }\r\n            };\r\n            this.selectedHandler = function (b) {\r\n                EditableElement.prototype.selectedHandler.apply(this, arguments), this.selectedSize = {\r\n                    width: this.width,\r\n                    height: this.height\r\n                };\r\n                if (b.scene.mode == jtopo.SceneMode.edit) {\r\n                    this.editAble = !0\r\n                }\r\n            };\r\n            this.unselectedHandler = function () {\r\n                EditableElement.prototype.unselectedHandler.apply(this, arguments);\r\n                this.selectedSize = null;\r\n                this.editAble = !1;\r\n            };\r\n            var b = ["Top_Left", "Top_Center", "Top_Right", "Middle_Left", "Middle_Right", "Bottom_Left", "Bottom_Center", "Bottom_Right"];\r\n            this.paintCtrl = function (cx) {\r\n                if (0 != this.editAble) {\r\n                    cx.save();\r\n                    for (var c = 0; c < b.length; c++) {\r\n                        var d = this.getCtrlPosition(b[c]);\r\n                        d.left -= this.cx;\r\n                        d.right -= this.cx;\r\n                        d.top -= this.cy;\r\n                        d.bottom -= this.cy;\r\n                        var e = d.right - d.left;\r\n                        var f = d.bottom - d.top;\r\n                        cx.beginPath();\r\n                        cx.strokeStyle = "rgba(0,0,0,0.8)";\r\n                        cx.rect(d.left, d.top, e, f);\r\n                        cx.stroke();\r\n                        cx.closePath();\r\n                        cx.beginPath();\r\n                        cx.strokeStyle = "rgba(255,255,255,0.3)";\r\n                        cx.rect(d.left + 1, d.top + 1, e - 2, f - 2);\r\n                        cx.stroke();\r\n                        cx.closePath();\r\n                    }\r\n                    cx.restore();\r\n                }\r\n            };\r\n            this.isInBound = function (a, c) {\r\n                if (this.selectedPoint = null, 1 == this.editAble)for (var e = 0; e < b.length; e++) {\r\n                    var f = this.getCtrlPosition(b[e]);\r\n                    if (a > f.left && a < f.right && c > f.top && c < f.bottom)return this.selectedPoint = b[e], !0\r\n                }\r\n                return EditableElement.prototype.isInBound.apply(this, arguments)\r\n            };\r\n            this.mousedragHandler = function (a) {\r\n                if (null == this.selectedPoint) {\r\n                    var b = this.selectedLocation.x + a.dx, c = this.selectedLocation.y + a.dy;\r\n                    this.setLocation(b, c), this.dispatchEvent("mousedrag", a)\r\n                } else {\r\n                    if ("Top_Left" == this.selectedPoint) {\r\n                        var d = this.selectedSize.width - a.dx, e = this.selectedSize.height - a.dy, b = this.selectedLocation.x + a.dx, c = this.selectedLocation.y + a.dy;\r\n                        b < this.x + this.width && (this.x = b, this.width = d), c < this.y + this.height && (this.y = c, this.height = e)\r\n                    } else if ("Top_Center" == this.selectedPoint) {\r\n                        var e = this.selectedSize.height - a.dy, c = this.selectedLocation.y + a.dy;\r\n                        c < this.y + this.height && (this.y = c, this.height = e)\r\n                    } else if ("Top_Right" == this.selectedPoint) {\r\n                        var d = this.selectedSize.width + a.dx, c = this.selectedLocation.y + a.dy;\r\n                        c < this.y + this.height && (this.y = c, this.height = this.selectedSize.height - a.dy), d > 1 && (this.width = d)\r\n                    } else if ("Middle_Left" == this.selectedPoint) {\r\n                        var d = this.selectedSize.width - a.dx, b = this.selectedLocation.x + a.dx;\r\n                        b < this.x + this.width && (this.x = b), d > 1 && (this.width = d)\r\n                    } else if ("Middle_Right" == this.selectedPoint) {\r\n                        var d = this.selectedSize.width + a.dx;\r\n                        d > 1 && (this.width = d)\r\n                    } else if ("Bottom_Left" == this.selectedPoint) {\r\n                        var d = this.selectedSize.width - a.dx, b = this.selectedLocation.x + a.dx;\r\n                        d > 1 && (this.x = b, this.width = d);\r\n                        var e = this.selectedSize.height + a.dy;\r\n                        e > 1 && (this.height = e)\r\n                    } else if ("Bottom_Center" == this.selectedPoint) {\r\n                        var e = this.selectedSize.height + a.dy;\r\n                        e > 1 && (this.height = e)\r\n                    } else if ("Bottom_Right" == this.selectedPoint) {\r\n                        var d = this.selectedSize.width + a.dx;\r\n                        d > 1 && (this.width = d);\r\n                        var e = this.selectedSize.height + a.dy;\r\n                        e > 1 && (this.height = e)\r\n                    }\r\n                    this.dispatchEvent("resize", a)\r\n                }\r\n            }\r\n        }\r\n\r\n        DisplayElement.prototype = new jtopo.Element, Object.defineProperties(DisplayElement.prototype, {\r\n            cx: {\r\n                get: function () {\r\n                    return this.x + this.width / 2\r\n                }, set: function (a) {\r\n                    this.x = a - this.width / 2\r\n                }\r\n            }, cy: {\r\n                get: function () {\r\n                    return this.y + this.height / 2\r\n                }, set: function (a) {\r\n                    this.y = a - this.height / 2\r\n                }\r\n            }\r\n        });\r\n        interactiveElement.prototype = new DisplayElement;\r\n        EditableElement.prototype = new interactiveElement;\r\n        jtopo.DisplayElement = DisplayElement;\r\n        jtopo.InteractiveElement = interactiveElement;\r\n        jtopo.EditableElement = EditableElement;\r\n    }(JTopo),\r\n    function (jtopo) {\r\n        function baseNode(c) {\r\n            this.initialize = function (c) {\r\n                baseNode.prototype.initialize.apply(this, arguments), this.elementType = "node", this.zIndex = jtopo.zIndex_Node, this.text = c, this.font = "12px Consolas", this.fontColor = "255,255,255", this.borderWidth = 0, this.borderColor = "255,255,255", this.borderRadius = null, this.dragable = !0, this.textPosition = "Bottom_Center", this.textOffsetX = 0, this.textOffsetY = 0, this.transformAble = !0, this.inLinks = null, this.outLinks = null;\r\n                var d = "text,font,fontColor,textPosition,textOffsetX,textOffsetY,borderRadius".split(",");\r\n                this.serializedProperties = this.serializedProperties.concat(d)\r\n            }, this.initialize(c), this.paint = function (a) {\r\n                if (this.image) {\r\n                    var b = a.globalAlpha;\r\n                    a.globalAlpha = this.alpha, null != this.alarmImage && null != this.alarm ? a.drawImage(this.alarmImage, -this.width / 2, -this.height / 2, this.width, this.height) : a.drawImage(this.image, -this.width / 2, -this.height / 2, this.width, this.height), a.globalAlpha = b\r\n                } else a.beginPath(), a.fillStyle = "rgba(" + this.fillColor + "," + this.alpha + ")", null == this.borderRadius || 0 == this.borderRadius ? a.rect(-this.width / 2, -this.height / 2, this.width, this.height) : a.JTopoRoundRect(-this.width / 2, -this.height / 2, this.width, this.height, this.borderRadius), a.fill(), a.closePath();\r\n                this.paintText(a), this.paintBorder(a), this.paintCtrl(a), this.paintAlarmText(a)\r\n            }, this.paintAlarmText = function (a) {\r\n                if (null != this.alarm && "" != this.alarm) {\r\n                    var b = this.alarmColor || "255,0,0", c = this.alarmAlpha || .5;\r\n                    a.beginPath(), a.font = this.alarmFont || "10px 微软雅黑";\r\n                    var d = a.measureText(this.alarm).width + 6, e = a.measureText("田").width + 6, f = this.width / 2 - d / 2, g = -this.height / 2 - e - 8;\r\n                    a.strokeStyle = "rgba(" + b + ", " + c + ")", a.fillStyle = "rgba(" + b + ", " + c + ")", a.lineCap = "round", a.lineWidth = 1, a.moveTo(f, g), a.lineTo(f + d, g), a.lineTo(f + d, g + e), a.lineTo(f + d / 2 + 6, g + e), a.lineTo(f + d / 2, g + e + 8), a.lineTo(f + d / 2 - 6, g + e), a.lineTo(f, g + e), a.lineTo(f, g), a.fill(), a.stroke(), a.closePath(), a.beginPath(), a.strokeStyle = "rgba(" + this.fontColor + ", " + this.alpha + ")", a.fillStyle = "rgba(" + this.fontColor + ", " + this.alpha + ")", a.fillText(this.alarm, f + 2, g + e - 4), a.closePath()\r\n                }\r\n            }, this.paintText = function (a) {\r\n                var b = this.text;\r\n                if (null != b && "" != b) {\r\n                    a.beginPath(), a.font = this.font;\r\n                    var c = a.measureText(b).width, d = a.measureText("田").width;\r\n                    a.fillStyle = "rgba(" + this.fontColor + ", " + this.alpha + ")";\r\n                    var e = this.getTextPostion(this.textPosition, c, d);\r\n                    a.fillText(b, e.x, e.y), a.closePath()\r\n                }\r\n            }, this.paintBorder = function (a) {\r\n                if (0 != this.borderWidth) {\r\n                    a.beginPath();\r\n                    a.lineWidth = this.borderWidth;\r\n                    a.strokeStyle = "rgba(" + this.borderColor + "," + this.alpha + ")";\r\n                    var b = this.borderWidth / 2;\r\n                    if (null == this.borderRadius || 0 == this.borderRadius) {\r\n                        a.rect(-this.width / 2 - b, -this.height / 2 - b, this.width + this.borderWidth, this.height + this.borderWidth);\r\n                    } else {\r\n                        a.JTopoRoundRect(-this.width / 2 - b, -this.height / 2 - b, this.width + this.borderWidth, this.height + this.borderWidth, this.borderRadius);\r\n                    }\r\n                    a.stroke();\r\n                    a.closePath();\r\n                }\r\n            }, this.getTextPostion = function (position, maxWidth, fontWidth, height) {\r\n                var d = null;\r\n                switch (position) {\r\n                    case "Bottom_Center":\r\n                        d = {\r\n                            x: -this.width / 2 + (this.width - maxWidth) / 2,\r\n                            y: this.height / 2 + fontWidth\r\n                        };\r\n                        break;\r\n                    case "Top_Center":\r\n                        d = {\r\n                            x: -this.width / 2 + (this.width - maxWidth) / 2,\r\n                            y: -this.height / 2 - fontWidth / 2 - fontWidth * (height - 1)\r\n                        };\r\n                        break;\r\n                    case "Top_Right":\r\n                        d = {\r\n                            x: this.width / 2,\r\n                            y: -this.height / 2 - fontWidth / 2\r\n                        };\r\n                        break;\r\n                    case "Top_Left":\r\n                        d = {\r\n                            x: -this.width / 2 - maxWidth,\r\n                            y: -this.height / 2 - fontWidth / 2\r\n                        };\r\n                        break;\r\n                    case "Bottom_Right":\r\n                        d = {\r\n                            x: this.width / 2,\r\n                            y: this.height / 2 + fontWidth\r\n                        };\r\n                        break;\r\n                    case "Bottom_Left":\r\n                        d = {\r\n                            x: -this.width / 2 - maxWidth,\r\n                            y: this.height / 2 + fontWidth\r\n                        };\r\n                        break;\r\n                    case "Middle_Center":\r\n                        d = {\r\n                            x: -this.width / 2 + (this.width - maxWidth) / 2,\r\n                            y: fontWidth / 2\r\n                        };\r\n                        break;\r\n                    case "Middle_Right":\r\n                        d = {\r\n                            x: this.width / 2,\r\n                            y: fontWidth / 2\r\n                        };\r\n                        break;\r\n                    case "Middle_Left":\r\n                        d = {\r\n                            x: -this.width / 2 - maxWidth,\r\n                            y: fontWidth / 2\r\n                        };\r\n                        break;\r\n                    default:\r\n                        d = {\r\n                            x: -this.width / 2 - maxWidth,\r\n                            y: fontWidth / 2\r\n                        };\r\n                }\r\n                if (null != this.textOffsetX) {\r\n                    d.x += this.textOffsetX\r\n                }\r\n                if (null != this.textOffsetY) {\r\n                    d.y += this.textOffsetY\r\n                }\r\n                return d;\r\n            }, this.setImage = function (a, b) {\r\n                if (null == a)throw new Error("Node.setImage(): 参数Image对象为空!");\r\n                var c = this;\r\n                if ("string" == typeof a) {\r\n                    var d = j[a];\r\n                    null == d ? (d = new Image, d.src = a, d.onload = function () {\r\n                        j[a] = d, 1 == b && c.setSize(d.width, d.height), c.image = d, c.alarmColor = null == c.alarmColor ? "255,0,0" : c.alarmColor\r\n                    }) : (b && this.setSize(d.width, d.height), c.image = d, c.alarmColor = null == c.alarmColor ? "255,0,0" : c.alarmColor)\r\n                } else this.image = a, c.alarmColor = null == c.alarmColor ? "255,0,0" : c.alarmColor, 1 == b && this.setSize(a.width, a.height)\r\n            };\r\n            this.removeHandler = function (scene) {\r\n                var self = this;\r\n                if (this.outLinks) {\r\n                    this.outLinks.forEach(function (c) {\r\n                        if (c.nodeA === self) {\r\n                            scene.remove(c)\r\n                        }\r\n                    });\r\n                    this.outLinks = null;\r\n                }\r\n                if (this.inLinks) {\r\n                    this.inLinks.forEach(function (c) {\r\n                        c.nodeZ === self && scene.remove(c)\r\n                    });\r\n                    this.inLinks = null;\r\n                }\r\n            }\r\n        }\r\n\r\n        function Node() {\r\n            Node.prototype.initialize.apply(this, arguments)\r\n        }\r\n\r\n        function TextNode(a) {\r\n            this.initialize(), this.text = a, this.elementType = "TextNode", this.paint = function (a) {\r\n                a.beginPath(), a.font = this.font, this.width = a.measureText(this.text).width, this.height = a.measureText("田").width, a.strokeStyle = "rgba(" + this.fontColor + ", " + this.alpha + ")", a.fillStyle = "rgba(" + this.fontColor + ", " + this.alpha + ")", a.fillText(this.text, -this.width / 2, this.height / 2), a.closePath(), this.paintBorder(a), this.paintCtrl(a), this.paintAlarmText(a)\r\n            }\r\n        }\r\n\r\n        function LinkNode(a, b, c) {\r\n            this.initialize(), this.text = a, this.href = b, this.target = c, this.elementType = "LinkNode", this.isVisited = !1, this.visitedColor = null, this.paint = function (a) {\r\n                a.beginPath(), a.font = this.font, this.width = a.measureText(this.text).width, this.height = a.measureText("田").width, this.isVisited && null != this.visitedColor ? (a.strokeStyle = "rgba(" + this.visitedColor + ", " + this.alpha + ")", a.fillStyle = "rgba(" + this.visitedColor + ", " + this.alpha + ")") : (a.strokeStyle = "rgba(" + this.fontColor + ", " + this.alpha + ")", a.fillStyle = "rgba(" + this.fontColor + ", " + this.alpha + ")"), a.fillText(this.text, -this.width / 2, this.height / 2), this.isMouseOver && (a.moveTo(-this.width / 2, this.height), a.lineTo(this.width / 2, this.height), a.stroke()), a.closePath(), this.paintBorder(a), this.paintCtrl(a), this.paintAlarmText(a)\r\n            }, this.mousemove(function () {\r\n                var a = document.getElementsByTagName("canvas");\r\n                if (a && a.length > 0)for (var b = 0; b < a.length; b++)a[b].style.cursor = "pointer"\r\n            }), this.mouseout(function () {\r\n                var a = document.getElementsByTagName("canvas");\r\n                if (a && a.length > 0)for (var b = 0; b < a.length; b++)a[b].style.cursor = "default"\r\n            }), this.click(function () {\r\n                "_blank" == this.target ? window.open(this.href) : location = this.href, this.isVisited = !0\r\n            })\r\n        }\r\n\r\n        function CircleNode(text) {\r\n            this.initialize(arguments);\r\n            this._radius = 20;\r\n            this.beginDegree = 0;\r\n            this.endDegree = 2 * Math.PI;\r\n            this.text = text;\r\n            this.paint = function (context) {\r\n                context.save();\r\n                context.beginPath();\r\n                context.fillStyle = "rgba(" + this.fillColor + "," + this.alpha + ")";\r\n                context.arc(0, 0, this.radius, this.beginDegree, this.endDegree, !0);\r\n                context.fill();\r\n                context.closePath();\r\n                context.restore();\r\n                this.paintText(context);\r\n                this.paintBorder(context);\r\n                this.paintCtrl(context);\r\n                this.paintAlarmText(context);\r\n            }, this.paintSelected = function (context) {\r\n                context.save();\r\n                context.beginPath();\r\n                context.strokeStyle = "rgba(168,202,255, 0.9)";\r\n                context.fillStyle = "rgba(168,202,236,0.7)";\r\n                context.arc(0, 0, this.radius + 3, this.beginDegree, this.endDegree, !0);\r\n                context.fill();\r\n                context.stroke();\r\n                context.closePath();\r\n                context.restore();\r\n            }\r\n        }\r\n\r\n        function g(a, b, c) {\r\n            this.initialize();\r\n            this.frameImages = a || [];\r\n            this.frameIndex = 0;\r\n            this.isStop = !0;\r\n            var d = b || 1e3;\r\n            this.repeatPlay = !1;\r\n            var e = this;\r\n            this.nextFrame = function () {\r\n                if (!this.isStop && null != this.frameImages.length) {\r\n                    this.frameIndex++;\r\n                    if (this.frameIndex >= this.frameImages.length) {\r\n                        if (!this.repeatPlay)return;\r\n                        this.frameIndex = 0;\r\n                    }\r\n                    this.setImage(this.frameImages[this.frameIndex], c);\r\n                    setTimeout(function () {\r\n                        e.nextFrame();\r\n                    }, d / a.length);\r\n                }\r\n            }\r\n        }\r\n\r\n        function h(a, b, c, d, e) {\r\n            this.initialize();\r\n            var f = this;\r\n            this.setImage(a), this.frameIndex = 0, this.isPause = !0, this.repeatPlay = !1;\r\n            var g = d || 1e3;\r\n            e = e || 0, this.paint = function (a) {\r\n                if (this.image) {\r\n                    var b = this.width, d = this.height;\r\n                    a.save(), a.beginPath(), a.fillStyle = "rgba(" + this.fillColor + "," + this.alpha + ")";\r\n                    var f = (Math.floor(this.frameIndex / c) + e) * d, g = Math.floor(this.frameIndex % c) * b;\r\n                    a.drawImage(this.image, g, f, b, d, -b / 2, -d / 2, b, d), a.fill(), a.closePath(), a.restore(), this.paintText(a), this.paintBorder(a), this.paintCtrl(a), this.paintAlarmText(a)\r\n                }\r\n            }, this.nextFrame = function () {\r\n                if (!this.isStop) {\r\n                    if (this.frameIndex++, this.frameIndex >= b * c) {\r\n                        if (!this.repeatPlay)return;\r\n                        this.frameIndex = 0\r\n                    }\r\n                    setTimeout(function () {\r\n                        f.isStop || f.nextFrame()\r\n                    }, g / (b * c))\r\n                }\r\n            }\r\n        }\r\n\r\n        function AnimateNode() {\r\n            var a = null;\r\n            return a = arguments.length <= 3 ? new g(arguments[0], arguments[1], arguments[2]) : new h(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]), a.stop = function () {\r\n                a.isStop = !0\r\n            }, a.play = function () {\r\n                a.isStop = !1, a.frameIndex = 0, a.nextFrame()\r\n            }, a\r\n        }\r\n\r\n        var j = {};\r\n        baseNode.prototype = new jtopo.EditableElement;\r\n        Node.prototype = new baseNode;\r\n        Object.defineProperties(Node.prototype, {\r\n            alarmColor: {\r\n                get: function () {\r\n                    return this._alarmColor\r\n                }, set: function (color) {\r\n                    this._alarmColor = color;\r\n                    if (null != this.image) {\r\n                        var c = jtopo.util.genImageAlarm(this.image, color);\r\n                        if (c) {\r\n                            this.alarmImage = c;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        TextNode.prototype = new Node;\r\n        LinkNode.prototype = new TextNode;\r\n        CircleNode.prototype = new Node;\r\n        Object.defineProperties(CircleNode.prototype, {\r\n            radius: {\r\n                get: function () {\r\n                    return this._radius\r\n                }, set: function (a) {\r\n                    this._radius = a;\r\n                    var b = 2 * this.radius, c = 2 * this.radius;\r\n                    this.width = b, this.height = c\r\n                }\r\n            }, width: {\r\n                get: function () {\r\n                    return this._width\r\n                }, set: function (a) {\r\n                    this._radius = a / 2, this._width = a\r\n                }\r\n            }, height: {\r\n                get: function () {\r\n                    return this._height\r\n                }, set: function (a) {\r\n                    this._radius = a / 2, this._height = a\r\n                }\r\n            }\r\n        });\r\n        g.prototype = new Node;\r\n        h.prototype = new Node;\r\n        AnimateNode.prototype = new Node;\r\n        jtopo.Node = Node;\r\n        jtopo.TextNode = TextNode;\r\n        jtopo.LinkNode = LinkNode;\r\n        jtopo.CircleNode = CircleNode;\r\n        jtopo.AnimateNode = AnimateNode;\r\n    }(JTopo),\r\n    function (jtopo) {\r\n        function getPublicLink(elementA, elementB) {\r\n            var result = [];\r\n            if (null == elementA || null == elementB)return result;\r\n            if (elementA && elementB && elementA.outLinks && elementB.inLinks)\r\n                for (var i = 0; i < elementA.outLinks.length; i++) {\r\n                    var outLink = elementA.outLinks[i];\r\n                    for (var f = 0; f < elementB.inLinks.length; f++) {\r\n                        var inlink = elementB.inLinks[f];\r\n                        if (outLink === inlink) {\r\n                            result.push(inlink);\r\n                        }\r\n                    }\r\n                }\r\n            return result\r\n        }\r\n\r\n        function getLinksBetween(start, end) {\r\n            var d = getPublicLink(start, end);\r\n            var e = getPublicLink(end, start);\r\n            return d.concat(e);\r\n        }\r\n\r\n        function getLinkNotThis(link) {\r\n            var b = getLinksBetween(link.nodeA, link.nodeZ);\r\n            return b = b.filter(function (b) {\r\n                return link !== b\r\n            })\r\n        }\r\n\r\n        function getNums(a, b) {\r\n            return getLinksBetween(a, b).length\r\n        }\r\n\r\n        function Link(b, c, g) {\r\n            function h(start, end) {\r\n                var link = jtopo.util.lineF(start.cx, start.cy, end.cx, end.cy);\r\n                var bound = start.getBound();\r\n                return jtopo.util.intersectionLineBound(link, bound);\r\n            }\r\n\r\n            this.initialize = function (b, c, d) {\r\n                if (Link.prototype.initialize.apply(this, arguments), this.elementType = "link", this.zIndex = jtopo.zIndex_Link, 0 != arguments.length) {\r\n                    this.text = d;\r\n                    this.nodeA = b;\r\n                    this.nodeZ = c;\r\n                    this.nodeA && null == this.nodeA.outLinks && (this.nodeA.outLinks = []);\r\n                    this.nodeA && null == this.nodeA.inLinks && (this.nodeA.inLinks = []);\r\n                    this.nodeZ && null == this.nodeZ.inLinks && (this.nodeZ.inLinks = []);\r\n                    this.nodeZ && null == this.nodeZ.outLinks && (this.nodeZ.outLinks = []);\r\n                    null != this.nodeA && this.nodeA.outLinks.push(this);\r\n                    null != this.nodeZ && this.nodeZ.inLinks.push(this);\r\n                    this.caculateIndex();\r\n                    this.font = "12px Consolas";\r\n                    this.fontColor = "255,255,255";\r\n                    this.lineWidth = 2;\r\n                    this.lineJoin = "miter";\r\n                    this.transformAble = !1;\r\n                    this.bundleOffset = 20;\r\n                    this.bundleGap = 12;\r\n                    this.textOffsetX = 0;\r\n                    this.textOffsetY = 0;\r\n                    this.arrowsRadius = null;\r\n                    this.arrowsOffset = 0;\r\n                    this.dashedPattern = null;\r\n                    this.path = [];\r\n                    var e = "text,font,fontColor,lineWidth,lineJoin".split(",");\r\n                    this.serializedProperties = this.serializedProperties.concat(e)\r\n                }\r\n            }, this.caculateIndex = function () {\r\n                var a = getNums(this.nodeA, this.nodeZ);\r\n                a > 0 && (this.nodeIndex = a - 1)\r\n            }, this.initialize(b, c, g), this.removeHandler = function () {\r\n                var a = this;\r\n                this.nodeA && this.nodeA.outLinks && (this.nodeA.outLinks = this.nodeA.outLinks.filter(function (b) {\r\n                    return b !== a\r\n                })), this.nodeZ && this.nodeZ.inLinks && (this.nodeZ.inLinks = this.nodeZ.inLinks.filter(function (b) {\r\n                    return b !== a\r\n                }));\r\n                var b = getLinkNotThis(this);\r\n                b.forEach(function (a, b) {\r\n                    a.nodeIndex = b\r\n                })\r\n            }, this.getStartPosition = function () {\r\n                var a = {x: this.nodeA.cx, y: this.nodeA.cy};\r\n                return a\r\n            }, this.getEndPosition = function () {\r\n                var a;\r\n                return null != this.arrowsRadius && (a = h(this.nodeZ, this.nodeA)), null == a && (a = {x: this.nodeZ.cx, y: this.nodeZ.cy}), a\r\n            }, this.getPath = function () {\r\n                var a = [], b = this.getStartPosition(), c = this.getEndPosition();\r\n                if (this.nodeA === this.nodeZ)return [b, c];\r\n                var d = getNums(this.nodeA, this.nodeZ);\r\n                if (1 == d)return [b, c];\r\n                var f = Math.atan2(c.y - b.y, c.x - b.x), g = {x: b.x + this.bundleOffset * Math.cos(f), y: b.y + this.bundleOffset * Math.sin(f)}, h = {\r\n                    x: c.x + this.bundleOffset * Math.cos(f - Math.PI),\r\n                    y: c.y + this.bundleOffset * Math.sin(f - Math.PI)\r\n                }, i = f - Math.PI / 2, j = f - Math.PI / 2, k = d * this.bundleGap / 2 - this.bundleGap / 2, l = this.bundleGap * this.nodeIndex, m = {\r\n                    x: g.x + l * Math.cos(i),\r\n                    y: g.y + l * Math.sin(i)\r\n                }, n = {x: h.x + l * Math.cos(j), y: h.y + l * Math.sin(j)};\r\n                return m = {x: m.x + k * Math.cos(i - Math.PI), y: m.y + k * Math.sin(i - Math.PI)}, n = {x: n.x + k * Math.cos(j - Math.PI), y: n.y + k * Math.sin(j - Math.PI)}, a.push({\r\n                    x: b.x,\r\n                    y: b.y\r\n                }), a.push({x: m.x, y: m.y}), a.push({x: n.x, y: n.y}), a.push({x: c.x, y: c.y}), a\r\n            }, this.paintPath = function (a, b) {\r\n                if (this.nodeA === this.nodeZ)return void this.paintLoop(a);\r\n                a.beginPath(), a.moveTo(b[0].x, b[0].y);\r\n                for (var c = 1; c < b.length; c++)null == this.dashedPattern ? a.lineTo(b[c].x, b[c].y) : a.JTopoDashedLineTo(b[c - 1].x, b[c - 1].y, b[c].x, b[c].y, this.dashedPattern);\r\n                if (a.stroke(), a.closePath(), null != this.arrowsRadius) {\r\n                    var d = b[b.length - 2], e = b[b.length - 1];\r\n                    this.paintArrow(a, d, e)\r\n                }\r\n            }, this.paintLoop = function (a) {\r\n                a.beginPath();\r\n                {\r\n                    var b = this.bundleGap * (this.nodeIndex + 1) / 2;\r\n                    Math.PI + Math.PI / 2\r\n                }\r\n                a.arc(this.nodeA.x, this.nodeA.y, b, Math.PI / 2, 2 * Math.PI), a.stroke(), a.closePath()\r\n            }, this.paintArrow = function (b, c, d) {\r\n                var e = this.arrowsOffset, f = this.arrowsRadius / 2, g = c, h = d, i = Math.atan2(h.y - g.y, h.x - g.x), j = jtopo.util.getDistance(g, h) - this.arrowsRadius, k = g.x + (j + e) * Math.cos(i), l = g.y + (j + e) * Math.sin(i), m = h.x + e * Math.cos(i), n = h.y + e * Math.sin(i);\r\n                i -= Math.PI / 2;\r\n                var o = {x: k + f * Math.cos(i), y: l + f * Math.sin(i)}, p = {x: k + f * Math.cos(i - Math.PI), y: l + f * Math.sin(i - Math.PI)};\r\n                b.beginPath(), b.fillStyle = "rgba(" + this.strokeColor + "," + this.alpha + ")", b.moveTo(o.x, o.y), b.lineTo(m, n), b.lineTo(p.x, p.y), b.stroke(), b.closePath()\r\n            }, this.paint = function (a) {\r\n                if (null != this.nodeA && null != !this.nodeZ) {\r\n                    var b = this.getPath(this.nodeIndex);\r\n                    this.path = b, a.strokeStyle = "rgba(" + this.strokeColor + "," + this.alpha + ")", a.lineWidth = this.lineWidth, this.paintPath(a, b), b && b.length > 0 && this.paintText(a, b)\r\n                }\r\n            };\r\n            var i = -(Math.PI / 2 + Math.PI / 4);\r\n            this.paintText = function (a, b) {\r\n                var c = b[0], d = b[b.length - 1];\r\n                if (4 == b.length && (c = b[1], d = b[2]), this.text && this.text.length > 0) {\r\n                    var e = (d.x + c.x) / 2 + this.textOffsetX, f = (d.y + c.y) / 2 + this.textOffsetY;\r\n                    a.save(), a.beginPath(), a.font = this.font;\r\n                    var g = a.measureText(this.text).width, h = a.measureText("田").width;\r\n                    if (a.fillStyle = "rgba(" + this.fontColor + ", " + this.alpha + ")", this.nodeA === this.nodeZ) {\r\n                        var j = this.bundleGap * (this.nodeIndex + 1) / 2, e = this.nodeA.x + j * Math.cos(i), f = this.nodeA.y + j * Math.sin(i);\r\n                        a.fillText(this.text, e, f)\r\n                    } else a.fillText(this.text, e - g / 2, f - h / 2);\r\n                    a.stroke(), a.closePath(), a.restore()\r\n                }\r\n            }, this.paintSelected = function (a) {\r\n                a.shadowBlur = 10, a.shadowColor = "rgba(0,0,0,1)", a.shadowOffsetX = 0, a.shadowOffsetY = 0\r\n            }, this.isInBound = function (b, c) {\r\n                if (this.nodeA === this.nodeZ) {\r\n                    var d = this.bundleGap * (this.nodeIndex + 1) / 2, e = jtopo.util.getDistance(this.nodeA, {x: b, y: c}) - d;\r\n                    return Math.abs(e) <= 3\r\n                }\r\n                for (var f = !1, g = 1; g < this.path.length; g++) {\r\n                    var h = this.path[g - 1], i = this.path[g];\r\n                    if (1 == jtopo.util.isPointInLine({x: b, y: c}, h, i)) {\r\n                        f = !0;\r\n                        break\r\n                    }\r\n                }\r\n                return f\r\n            }\r\n        }\r\n\r\n        function FoldLink(a, b, c) {\r\n            this.initialize = function () {\r\n                FoldLink.prototype.initialize.apply(this, arguments), this.direction = "horizontal"\r\n            }, this.initialize(a, b, c), this.getStartPosition = function () {\r\n                var a = {x: this.nodeA.cx, y: this.nodeA.cy};\r\n                return "horizontal" == this.direction ? this.nodeZ.cx > a.x ? a.x += this.nodeA.width / 2 : a.x -= this.nodeA.width / 2 : this.nodeZ.cy > a.y ? a.y += this.nodeA.height / 2 : a.y -= this.nodeA.height / 2, a\r\n            }, this.getEndPosition = function () {\r\n                var a = {x: this.nodeZ.cx, y: this.nodeZ.cy};\r\n                return "horizontal" == this.direction ? this.nodeA.cy < a.y ? a.y -= this.nodeZ.height / 2 : a.y += this.nodeZ.height / 2 : a.x = this.nodeA.cx < a.x ? this.nodeZ.x : this.nodeZ.x + this.nodeZ.width, a\r\n            }, this.getPath = function (a) {\r\n                var b = [], c = this.getStartPosition(), d = this.getEndPosition();\r\n                if (this.nodeA === this.nodeZ)return [c, d];\r\n                var f, g, h = getNums(this.nodeA, this.nodeZ), i = (h - 1) * this.bundleGap, j = this.bundleGap * a - i / 2;\r\n                return "horizontal" == this.direction ? (f = d.x + j, g = c.y - j, b.push({x: c.x, y: g}), b.push({x: f, y: g}), b.push({x: f, y: d.y})) : (f = c.x + j, g = d.y - j, b.push({\r\n                    x: f,\r\n                    y: c.y\r\n                }), b.push({x: f, y: g}), b.push({x: d.x, y: g})), b\r\n            }, this.paintText = function (a, b) {\r\n                if (this.text && this.text.length > 0) {\r\n                    var c = b[1], d = c.x + this.textOffsetX, e = c.y + this.textOffsetY;\r\n                    a.save(), a.beginPath(), a.font = this.font;\r\n                    var f = a.measureText(this.text).width, g = a.measureText("田").width;\r\n                    a.fillStyle = "rgba(" + this.fontColor + ", " + this.alpha + ")", a.fillText(this.text, d - f / 2, e - g / 2), a.stroke(), a.closePath(), a.restore()\r\n                }\r\n            }\r\n        }\r\n\r\n        function FlexionalLink(a, b, c) {\r\n            this.initialize = function () {\r\n                FlexionalLink.prototype.initialize.apply(this, arguments), this.direction = "vertical", this.offsetGap = 44\r\n            }, this.initialize(a, b, c), this.getStartPosition = function () {\r\n                var a = {x: this.nodeA.cx, y: this.nodeA.cy};\r\n                return "horizontal" == this.direction ? a.x = this.nodeZ.cx < a.x ? this.nodeA.x : this.nodeA.x + this.nodeA.width : a.y = this.nodeZ.cy < a.y ? this.nodeA.y : this.nodeA.y + this.nodeA.height, a\r\n            }, this.getEndPosition = function () {\r\n                var a = {x: this.nodeZ.cx, y: this.nodeZ.cy};\r\n                return "horizontal" == this.direction ? a.x = this.nodeA.cx < a.x ? this.nodeZ.x : this.nodeZ.x + this.nodeZ.width : a.y = this.nodeA.cy < a.y ? this.nodeZ.y : this.nodeZ.y + this.nodeZ.height, a\r\n            }, this.getPath = function (a) {\r\n                var b = this.getStartPosition(), c = this.getEndPosition();\r\n                if (this.nodeA === this.nodeZ)return [b, c];\r\n                var d = [], f = getNums(this.nodeA, this.nodeZ), g = (f - 1) * this.bundleGap, h = this.bundleGap * a - g / 2, i = this.offsetGap;\r\n                return "horizontal" == this.direction ? (this.nodeA.cx > this.nodeZ.cx && (i = -i), d.push({x: b.x, y: b.y + h}), d.push({x: b.x + i, y: b.y + h}), d.push({\r\n                    x: c.x - i,\r\n                    y: c.y + h\r\n                }), d.push({x: c.x, y: c.y + h})) : (this.nodeA.cy > this.nodeZ.cy && (i = -i), d.push({x: b.x + h, y: b.y}), d.push({x: b.x + h, y: b.y + i}), d.push({\r\n                    x: c.x + h,\r\n                    y: c.y - i\r\n                }), d.push({x: c.x + h, y: c.y})), d\r\n            }\r\n        }\r\n\r\n        function CurveLink(a, b, c) {\r\n            this.initialize = function () {\r\n                CurveLink.prototype.initialize.apply(this, arguments)\r\n            }, this.initialize(a, b, c), this.paintPath = function (a, b) {\r\n                if (this.nodeA === this.nodeZ)return void this.paintLoop(a);\r\n                a.beginPath(), a.moveTo(b[0].x, b[0].y);\r\n                for (var c = 1; c < b.length; c++) {\r\n                    var d = b[c - 1], e = b[c], f = (d.x + e.x) / 2, g = (d.y + e.y) / 2;\r\n                    g += (e.y - d.y) / 2, a.strokeStyle = "rgba(" + this.strokeColor + "," + this.alpha + ")", a.lineWidth = this.lineWidth, a.moveTo(d.x, d.cy), a.quadraticCurveTo(f, g, e.x, e.y), a.stroke()\r\n                }\r\n                if (a.stroke(), a.closePath(), null != this.arrowsRadius) {\r\n                    var h = b[b.length - 2], i = b[b.length - 1];\r\n                    this.paintArrow(a, h, i)\r\n                }\r\n            }\r\n        }\r\n\r\n        Link.prototype = new jtopo.InteractiveElement;\r\n        FoldLink.prototype = new Link;\r\n        FlexionalLink.prototype = new Link;\r\n        CurveLink.prototype = new Link;\r\n        jtopo.Link = Link;\r\n        jtopo.FoldLink = FoldLink;\r\n        jtopo.FlexionalLink = FlexionalLink;\r\n        jtopo.CurveLink = CurveLink;\r\n    }(JTopo),\r\n    function (jtopo) {\r\n        function container(c) {\r\n            this.initialize = function (c) {\r\n                container.prototype.initialize.apply(this, null),\r\n                    this.elementType = "container",\r\n                    this.zIndex = jtopo.zIndex_Container,\r\n                    this.width = 100,\r\n                    this.height = 100,\r\n                    this.childs = [],\r\n                    this.alpha = .5,\r\n                    this.dragable = !0,\r\n                    this.childDragble = !0,\r\n                    this.visible = !0,\r\n                    this.fillColor = "10,100,80",\r\n                    this.borderWidth = 0,\r\n                    this.borderColor = "255,255,255",\r\n                    this.borderRadius = null,\r\n                    this.font = "12px Consolas",\r\n                    this.fontColor = "255,255,255",\r\n                    this.text = c,\r\n                    this.textPosition = "Bottom_Center",\r\n                    this.textOffsetX = 0,\r\n                    this.textOffsetY = 0,\r\n                    this.layout = new jtopo.layout.AutoBoundLayout\r\n            }, this.initialize(c), this.add = function (a) {\r\n                this.childs.push(a), a.dragable = this.childDragble\r\n            }, this.remove = function (a) {\r\n                for (var b = 0; b < this.childs.length; b++)if (this.childs[b] === a) {\r\n                    a.parentContainer = null, this.childs = this.childs.del(b), a.lastParentContainer = this;\r\n                    break\r\n                }\r\n            }, this.removeAll = function () {\r\n                this.childs = []\r\n            }, this.setLocation = function (a, b) {\r\n                var c = a - this.x, d = b - this.y;\r\n                this.x = a, this.y = b;\r\n                if (this.qtopo && this.qtopo.attr && this.qtopo.attr.position) {\r\n                    this.qtopo.attr.position[0] = a;\r\n                    this.qtopo.attr.position[1] = b;\r\n                }\r\n                for (var e = 0; e < this.childs.length; e++) {\r\n                    var f = this.childs[e];\r\n                    f.setLocation(f.x + c, f.y + d)\r\n                }\r\n            }, this.doLayout = function (a) {\r\n                a && a(this, this.childs)\r\n            }, this.paint = function (a) {\r\n                if (this.visible) {\r\n                    if (this.layout) {\r\n                        this.layout(this, this.childs);\r\n                    }\r\n                    a.beginPath();\r\n                    a.fillStyle = "rgba(" + this.fillColor + "," + this.alpha + ")";\r\n                    if (null == this.borderRadius || 0 == this.borderRadius) {\r\n                        a.rect(this.x, this.y, this.width, this.height);\r\n                    } else {\r\n                        a.JTopoRoundRect(this.x, this.y, this.width, this.height, this.borderRadius);\r\n                    }\r\n                    a.fill();\r\n                    a.closePath();\r\n                    this.paintText(a);\r\n                    this.paintBorder(a);\r\n                }\r\n            }, this.paintBorder = function (a) {\r\n                if (0 != this.borderWidth) {\r\n                    a.beginPath(), a.lineWidth = this.borderWidth, a.strokeStyle = "rgba(" + this.borderColor + "," + this.alpha + ")";\r\n                    var b = this.borderWidth / 2;\r\n                    null == this.borderRadius || 0 == this.borderRadius ? a.rect(this.x - b, this.y - b, this.width + this.borderWidth, this.height + this.borderWidth) : a.JTopoRoundRect(this.x - b, this.y - b, this.width + this.borderWidth, this.height + this.borderWidth, this.borderRadius), a.stroke(), a.closePath()\r\n                }\r\n            }, this.paintText = function (a) {\r\n                var b = this.text;\r\n                if (null != b && "" != b) {\r\n                    a.beginPath(), a.font = this.font;\r\n                    var c = a.measureText(b).width, d = a.measureText("田").width;\r\n                    a.fillStyle = "rgba(" + this.fontColor + ", " + this.alpha + ")";\r\n                    var e = this.getTextPostion(this.textPosition, c, d);\r\n                    a.fillText(b, e.x, e.y), a.closePath()\r\n                }\r\n            }, this.getTextPostion = function (textPosition, maxWidth, fontWidth, height) {\r\n                var d = null;\r\n                return null == textPosition || "Bottom_Center" == textPosition ? d = {\r\n                    x: this.x + this.width / 2 - maxWidth / 2,\r\n                    y: this.y + this.height + fontWidth\r\n                } : "Top_Center" == textPosition ? d = {\r\n                    x: this.x + this.width / 2 - maxWidth / 2,\r\n                    y: this.y - fontWidth / 2 - fontWidth * (height - 1)\r\n                } : "Top_Right" == textPosition ? d = {x: this.x + this.width - maxWidth, y: this.y - fontWidth / 2} : "Top_Left" == textPosition ? d = {\r\n                    x: this.x,\r\n                    y: this.y - fontWidth / 2\r\n                } : "Bottom_Right" == textPosition ? d = {\r\n                    x: this.x + this.width - maxWidth,\r\n                    y: this.y + this.height + fontWidth\r\n                } : "Bottom_Left" == textPosition ? d = {x: this.x, y: this.y + this.height + fontWidth} : "Middle_Center" == textPosition ? d = {\r\n                    x: this.x + this.width / 2 - maxWidth / 2,\r\n                    y: this.y + this.height / 2 + fontWidth / 2\r\n                } : "Middle_Right" == textPosition ? d = {x: this.x + this.width - maxWidth, y: this.y + this.height / 2 + fontWidth / 2} : "Middle_Left" == textPosition && (d = {\r\n                    x: this.x,\r\n                    y: this.y + this.height / 2 + fontWidth / 2\r\n                }), null != this.textOffsetX && (d.x += this.textOffsetX), null != this.textOffsetY && (d.y += this.textOffsetY), d\r\n            }, this.paintMouseover = function () {\r\n            }, this.paintSelected = function (a) {\r\n                a.shadowBlur = 10, a.shadowColor = "rgba(0,0,0,1)", a.shadowOffsetX = 0, a.shadowOffsetY = 0\r\n            }\r\n        }\r\n\r\n        container.prototype = new jtopo.InteractiveElement;\r\n        jtopo.Container = container;\r\n    }(JTopo),\r\n    function (jtopo) {\r\n        function getNodesCenter(a) {\r\n            var b = 0, c = 0;\r\n            a.forEach(function (a) {\r\n                b += a.cx, c += a.cy\r\n            });\r\n            var d = {x: b / a.length, y: c / a.length};\r\n            return d\r\n        }\r\n\r\n        function circleLayoutNodes(nodeArray, animateConfig) {\r\n            null == animateConfig && (animateConfig = {});\r\n            {\r\n                var e = animateConfig.cx,\r\n                    f = animateConfig.cy,\r\n                    g = animateConfig.minRadius,\r\n                    h = animateConfig.nodeDiameter,\r\n                    i = animateConfig.hScale || 1,\r\n                    j = animateConfig.vScale || 1;\r\n                animateConfig.beginAngle || 0, animateConfig.endAngle || 2 * Math.PI\r\n            }\r\n            if (null == e || null == f) {\r\n                var k = getNodesCenter(nodeArray);\r\n                e = k.x, f = k.y\r\n            }\r\n            var l = 0, m = [], n = [];\r\n            nodeArray.forEach(function (node) {\r\n                null == animateConfig.nodeDiameter ? (node.diameter && (h = node.diameter),\r\n                    h = node.radius ? 2 * node.radius : Math.sqrt(2 * node.width * node.height),\r\n                    n.push(h)) : n.push(h), l += h\r\n            }), nodeArray.forEach(function (a, b) {\r\n                var c = n[b] / l;\r\n                m.push(Math.PI * c)\r\n            });\r\n            var o = (nodeArray.length, m[0] + m[1]), p = n[0] / 2 + n[1] / 2, q = p / 2 / Math.sin(o / 2);\r\n            null != g && g > q && (q = g);\r\n            var r = q * i, s = q * j, t = animateConfig.animate;\r\n            if (t) {\r\n                var time = t.time || 1e3, v = 0;\r\n                nodeArray.forEach(function (node, c) {\r\n                    v += 0 == c ? m[c] : m[c - 1] + m[c];\r\n                    var d = e + Math.cos(v) * r, g = f + Math.sin(v) * s;\r\n                    jtopo.Animate.stepByStep(node, {x: d - node.width / 2, y: g - node.height / 2}, time).start()\r\n                })\r\n            } else {\r\n                var v = 0;\r\n                nodeArray.forEach(function (a, b) {\r\n                    v += 0 == b ? m[b] : m[b - 1] + m[b];\r\n                    var c = e + Math.cos(v) * r, d = f + Math.sin(v) * s;\r\n                    a.cx = c, a.cy = d\r\n                })\r\n            }\r\n            return {cx: e, cy: f, radius: r, radiusA: r, radiusB: s}\r\n        }\r\n\r\n        function GridLayout(row, column) {\r\n            return function (container) {\r\n                var childs = container.childs;\r\n                if (!(childs.length <= 0)) {\r\n                    var cBound = container.getBound();\r\n                    var childNode = childs[0];\r\n                    var columSpace = (cBound.width - childNode.width) / column;\r\n                    var rowSpace = (cBound.height - childNode.height) / row;\r\n                    for (var childIndex = 0, rowsIndex = 0; row > rowsIndex; rowsIndex++) {\r\n                        for (var columnIndex = 0; column > columnIndex; columnIndex++) {\r\n                            var node = childs[childIndex++];\r\n                            var x = cBound.left + columSpace / 2 + columnIndex * columSpace;\r\n                            var y = cBound.top + rowSpace / 2 + rowsIndex * rowSpace;\r\n                            node.setLocation(x, y);\r\n                            if (childIndex >= childs.length) {\r\n                                return\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        function FlowLayout(row, column) {\r\n            if (null == column) {\r\n                column = 0;\r\n            }\r\n            if (null == row) {\r\n                row = 0;\r\n            }\r\n            return function (container) {\r\n                var childs = container.childs;\r\n                if (!(childs.length <= 0)) {\r\n                    var bound = container.getBound();\r\n                    var left = bound.left;\r\n                    var top = bound.top;\r\n                    for (var i = 0; i < childs.length; i++) {\r\n                        var child = childs[i];\r\n                        if (left + child.width >= bound.right) {\r\n                            left = bound.left;\r\n                            top += row + child.height;\r\n                        }\r\n                        child.setLocation(left, top);\r\n                        left += column + child.width;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function AutoBoundLayout() {\r\n            return function (container, children) {\r\n                if (children.length > 0) {\r\n                    var left = 1e7,\r\n                        right = -1e7,\r\n                        top = 1e7,\r\n                        bottom = -1e7,\r\n                        width = right - left,\r\n                        height = bottom - top;\r\n                    for (var i = 0; i < children.length; i++) {\r\n                        var child = children[i];\r\n                        child.x <= left && (left = child.x);\r\n                        (child.x + child.width) >= right && (right = child.x + child.width);\r\n                        child.y <= top && (top = child.y);\r\n                        (child.y + child.height) >= bottom && (bottom = child.y + child.height);\r\n                        width = right - left;\r\n                        height = bottom - top;\r\n                    }\r\n                    container.x = left;\r\n                    container.y = top;\r\n                    container.width = width;\r\n                    container.height = height;\r\n                } else {\r\n                    container.width = 100;\r\n                    container.height = 100;\r\n                }\r\n                if (container.qtopo) {\r\n                    container.qtopo.attr.size[0] = container.width;\r\n                    container.qtopo.attr.size[1] = container.height;\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 找到可以作为根的节点\r\n         * */\r\n        function getRootNodes(elements) {\r\n            return elements.filter(function (element) {\r\n                return (element instanceof jtopo.Node) &&\r\n                    (!element.inLinks || element.inLinks.length == 0) &&\r\n                    (element.outLinks && element.outLinks.length > 0);\r\n            });\r\n        }\r\n\r\n        function getGap(arr) {\r\n            var totalWidth = 0, totalHeight = 0;\r\n            arr.forEach(function (a) {\r\n                totalWidth += a.width;\r\n                totalHeight += a.height;\r\n            });\r\n            return {\r\n                width: totalWidth / arr.length,\r\n                height: totalHeight / arr.length\r\n            }\r\n        }\r\n\r\n        function i(a, b, c, d) {\r\n            b.x += c, b.y += d;\r\n            for (var e = getRootChilds(a, b), f = 0; f < e.length; f++)i(a, e[f], c, d)\r\n        }\r\n\r\n        function j(a, b) {\r\n            function c(b, e) {\r\n                var f = getRootChilds(a, b);\r\n                null == d[e] && (d[e] = {}, d[e].nodes = [], d[e].childs = []), d[e].nodes.push(b), d[e].childs.push(f);\r\n                for (var g = 0; g < f.length; g++)c(f[g], e + 1), f[g].parent = b\r\n            }\r\n\r\n            var d = [];\r\n            return c(b, 0), d\r\n        }\r\n\r\n        function TreeLayout(direction, gap, top) {\r\n            return function (scene) {\r\n                function f(childs, root) {\r\n                    var h = jtopo.layout.getTreeDeep(childs, root);\r\n                    var k = j(childs, root);\r\n                    var l = k["" + h].nodes;\r\n                    for (var m = 0; m < l.length; m++) {\r\n                        var n = l[m], o = (m + 1) * (gap + 10), p = h * top;\r\n                        "down" == direction || ("up" == direction ? p = -p : "left" == direction ? (o = -h * top, p = (m + 1) * (gap + 10)) : "right" == direction && (o = h * top, p = (m + 1) * (gap + 10))), n.setLocation(o, p)\r\n                    }\r\n                    for (var q = h - 1; q >= 0; q--)for (var r = k["" + q].nodes, s = k["" + q].childs, m = 0; m < r.length; m++) {\r\n                        var t = r[m], u = s[m];\r\n                        if ("down" == direction ? t.y = q * top : "up" == direction ? t.y = -q * top : "left" == direction ? t.x = -q * top : "right" == direction && (t.x = q * top), u.length > 0 ? "down" == direction || "up" == direction ? t.x = (u[0].x + u[u.length - 1].x) / 2 : ("left" == direction || "right" == direction) && (t.y = (u[0].y + u[u.length - 1].y) / 2) : m > 0 && ("down" == direction || "up" == direction ? t.x = r[m - 1].x + r[m - 1].width + gap : ("left" == direction || "right" == direction) && (t.y = r[m - 1].y + r[m - 1].height + gap)), m > 0)if ("down" == direction || "up" == direction) {\r\n                            if (t.x < r[m - 1].x + r[m - 1].width)for (var v = r[m - 1].x + r[m - 1].width + gap, w = Math.abs(v - t.x), x = m; x < r.length; x++)i(scene.childs, r[x], w, 0)\r\n                        } else if (("left" == direction || "right" == direction) && t.y < r[m - 1].y + r[m - 1].height)for (var y = r[m - 1].y + r[m - 1].height + gap, z = Math.abs(y - t.y), x = m; x < r.length; x++)i(scene.childs, r[x], 0, z)\r\n                    }\r\n                }\r\n\r\n                var realGap = null;\r\n                if (null == gap) {\r\n                    realGap = getGap(scene.childs);\r\n                    gap = realGap.width;\r\n                    if ("left" == direction || "right" == direction) {\r\n                        gap = realGap.width + 10;\r\n                    }\r\n                }\r\n                if (null == top) {\r\n                    if (null == realGap) {\r\n                        realGap = getGap(scene.childs)\r\n                    }\r\n                    top = 2 * realGap.height;\r\n                }\r\n                direction = direction || "down";\r\n                var roots = jtopo.layout.getRootNodes(scene.childs);\r\n                if (roots.length > 0) {\r\n                    f(scene.childs, roots[0]);\r\n                    var bound = jtopo.util.getElementsBound(scene.childs);\r\n                    var center = scene.getCenterLocation();\r\n                    var startX = center.x - (bound.left + bound.right) / 2,\r\n                        startY = center.y - (bound.top + bound.bottom) / 2;\r\n                    scene.childs.forEach(function (element) {\r\n                        if (element instanceof jtopo.Node) {\r\n                            element.x += startX;\r\n                            element.y += startY;\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n        //必须得是有向无环图才可以布局\r\n        function CircleLayout(radius) {\r\n            return function (scene) {\r\n                function locationSet(allChilds, root, ra) {\r\n                    var rootsArr = getRootChilds(allChilds, root);\r\n                    if (0 != rootsArr.length) {\r\n                        if (null == ra) {\r\n                            ra = radius;\r\n                        }\r\n                        var step = 2 * Math.PI / rootsArr.length;\r\n                        rootsArr.forEach(function (child, i) {\r\n                            child.setLocation(\r\n                                root.x + ra * Math.cos(step * i),\r\n                                root.y + ra * Math.sin(step * i)\r\n                            );\r\n                            locationSet(allChilds, child, ra / 2);\r\n                        })\r\n                    }\r\n                }\r\n\r\n                var roots = jtopo.layout.getRootNodes(scene.childs);\r\n                if (roots.length > 0) {\r\n                    locationSet(scene.childs, roots[0]);\r\n                    var bound = jtopo.util.getElementsBound(scene.childs);\r\n                    var center = scene.getCenterLocation();\r\n                    var left = center.x - (bound.left + bound.right) / 2;\r\n                    var top = center.y - (bound.top + bound.bottom) / 2;\r\n                    scene.childs.forEach(function (b) {\r\n                        if (b instanceof jtopo.Node) {\r\n                            b.x += left;\r\n                            b.y += top;\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n        function m(a, b, c, d, e, f) {\r\n            for (var g = [], h = 0; c > h; h++)for (var i = 0; d > i; i++)g.push({x: a + i * e, y: b + h * f});\r\n            return g\r\n        }\r\n\r\n        function circlePosition(centerX, centerY, total, raidus, beginAngle, endAngle) {\r\n            var begin = beginAngle ? beginAngle : 0;\r\n            var end = endAngle ? endAngle : 2 * Math.PI;\r\n            var totalAngle = end - begin;\r\n            var step = totalAngle / total;\r\n            var position = [];\r\n            begin += step / 2;\r\n            for (var i = begin; end >= i; i += step) {\r\n                position.push({\r\n                    x: centerX + Math.cos(i) * raidus,\r\n                    y: centerY + Math.sin(i) * raidus\r\n                });\r\n            }\r\n            return position\r\n        }\r\n\r\n        function treePostion(a, b, c, d, e, f) {\r\n            var g = f || "bottom", h = [];\r\n            if ("bottom" == g)for (var i = a - c / 2 * d + d / 2, j = 0; c >= j; j++)h.push({\r\n                x: i + j * d,\r\n                y: b + e\r\n            }); else if ("top" == g)for (var i = a - c / 2 * d + d / 2, j = 0; c >= j; j++)h.push({\r\n                x: i + j * d,\r\n                y: b - e\r\n            }); else if ("right" == g)for (var i = b - c / 2 * d + d / 2, j = 0; c >= j; j++)h.push({\r\n                x: a + e,\r\n                y: i + j * d\r\n            }); else if ("left" == g)for (var i = b - c / 2 * d + d / 2, j = 0; c >= j; j++)h.push({x: a - e, y: i + j * d});\r\n            return h\r\n        }\r\n\r\n        function gridPosition(a, b, c, d, e, f) {\r\n            for (var g = [], h = 0; c > h; h++)for (var i = 0; d > i; i++)g.push({x: a + i * e, y: b + h * f});\r\n            return g\r\n        }\r\n\r\n        function adjustPosition(root, rootChilds) {\r\n            if (root.layout) {\r\n                var layout = root.layout;\r\n                var locationArr = null;\r\n                switch (layout.type) {\r\n                    case \'circle\':\r\n                        var radius = layout.radius || Math.max(root.width, root.height);\r\n                        locationArr = circlePosition(\r\n                            root.cx,\r\n                            root.cy,\r\n                            rootChilds.length,\r\n                            radius,\r\n                            root.layout.beginAngle,\r\n                            root.layout.endAngle\r\n                        );\r\n                        break;\r\n                    case \'tree\':\r\n                        locationArr = treePostion(\r\n                            root.cx,\r\n                            root.cy,\r\n                            rootChilds.length,\r\n                            layout.width || 50,\r\n                            layout.height || 50,\r\n                            layout.direction\r\n                        );\r\n                        break;\r\n                    case \'grid\':\r\n                        locationArr = gridPosition(\r\n                            root.x,\r\n                            root.y,\r\n                            layout.rows,\r\n                            layout.cols,\r\n                            layout.horizontal || 0,\r\n                            layout.vertical || 0\r\n                        );\r\n                        break;\r\n                }\r\n                for (var i = 0; i < rootChilds.length; i++) {\r\n                    rootChilds[i].setCenterLocation(locationArr[i].x, locationArr[i].y);\r\n                }\r\n            }\r\n        }\r\n\r\n        function getRootChilds(allChilds, rootNode) {\r\n            var rootChilds;\r\n            if (rootNode.outLinks instanceof Array && rootNode.outLinks.length > 0) {\r\n                rootChilds = rootNode.outLinks.map(function (link) {\r\n                    return link.nodeZ;\r\n                });\r\n            }\r\n            return rootChilds || [];\r\n        }\r\n\r\n        function layoutNode(scene, root, recursion) {\r\n            var rootChilds = getRootChilds(scene.childs, root);\r\n            if (0 != rootChilds.length) {\r\n                adjustPosition(root, rootChilds);\r\n                if (1 == recursion) {\r\n                    for (var e = 0; e < rootChilds.length; e++) {\r\n                        layoutNode(scene, rootChilds[e], recursion);\r\n                    }\r\n                }\r\n            }\r\n            return null\r\n        }\r\n\r\n        function springLayout(b, c) {\r\n            function d(a, b) {\r\n                var c = a.x - b.x, d = a.y - b.y;\r\n                i += c * f, j += d * f, i *= g, j *= g, j += h, b.x += i, b.y += j\r\n            }\r\n\r\n            function e() {\r\n                if (!(++k > 150)) {\r\n                    for (var a = 0; a < l.length; a++)l[a] != b && d(b, l[a], l);\r\n                    setTimeout(e, 1e3 / 24)\r\n                }\r\n            }\r\n\r\n            var f = .01, g = .95, h = -5, i = 0, j = 0, k = 0, l = c.getElementsByClass(jtopo.Node);\r\n            e()\r\n        }\r\n\r\n        function getTreeDeep(childs, root) {\r\n            function reDeep(childs, root, deep) {\r\n                var rootChilds = getRootChilds(childs, root);\r\n                if (deep > d) {\r\n                    d = deep;\r\n                }\r\n                for (var g = 0; g < rootChilds.length; g++) {\r\n                    reDeep(childs, rootChilds[g], deep + 1);\r\n                }\r\n            }\r\n\r\n            var d = 0;\r\n            reDeep(childs, root, 0);\r\n            return d;\r\n        }\r\n\r\n        jtopo.layout = jtopo.Layout = {\r\n            layoutNode: layoutNode,\r\n            getNodeChilds: getRootChilds,\r\n            adjustPosition: adjustPosition,\r\n            springLayout: springLayout,\r\n            getTreeDeep: getTreeDeep,\r\n            getRootNodes: getRootNodes,\r\n            GridLayout: GridLayout,\r\n            FlowLayout: FlowLayout,\r\n            AutoBoundLayout: AutoBoundLayout,\r\n            CircleLayout: CircleLayout,\r\n            TreeLayout: TreeLayout,\r\n            getNodesCenter: getNodesCenter,\r\n            circleLayoutNodes: circleLayoutNodes\r\n        }\r\n    }(JTopo),\r\n    function (jtopo) {\r\n        function PieChartNode() {\r\n            var b = new jtopo.CircleNode;\r\n            return b.radius = 150, b.colors = ["#3666B0", "#2CA8E0", "#77D1F6"], b.datas = [.3, .3, .4], b.titles = ["A", "B", "C"], b.paint = function (a) {\r\n                var c = 2 * b.radius, d = 2 * b.radius;\r\n                b.width = c, b.height = d;\r\n                for (var e = 0, f = 0; f < this.datas.length; f++) {\r\n                    var g = this.datas[f] * Math.PI * 2;\r\n                    a.save(), a.beginPath(), a.fillStyle = b.colors[f], a.moveTo(0, 0), a.arc(0, 0, this.radius, e, e + g, !1), a.fill(), a.closePath(), a.restore(), a.beginPath(), a.font = this.font;\r\n                    var h = this.titles[f] + ": " + (100 * this.datas[f]).toFixed(2) + "%", i = a.measureText(h).width, j = (a.measureText("田").width, (e + e + g) / 2), k = this.radius * Math.cos(j), l = this.radius * Math.sin(j);\r\n                    j > Math.PI / 2 && j <= Math.PI ? k -= i : j > Math.PI && j < 2 * Math.PI * 3 / 4 ? k -= i : j > 2 * Math.PI * .75, a.fillStyle = "#FFFFFF", a.fillText(h, k, l), a.moveTo(this.radius * Math.cos(j), this.radius * Math.sin(j)), j > Math.PI / 2 && j < 2 * Math.PI * 3 / 4 && (k -= i), j > Math.PI, a.fill(), a.stroke(), a.closePath(), e += g\r\n                }\r\n            }, b\r\n        }\r\n\r\n        function BarChartNode() {\r\n            var b = new jtopo.Node;\r\n            return b.showSelected = !1, b.width = 250, b.height = 180, b.colors = ["#3666B0", "#2CA8E0", "#77D1F6"], b.datas = [.3, .3, .4], b.titles = ["A", "B", "C"], b.paint = function (a) {\r\n                var c = 3, d = (this.width - c) / this.datas.length;\r\n                a.save(), a.beginPath(), a.fillStyle = "#FFFFFF", a.strokeStyle = "#FFFFFF", a.moveTo(-this.width / 2 - 1, -this.height / 2), a.lineTo(-this.width / 2 - 1, this.height / 2 + 3), a.lineTo(this.width / 2 + c + 1, this.height / 2 + 3), a.stroke(), a.closePath(), a.restore();\r\n                for (var e = 0; e < this.datas.length; e++) {\r\n                    a.save(), a.beginPath(), a.fillStyle = b.colors[e];\r\n                    var f = this.datas[e], g = e * (d + c) - this.width / 2, h = this.height - f - this.height / 2;\r\n                    a.fillRect(g, h, d, f);\r\n                    var i = "" + parseInt(this.datas[e]), j = a.measureText(i).width, k = a.measureText("田").width;\r\n                    a.fillStyle = "#FFFFFF", a.fillText(i, g + (d - j) / 2, h - k), a.fillText(this.titles[e], g + (d - j) / 2, this.height / 2 + k), a.fill(), a.closePath(), a.restore()\r\n                }\r\n            }, b\r\n        }\r\n\r\n        jtopo.BarChartNode = BarChartNode;\r\n        jtopo.PieChartNode = PieChartNode;\r\n    }(JTopo),\r\n    function (jtopo) {\r\n        function b(b, c) {\r\n            var d, e = null;\r\n            return {\r\n                stop: function () {\r\n                    return d ? (window.clearInterval(d), e && e.publish("stop"), this) : this\r\n                }, start: function () {\r\n                    var a = this;\r\n                    return d = setInterval(function () {\r\n                        b.call(a)\r\n                    }, c), this\r\n                }, onStop: function (b) {\r\n                    return null == e && (e = new jtopo.util.MessageBus), e.subscribe("stop", b), this\r\n                }\r\n            }\r\n        }\r\n\r\n        function ef_gravity(a, c) {\r\n            c = c || {};\r\n            var d = c.gravity || .1, e = c.dx || 0, f = c.dy || 5, g = c.stop, h = c.interval || 30, i = new b(function () {\r\n                g && g() ? (f = .5, this.stop()) : (f += d, a.setLocation(a.x + e, a.y + f))\r\n            }, h);\r\n            return i\r\n        }\r\n\r\n        function an_stepByStep(target, attr, time, e, f) {\r\n            var g = 1e3 / 24, h = {};\r\n            for (var i in attr) {\r\n                var j = attr[i], k = j - target[i];\r\n                h[i] = {\r\n                    oldValue: target[i], targetValue: j, step: k / time * g, isDone: function (b) {\r\n                        var c = this.step > 0 && target[b] >= this.targetValue || this.step < 0 && target[b] <= this.targetValue;\r\n                        return c\r\n                    }\r\n                }\r\n            }\r\n            var l = new b(function () {\r\n                var b = !0;\r\n                for (var d in attr)h[d].isDone(d) || (target[d] += h[d].step, b = !1);\r\n                if (b) {\r\n                    if (!e)return this.stop();\r\n                    for (var d in attr)if (f) {\r\n                        var g = h[d].targetValue;\r\n                        h[d].targetValue = h[d].oldValue, h[d].oldValue = g, h[d].step = -h[d].step\r\n                    } else target[d] = h[d].oldValue\r\n                }\r\n                return this\r\n            }, g);\r\n            return l\r\n        }\r\n\r\n        function ef_spring(a) {\r\n            null == a && (a = {});\r\n            var b = a.spring || .1, c = a.friction || .8, d = a.grivity || 0, e = (a.wind || 0, a.minLength || 0);\r\n            return {\r\n                items: [], timer: null, isPause: !1, addNode: function (a, b) {\r\n                    var c = {node: a, target: b, vx: 0, vy: 0};\r\n                    return this.items.push(c), this\r\n                }, play: function (a) {\r\n                    this.stop(), a = null == a ? 1e3 / 24 : a;\r\n                    var b = this;\r\n                    this.timer = setInterval(function () {\r\n                        b.nextFrame()\r\n                    }, a)\r\n                }, stop: function () {\r\n                    null != this.timer && window.clearInterval(this.timer)\r\n                }, nextFrame: function () {\r\n                    for (var a = 0; a < this.items.length; a++) {\r\n                        var f = this.items[a], g = f.node, h = f.target, i = f.vx, j = f.vy, k = h.x - g.x, l = h.y - g.y, m = Math.atan2(l, k);\r\n                        if (0 != e) {\r\n                            var n = h.x - Math.cos(m) * e, o = h.y - Math.sin(m) * e;\r\n                            i += (n - g.x) * b, j += (o - g.y) * b\r\n                        } else i += k * b, j += l * b;\r\n                        i *= c, j *= c, j += d, g.x += i, g.y += j, f.vx = i, f.vy = j\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function an_rotate(a, b) {\r\n            function c() {\r\n                return e = setInterval(function () {\r\n                    return o ? void f.stop() : (a.rotate += g || .2, void(a.rotate > 2 * Math.PI && (a.rotate = 0)))\r\n                }, 100), f\r\n            }\r\n\r\n            function d() {\r\n                return window.clearInterval(e), f.onStop && f.onStop(a), f\r\n            }\r\n\r\n            var e = (b.context, null), f = {}, g = b.v;\r\n            return f.run = c, f.stop = d, f.onStop = function (a) {\r\n                return f.onStop = a, f\r\n            }, f\r\n        }\r\n\r\n        function an_gravity(a, b) {\r\n            function c() {\r\n                return window.clearInterval(g), h.onStop && h.onStop(a), h\r\n            }\r\n\r\n            function d() {\r\n                var d = b.dx || 0, i = b.dy || 2;\r\n                return g = setInterval(function () {\r\n                    return o ? void h.stop() : (i += f, void(a.y + a.height < e.stage.canvas.height ? a.setLocation(a.x + d, a.y + i) : (i = 0, c())))\r\n                }, 20), h\r\n            }\r\n\r\n            var e = b.context, f = b.gravity || .1, g = null, h = {};\r\n            return h.run = d, h.stop = c, h.onStop = function (a) {\r\n                return h.onStop = a, h\r\n            }, h\r\n        }\r\n\r\n        function an_dividedTwoPiece(b, c) {\r\n            function d(c, d, e, f, g) {\r\n                var h = new jtopo.Node;\r\n                return h.setImage(b.image), h.setSize(b.width, b.height), h.setLocation(c, d), h.showSelected = !1, h.dragable = !1, h.paint = function (a) {\r\n                    a.save(), a.arc(0, 0, e, f, g), a.clip(), a.beginPath(), null != this.image ? a.drawImage(this.image, -this.width / 2, -this.height / 2) : (a.fillStyle = "rgba(" + this.style.fillStyle + "," + this.alpha + ")", a.rect(-this.width / 2, -this.height / 2, this.width / 2, this.height / 2), a.fill()), a.closePath(), a.restore()\r\n                }, h\r\n            }\r\n\r\n            function e(c, e) {\r\n                var f = c, g = c + Math.PI, h = d(b.x, b.y, b.width, f, g), j = d(b.x - 2 + 4 * Math.random(), b.y, b.width, f + Math.PI, f);\r\n                b.visible = !1, e.add(h), e.add(j), jtopo.Animate.gravity(h, {context: e, dx: .3}).run().onStop(function () {\r\n                    e.remove(h), e.remove(j), i.stop()\r\n                }), jtopo.Animate.gravity(j, {context: e, dx: -.2}).run()\r\n            }\r\n\r\n            function f() {\r\n                return e(c.angle, h), i\r\n            }\r\n\r\n            function g() {\r\n                return i.onStop && i.onStop(b), i\r\n            }\r\n\r\n            var h = c.context, i = (b.style, {});\r\n            return i.onStop = function (a) {\r\n                return i.onStop = a, i\r\n            }, i.run = f, i.stop = g, i\r\n        }\r\n\r\n        function an_repeatThrow(a, b) {\r\n            function c(a) {\r\n                a.visible = !0, a.rotate = Math.random();\r\n                var b = g.stage.canvas.width / 2;\r\n                a.x = b + Math.random() * (b - 100) - Math.random() * (b - 100), a.y = g.stage.canvas.height, a.vx = 5 * Math.random() - 5 * Math.random(), a.vy = -25\r\n            }\r\n\r\n            function d() {\r\n                return c(a), h = setInterval(function () {\r\n                    return o ? void i.stop() : (a.vy += f, a.x += a.vx, a.y += a.vy, void((a.x < 0 || a.x > g.stage.canvas.width || a.y > g.stage.canvas.height) && (i.onStop && i.onStop(a), c(a))))\r\n                }, 50), i\r\n            }\r\n\r\n            function e() {\r\n                window.clearInterval(h)\r\n            }\r\n\r\n            var f = .8, g = b.context, h = null, i = {};\r\n            return i.onStop = function (a) {\r\n                return i.onStop = a, i\r\n            }, i.run = d, i.stop = e, i\r\n        }\r\n\r\n        function an_stopAll() {\r\n            o = !0\r\n        }\r\n\r\n        function an_startAll() {\r\n            o = !1\r\n        }\r\n\r\n        function an_cycle(b, c) {\r\n            function d() {\r\n                return n = setInterval(function () {\r\n                    if (o)return void m.stop();\r\n                    var a = f.y + h + Math.sin(k) * j;\r\n                    b.setLocation(b.x, a), k += l\r\n                }, 100), m\r\n            }\r\n\r\n            function e() {\r\n                window.clearInterval(n)\r\n            }\r\n\r\n            var f = c.p1, g = c.p2, h = (c.context, f.x + (g.x - f.x) / 2), i = f.y + (g.y - f.y) / 2, j = jtopo.util.getDistance(f, g) / 2, k = Math.atan2(i, h), l = c.speed || .2, m = {}, n = null;\r\n            return m.run = d, m.stop = e, m\r\n        }\r\n\r\n        function an_move(a, b) {\r\n            function c() {\r\n                return h = setInterval(function () {\r\n                    if (o)return void g.stop();\r\n                    var b = e.x - a.x, c = e.y - a.y, h = b * f, i = c * f;\r\n                    a.x += h, a.y += i, .01 > h && .1 > i && d()\r\n                }, 100), g\r\n            }\r\n\r\n            function d() {\r\n                window.clearInterval(h)\r\n            }\r\n\r\n            var e = b.position, f = (b.context, b.easing || .2), g = {}, h = null;\r\n            return g.onStop = function (a) {\r\n                return g.onStop = a, g\r\n            }, g.run = c, g.stop = d, g\r\n        }\r\n\r\n        function an_scale(a, b) {\r\n            function c() {\r\n                return j = setInterval(function () {\r\n                    a.scaleX += f, a.scaleY += f, a.scaleX >= e && d()\r\n                }, 100), i\r\n            }\r\n\r\n            function d() {\r\n                i.onStop && i.onStop(a), a.scaleX = g, a.scaleY = h, window.clearInterval(j)\r\n            }\r\n\r\n            var e = (b.position, b.context, b.scale || 1), f = .06, g = a.scaleX, h = a.scaleY, i = {}, j = null;\r\n            return i.onStop = function (a) {\r\n                return i.onStop = a, i\r\n            }, i.run = c, i.stop = d, i\r\n        }\r\n\r\n        jtopo.Animate = {}, jtopo.Effect = {};\r\n        var o = !1;\r\n        jtopo.Effect.spring = ef_spring;\r\n        jtopo.Effect.gravity = ef_gravity;\r\n        jtopo.Animate.stepByStep = an_stepByStep;\r\n        jtopo.Animate.rotate = an_rotate;\r\n        jtopo.Animate.scale = an_scale;\r\n        jtopo.Animate.move = an_move;\r\n        jtopo.Animate.cycle = an_cycle;\r\n        jtopo.Animate.repeatThrow = an_repeatThrow;\r\n        jtopo.Animate.dividedTwoPiece = an_dividedTwoPiece;\r\n        jtopo.Animate.gravity = an_gravity;\r\n        jtopo.Animate.startAll = an_startAll;\r\n        jtopo.Animate.stopAll = an_stopAll;\r\n    }(JTopo),\r\n    function (jtopo) {\r\n        function b(a, b) {\r\n            var c = [];\r\n            if (0 == a.length)return c;\r\n            var d = b.match(/^\\s*(\\w+)\\s*$/);\r\n            if (null != d) {\r\n                var e = a.filter(function (a) {\r\n                    return a.elementType == d[1]\r\n                });\r\n                null != e && e.length > 0 && (c = c.concat(e))\r\n            } else {\r\n                var f = !1;\r\n                if (d = b.match(/\\s*(\\w+)\\s*\\[\\s*(\\w+)\\s*([>=<])\\s*[\'"](\\S+)[\'"]\\s*\\]\\s*/), (null == d || d.length < 5) && (d = b.match(/\\s*(\\w+)\\s*\\[\\s*(\\w+)\\s*([>=<])\\s*(\\d+(\\.\\d+)?)\\s*\\]\\s*/), f = !0), null != d && d.length >= 5) {\r\n                    var g = d[1], h = d[2], i = d[3], j = d[4];\r\n                    e = a.filter(function (a) {\r\n                        if (a.elementType != g)return !1;\r\n                        var b = a[h];\r\n                        return 1 == f && (b = parseInt(b)), "=" == i ? b == j : ">" == i ? b > j : "<" == i ? j > b : "<=" == i ? j >= b : ">=" == i ? b >= j : "!=" == i ? b != j : !1\r\n                    }), null != e && e.length > 0 && (c = c.concat(e))\r\n                }\r\n            }\r\n            return c\r\n        }\r\n\r\n        function c(a) {\r\n            if (a.find = function (a) {\r\n                    return find.call(this, a)\r\n                }, e.forEach(function (b) {\r\n                    a[b] = function (a) {\r\n                        for (var c = 0; c < this.length; c++)this[c][b](a);\r\n                        return this\r\n                    }\r\n                }), a.length > 0) {\r\n                var b = a[0];\r\n                for (var c in b) {\r\n                    var f = b[c];\r\n                    "function" == typeof f && !function (b) {\r\n                        a[c] = function () {\r\n                            for (var c = [], d = 0; d < a.length; d++)c.push(b.apply(a[d], arguments));\r\n                            return c\r\n                        }\r\n                    }(f)\r\n                }\r\n            }\r\n            return a.attr = function (a, b) {\r\n                if (null != a && null != b)for (var c = 0; c < this.length; c++)this[c][a] = b; else {\r\n                    if (null != a && "string" == typeof a) {\r\n                        for (var d = [], c = 0; c < this.length; c++)d.push(this[c][a]);\r\n                        return d\r\n                    }\r\n                    if (null != a)for (var c = 0; c < this.length; c++)for (var e in a)this[c][e] = a[e]\r\n                }\r\n                return this\r\n            }, a\r\n        }\r\n\r\n        function find(d) {\r\n            debugger;\r\n            var e = [];\r\n            var f = [];\r\n            if (this instanceof jtopo.Stage) {\r\n                e = this.childs;\r\n                f = f.concat(e);\r\n            } else if (this instanceof jtopo.Scene) {\r\n                e = [this];\r\n            } else {\r\n                f = this;\r\n                e.forEach(function (a) {\r\n                    f = f.concat(a.childs)\r\n                });\r\n            }\r\n            var g = null;\r\n            if ("function" == typeof d) {\r\n                f.filter(d)\r\n            } else {\r\n                b(f, d);\r\n            }\r\n            return c(g);\r\n        }\r\n\r\n        var e = "click,mousedown,mouseup,mouseover,mouseout,mousedrag,keydown,keyup".split(",");\r\n        jtopo.Stage.prototype.find = find;\r\n        jtopo.Scene.prototype.find = find;\r\n    }(JTopo),\r\n    function (win) {\r\n        function logObject(a, b) {\r\n            this.x = a;\r\n            this.y = b;\r\n        }\r\n\r\n        function Tortoise(a) {\r\n            this.p = new logObject(0, 0);\r\n            this.w = new logObject(1, 0);\r\n            this.paint = a;\r\n        }\r\n\r\n        function shift(a, b, c) {\r\n            return function (d) {\r\n                for (var e = 0; b > e; e++)a(), c && d.turn(c), d.move(3)\r\n            }\r\n        }\r\n\r\n        function spin(a, b) {\r\n            var c = 2 * Math.PI;\r\n            return function (d) {\r\n                for (var e = 0; b > e; e++)a(), d.turn(c / b)\r\n            }\r\n        }\r\n\r\n        function scale(a, b, c) {\r\n            return function (d) {\r\n                for (var e = 0; b > e; e++)a(), d.resize(c)\r\n            }\r\n        }\r\n\r\n        function polygon(a) {\r\n            var b = 2 * Math.PI;\r\n            return function (c) {\r\n                for (var d = 0; a > d; d++)c.forward(1), c.turn(b / a)\r\n            }\r\n        }\r\n\r\n        function star(a) {\r\n            var b = 4 * Math.PI;\r\n            return function (c) {\r\n                for (var d = 0; a > d; d++)c.forward(1), c.turn(b / a)\r\n            }\r\n        }\r\n\r\n        function spiral(a, b, c, d) {\r\n            return function (e) {\r\n                for (var f = 0; b > f; f++)a(), e.forward(1), e.turn(c), e.resize(d)\r\n            }\r\n        }\r\n\r\n        var Logo = {};\r\n        Tortoise.prototype.forward = function (a) {\r\n            var b = this.p, c = this.w;\r\n            return b.x = b.x + a * c.x, b.y = b.y + a * c.y, this.paint && this.paint(b.x, b.y), this\r\n        };\r\n        Tortoise.prototype.move = function (a) {\r\n            var b = this.p, c = this.w;\r\n            return b.x = b.x + a * c.x, b.y = b.y + a * c.y, this\r\n        };\r\n        Tortoise.prototype.moveTo = function (a, b) {\r\n            return this.p.x = a, this.p.y = b, this\r\n        };\r\n        Tortoise.prototype.turn = function (a) {\r\n            var b = (this.p, this.w);\r\n            var c = Math.cos(a) * b.x - Math.sin(a) * b.y;\r\n            var d = Math.sin(a) * b.x + Math.cos(a) * b.y;\r\n            b.x = c;\r\n            b.y = d;\r\n            return this;\r\n        };\r\n        Tortoise.prototype.resize = function (a) {\r\n            var b = this.w;\r\n            b.x = b.x * a;\r\n            b.y = b.y * a;\r\n            return this;\r\n        };\r\n        Tortoise.prototype.save = function () {\r\n            return null == this._stack && (this._stack = []), this._stack.push([this.p, this.w]), this\r\n        };\r\n        Tortoise.prototype.restore = function () {\r\n            if (null != this._stack && this._stack.length > 0) {\r\n                var a = this._stack.pop();\r\n                this.p = a[0], this.w = a[1]\r\n            }\r\n            return this\r\n        };\r\n        Logo.Tortoise = Tortoise;\r\n        Logo.shift = shift;\r\n        Logo.spin = spin;\r\n        Logo.polygon = polygon;\r\n        Logo.spiral = spiral;\r\n        Logo.star = star;\r\n        Logo.scale = scale;\r\n        win.Logo = Logo;\r\n    }(window);//# sourceMappingURL=data:application/json;charset=utf-8;base64,');
},11:function(module,exports){eval('/**\r\n * @module QTopo\r\n */\r\n/**\r\n * QTopo通用工具包\r\n * @class QTopo.util\r\n * @static\r\n */\r\nfunction cached(fn) {\r\n    var cache = Object.create(null);\r\n    return (function cachedFn(str) {\r\n        var hit = cache[str];\r\n        return hit || (cache[str] = fn(str))\r\n    })\r\n}\r\n\r\nvar util = {\r\n        /**\r\n         *  给函数添加缓存机制\r\n         *  @method cached\r\n         *  @param fn {function} 需处理的函数\r\n         *  @returns {function} 处理过的函数\r\n         */\r\n        cached:cached,\r\n        /**\r\n         * 字符串转化json\r\n         * @method toJson\r\n         * @param json {string|object}\r\n         * @returns json对象 {json}\r\n         */\r\n        toJson: function (json) {\r\n            if (typeof json == \'string\') {\r\n                json = $.parseJSON(json.replace(/\'/g, \'"\'));\r\n            }\r\n            return json;\r\n        },\r\n        /**\r\n         * 首字母大写\r\n         * @method upFirst\r\n         * @param string 字符串\r\n         * @returns {string} 首字母大写的字符串\r\n         */\r\n        upFirst: cached(function (str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        }),\r\n        /**\r\n         * 对象深度合并，只继承原对象有的属性\r\n         * @method extend\r\n         * @param base 原对象\r\n         * @param config 合并对象\r\n         * @returns {object} 处理完的原对象\r\n         */\r\n        extend: function (base, config) {\r\n            try {\r\n                if (typeof base == "object" && typeof config == "object") {\r\n                    deep(base, config);\r\n                }\r\n                else {\r\n                    QTopo.util.error("some extend error:", base, config);\r\n                }\r\n            } catch (e) {\r\n                QTopo.util.error("extend error", e, base, config);\r\n            }\r\n            function deep(attr, config) {\r\n                $.each(attr, function (key, value) {\r\n                    if (attr[key] && typeof attr[key] == "object" && typeof config[key] == "object") {\r\n                        if ($.isArray(attr[key]) && $.isArray(config[key])) {\r\n                            attr[key] = config[key];\r\n                        } else if ($.isFunction(attr[key]) && $.isFunction(config[key])) {\r\n                            attr[key] = config[key];\r\n                        } else {\r\n                            deep(attr[key], config[key]);\r\n                        }\r\n                    } else if (typeof attr[key] != "undefined" && typeof config[key] != "undefined") {\r\n                        attr[key] = config[key];\r\n                    }\r\n                });\r\n            }\r\n\r\n            return base;\r\n        },\r\n        /**\r\n         * 获取浏览器连接上的参数\r\n         * @method getParameter\r\n         * @param param 参数名\r\n         * @returns {string}\r\n         */\r\n        getParameter: function (param) {\r\n            var query = window.location.search;//获取URL地址中？后的所有字符\r\n            var iLen = param.length;//获取你的参数名称长度\r\n            var iStart = query.indexOf(param);//获取你该参数名称的其实索引\r\n            if (iStart == -1)//-1为没有该参数\r\n                return "";\r\n            iStart += iLen + 1;\r\n            var iEnd = query.indexOf("&", iStart);//获取第二个参数的其实索引\r\n            if (iEnd == -1)//只有一个参数\r\n                return query.substring(iStart);//获取单个参数的参数值\r\n            return query.substring(iStart, iEnd);//获取第二个参数的值\r\n        },\r\n        /**\r\n         * 仅画布全屏展示\r\n         * @method runPrefixMethod\r\n         * @param element {document} 例:canvas\r\n         * @param method {string} "RequestFullScreen"全屏的模式\r\n         */\r\n        runPrefixMethod: function (element, method) {\r\n            var usablePrefixMethod;\r\n            ["webkit", "moz", "ms", "o", ""].forEach(function (prefix) {\r\n                    if (usablePrefixMethod) return;\r\n                    if (prefix === "") {\r\n                        // 无前缀，方法首字母小写\r\n                        method = method.slice(0, 1).toLowerCase() + method.slice(1);\r\n                    }\r\n                    var typePrefixMethod = typeof element[prefix + method];\r\n                    if (typePrefixMethod + "" !== "undefined") {\r\n                        if (typePrefixMethod === "function") {\r\n                            usablePrefixMethod = element[prefix + method]();\r\n                        } else {\r\n                            usablePrefixMethod = element[prefix + method];\r\n                        }\r\n                    }\r\n                }\r\n            );\r\n        },\r\n        /**\r\n         * 浏览器全屏展示\r\n         * @method launchFullScreen\r\n         * @param element {document} 例:document.documentElement\r\n         */\r\n        launchFullScreen: function (element) {\r\n            if (element.requestFullscreen) {\r\n                element.requestFullscreen();\r\n            } else if (element.mozRequestFullScreen) {\r\n                element.mozRequestFullScreen();\r\n            } else if (element.webkitRequestFullscreen) {\r\n                element.webkitRequestFullscreen();\r\n            } else if (element.msRequestFullscreen) {\r\n                element.msRequestFullscreen();\r\n            }\r\n        },\r\n        /**\r\n         * 关闭浏览器全屏\r\n         * @method exitFullScreen\r\n         * @param document {document} 例:window.document\r\n         */\r\n        exitFullScreen: function (document) {\r\n            if (document.exitFullscreen) {\r\n                document.exitFullscreen();\r\n            } else if (document.mozCancelFullScreen) {\r\n                document.mozCancelFullScreen();\r\n            } else if (document.webkitExitFullscreen) {\r\n                document.webkitExitFullscreen();\r\n            }\r\n        },\r\n        /**\r\n         * 颜色字符串转换成rgb 16进制\r\n         * @method transHex\r\n         * @param color {string} 例:"#asdd00"\r\n         * @return {string} 16进制 例:"255,255,255"\r\n         */\r\n        transHex: cached(function (color) {\r\n            if (color && color.length == 7 && color.charAt(0) == \'#\') {\r\n                return [\r\n                    parseInt(color.substr(1, 2), 16),\r\n                    parseInt(color.substr(3, 2), 16),\r\n                    parseInt(color.substr(5, 2), 16)\r\n                ].join(\',\');\r\n            } else {\r\n                return color;\r\n            }\r\n        }),\r\n        /**\r\n         * 数组添加元素,如果数组中不存在则存入，否则不做操作\r\n         * @method arrayPush\r\n         * @param arr 操作的数组\r\n         * @param value 操作的元素\r\n         * @return {boolean} 操作是否成功\r\n         */\r\n        arrayPush: function (arr, value) {\r\n            if (arr.indexOf(value) < 0) {\r\n                arr.push(value);\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        /**\r\n         * 数组删除元素,如果数组中不存在则删除，否则不做操作\r\n         * @method arrayDelete\r\n         * @param arr 操作的数组\r\n         * @param value 操作的元素\r\n         * @return {boolean} 操作是否成功\r\n         */\r\n        arrayDelete: function (arr, value) {\r\n            var i = arr.indexOf(value);\r\n            if (i >= 0) {\r\n                arr.splice(i, 1);\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n        /**\r\n         * 构造类继承关系\r\n         * @method inherits\r\n         * @param {Function} clazz 源类\r\n         * @param {Function} baseClazz 基类\r\n         */\r\n        inherits: function (clazz, baseClazz) {\r\n            var clazzPrototype = clazz.prototype;\r\n\r\n            function F() {\r\n            }\r\n\r\n            F.prototype = baseClazz.prototype;\r\n            clazz.prototype = new F();\r\n\r\n            for (var prop in clazzPrototype) {\r\n                clazz.prototype[prop] = clazzPrototype[prop];\r\n            }\r\n            clazz.constructor = clazz;\r\n        },\r\n        /**\r\n         * 深度克隆对象\r\n         * @method deepClone\r\n         * @param {object} obj 待克隆对象\r\n         * @return {object} 克隆后的新对象\r\n         */\r\n        deepClone: function (obj) {\r\n            var result, oClass = util.getClass(obj);\r\n            //确定result的类型\r\n            if (oClass === "Object") {\r\n                result = {};\r\n            } else if (oClass === "Array") {\r\n                result = [];\r\n            } else {\r\n                return obj;\r\n            }\r\n            for (key in obj) {\r\n                var copy = obj[key];\r\n                if (util.getClass(copy) == "Object") {\r\n                    result[key] = arguments.callee(copy);//递归调用\r\n                } else if ($.isArray(copy)) {\r\n                    result[key] = arguments.callee(copy);\r\n                } else {\r\n                    result[key] = obj[key];\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n        /**\r\n         * 获取对象的类\r\n         * @method getClass\r\n         * @param {object} o 待处理对象\r\n         * @return {string} 类名，如"Object","Array"\r\n         */\r\n        getClass: function (o) {\r\n            if (o === null) return "Null";\r\n            if (o === undefined) return "Undefined";\r\n            return Object.prototype.toString.call(o).slice(8, -1);\r\n        },\r\n        /**\r\n         * 加入时间戳的信息日志\r\n         * @method info\r\n         * @param {arguments} arguments\r\n         */\r\n        info: function () {\r\n            if (QTopo.log.info) {\r\n                console.info.apply(console, $.merge([util.dateFormat(new Date(), "hh:mm:ss")], arguments));\r\n            }\r\n        },\r\n        /**\r\n         * 加入时间戳的错误日志\r\n         * @method error\r\n         * @param {arguments} arguments\r\n         */\r\n        error: function () {\r\n            if (QTopo.log.error) {\r\n                console.error.apply(console, $.merge([util.dateFormat(new Date(), "hh:mm:ss")], arguments));\r\n            }\r\n        },\r\n        /**\r\n         * 格式化Date对象\r\n         * @method dateFormat\r\n         * @param {Date} date Date对象\r\n         * @param {string} ftString 格式化字符串,如"hh:mm:ss"\r\n         * @return {string}\r\n         */\r\n        dateFormat: function (date, ftString) {\r\n            if (date instanceof Date) {\r\n                var fomat = {\r\n                    "M+": date.getMonth() + 1, //月份\r\n                    "d+": date.getDate(), //日\r\n                    "h+": date.getHours(), //小时\r\n                    "m+": date.getMinutes(), //分\r\n                    "s+": date.getSeconds(), //秒\r\n                    "q+": Math.floor((date.getMonth() + 3) / 3), //季度\r\n                    "S": date.getMilliseconds() //毫秒\r\n                };\r\n                if (/(y+)/.test(ftString)) {\r\n                    ftString = ftString.replace(RegExp.$1, (date.getFullYear() + "")\r\n                        .substr(4 - RegExp.$1.length));\r\n                }\r\n                for (var type in fomat) {\r\n                    if (new RegExp("(" + type + ")").test(ftString)) {\r\n                        var temp;\r\n                        if (RegExp.$1.length == 1) {\r\n                            temp = fomat[type];\r\n                        } else {\r\n                            temp = ("00" + fomat[type]).substr(("" + fomat[type]).length);\r\n                        }\r\n                        ftString = ftString.replace(RegExp.$1, temp);\r\n                    }\r\n                }\r\n            }\r\n            return ftString;\r\n        },\r\n        /**\r\n         * 构造唯一Id字符串\r\n         * @method makeId\r\n         * @return {string}\r\n         */\r\n        makeId: function () {\r\n            return S4() + "-" + S4() + "-" + S4();\r\n        },\r\n        /**\r\n         * 判断对象是否是元素\r\n         * @method isElement\r\n         * @param element {element}\r\n         * @return {boolean}\r\n         */\r\n        isElement: function (target) {\r\n            return target &&target.getType &&target.getType() != QTopo.constant.SCENE && target.getUseType() != QTopo.constant.CASUAL;\r\n        },\r\n        /**\r\n         * 判断QTopo对象是否是图层\r\n         * @method isScene\r\n         * @param element {element}\r\n         * @return {boolean}\r\n         */\r\n        isScene: function (target) {\r\n            return !target || target.getType() == QTopo.constant.SCENE;\r\n        },\r\n        /**\r\n         * 判断QTopo对象是否是节点\r\n         * @method isNode\r\n         * @param element {element}\r\n         * @return {boolean}\r\n         */\r\n        isNode: function (target) {\r\n            return target && target.getType() == QTopo.constant.NODE && target.getUseType() != QTopo.constant.CASUAL;\r\n        },\r\n        /**\r\n         * 判断QTopo对象是否是分组\r\n         * @method isContainer\r\n         * @param element {element}\r\n         * @return {boolean}\r\n         */\r\n        isContainer: function (target) {\r\n            return target && target.getType() == QTopo.constant.CONTAINER && target.getUseType() != QTopo.constant.CASUAL;\r\n        },\r\n        /**\r\n         * 判断QTopo对象是否是链接\r\n         * @method isLink\r\n         * @param element {element}\r\n         * @return {boolean}\r\n         */\r\n        isLink: function (target) {\r\n            return target && target.getType() == QTopo.constant.LINK && target.getUseType() != QTopo.constant.CASUAL;\r\n        }\r\n    }\r\n    ;\r\nfunction S4() {\r\n    return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n}\r\nmodule.exports = util;//# sourceMappingURL=data:application/json;charset=utf-8;base64,');
},2:function(module,exports,__webpack_require__){eval("/**\r\n * @module core\r\n */\r\n/**\r\n * 链路基类,用以继承 [E]开头继承于Element,[L]开头为自身api\r\n * @class [L] Link\r\n * @constructor\r\n * @extends [E] Element\r\n * @param jtopo 元素核心的jtopo对象\r\n */\r\nvar Element = __webpack_require__(1);\r\nmodule.exports = Link;\r\nvar jtopoReset = {\r\n    //原选取后效果较暗，在暗色主题下不明显，重写为亮色\r\n    paintSelected: function (a) {\r\n        a.shadowBlur = 10;\r\n        a.shadowColor = \"rgba(255,255,255,1)\";\r\n        a.shadowOffsetX = 0;\r\n        a.shadowOffsetY = 0;\r\n    }\r\n};\r\nfunction Link(jtopo) {\r\n    if (!jtopo) {\r\n        QTopo.util.error(\"create Link without jtopo\", this);\r\n        return;\r\n    }\r\n    Element.call(this, jtopo);\r\n    /**\r\n     * 记录链路的首尾元素\r\n     * @property [L] path {object}\r\n     * @param start {object} 起始元素\r\n     * @param end {object} 终点元素\r\n     */\r\n    this.path = {\r\n        start: this.jtopo.nodeA.qtopo,\r\n        end: this.jtopo.nodeZ.qtopo\r\n    };\r\n    //在线路两端的对象上的links属性中更新自己\r\n    if (this.path.start.links && $.isArray(this.path.start.links.out)) {\r\n        if (this.path.start.links.out.indexOf(this) < 0) {\r\n            this.path.start.links.out.push(this);\r\n        }\r\n    }\r\n    if (this.path.end.links && $.isArray(this.path.end.links.in)) {\r\n        if (this.path.end.links.in.indexOf(this) < 0) {\r\n            this.path.end.links.in.push(this);\r\n        }\r\n    }\r\n    reset(this.jtopo);\r\n}\r\nQTopo.util.inherits(Link, Element);\r\n\r\nfunction reset(jtopo) {\r\n    //被選中后的样式\r\n    jtopo.paintSelected = jtopoReset.paintSelected;\r\n}\r\n/**\r\n *  获取元素基本类型,详细参考QTopo.constant中的类型定义\r\n *  @method [L] getType\r\n *  @return QTopo.constant.LINK\r\n */\r\nLink.prototype.getType = function () {\r\n    return QTopo.constant.LINK;\r\n};\r\n/**\r\n *  设置颜色\r\n *  @method [L] setColor\r\n *  @param color {string} \"255,255,255\"/\"#ffffff\"\r\n */\r\nLink.prototype.setColor = function (color) {\r\n    if (color) {\r\n        this.jtopo.strokeColor = QTopo.util.transHex(color.toLowerCase());\r\n    }\r\n    this.attr.color = this.jtopo.strokeColor;\r\n};\r\n/**\r\n *  计数设置\r\n *\r\n *  计数大于1时在链路上显示(+number)\r\n *\r\n *  QTopo.constant.link.DIRECT类型的链路可以基于此数展开\r\n *  @method [L] setNumber\r\n *  @param number {number}\r\n */\r\nLink.prototype.setNumber = function (number) {\r\n    if ($.isNumeric(number)) {\r\n        number = parseInt(number);\r\n        if (number > 1) {\r\n            this.jtopo.text = '(+' + number + ')';\r\n        } else {\r\n            number = 1;\r\n            this.jtopo.text = '';\r\n        }\r\n        this.attr.number = number;\r\n    }\r\n};\r\n/**\r\n *  设置链路宽度,小于0则默认为1\r\n *  @method [L] setWidth\r\n *  @param width {number}\r\n */\r\nLink.prototype.setWidth = function (width) {\r\n    if ($.isNumeric(width)) {\r\n        var newWidth = parseInt(width);\r\n        this.jtopo.lineWidth = newWidth > 0 ? newWidth : 1; // 线宽\r\n    }\r\n    this.attr.width = this.jtopo.lineWidth;\r\n};\r\n/**\r\n *  设置链路两端的箭头属性\r\n *  @method [L] setArrow\r\n *  @param arrow {object}\r\n *\r\n *          arrow={\r\n *              size:箭头大小{number},\r\n *              offset:箭头在链路上的偏移量{number},\r\n *              start:是否显示起点箭头{boolean},\r\n *              end:是否显示终点箭头{boolean},\r\n *          }\r\n */\r\nLink.prototype.setArrow = function (arrow) {\r\n    if (arrow) {\r\n        if(typeof arrow.size!='undefined'){\r\n            this.jtopo.arrowsRadius = $.isNumeric(arrow.size) ? parseInt(arrow.size) : 0;\r\n        }\r\n        if(typeof arrow.offset!='undefined'){\r\n            this.jtopo.arrowsOffset = $.isNumeric(arrow.offset) ? parseInt(arrow.offset) : 0;\r\n        }\r\n        if (!this.attr.arrow) {\r\n            this.attr.arrow = {};\r\n        }\r\n\r\n        if (typeof arrow.start!='undefined') {\r\n            this.attr.arrow.start = typeof arrow.start == \"boolean\" ? arrow.start : arrow.start == \"true\";\r\n        }\r\n        if (typeof arrow.end!='undefined') {\r\n            this.attr.arrow.end = typeof arrow.end == \"boolean\" ? arrow.end : arrow.end == \"true\";\r\n        }\r\n    }\r\n    this.attr.arrow.size = this.jtopo.arrowsRadius;\r\n    this.attr.arrow.offset = this.jtopo.arrowsOffset;\r\n};\r\n/**\r\n *  设置相同起点和终点的链路之间的间隔大小\r\n *\r\n *  常用于设置QTopo.constant.link.DIRECT类型的链路展开时,其子链路之间的间距大小\r\n *  @method [L] setGap\r\n *  @param gap {number}\r\n */\r\nLink.prototype.setGap = function (gap) {\r\n    if (gap) {\r\n        this.jtopo.bundleGap = $.isNumeric(gap) ? parseInt(gap) : 0; // 线条之间的间隔\r\n    }\r\n    this.attr.gap = this.jtopo.bundleGap;\r\n};\r\n/**\r\n *  设置链路的虚线线段长度\r\n *\r\n *  设置不为number类型或小于0时，则认为不要虚线\r\n *\r\n *  @method [L] setDashed\r\n *  @param dashedPattern {number|null}\r\n */\r\nLink.prototype.setDashed = function (dashedPattern) {\r\n    if ($.isNumeric(dashedPattern) && dashedPattern > 0) {\r\n        this.jtopo.dashedPattern = parseInt(dashedPattern);\r\n    } else {\r\n        this.jtopo.dashedPattern = null;\r\n    }\r\n    this.attr.dashed = this.jtopo.dashedPattern;\r\n};\r\n/**\r\n *  单个对象的属性提取\r\n *  @method [L] toJson\r\n *  @return {object}\r\n */\r\nLink.prototype.toJson=function(){\r\n    var json=$.extend({},this.attr);\r\n    json.extra=$.extend({},this.extra);\r\n    json.start=this.path.start.get('jsonId');\r\n    json.end=this.path.end.get('jsonId');\r\n    return json;\r\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,")},27:function(module,exports,__webpack_require__){eval('/**\r\n * @module core\r\n */\r\n/**\r\n * 容器基类,用以继承 [E]开头继承于Element,[C]开头为自身api\r\n * @class [C] Container\r\n * @constructor\r\n * @extends [E] Element\r\n * @param jtopo 元素核心的jtopo对象\r\n */\r\n\r\nvar Element = __webpack_require__(1);\r\nmodule.exports = Container;\r\nvar jtopoReset = {\r\n    //重写名称绘制，用以换行显示\r\n    paintText: function (a) {\r\n        var text = this.text;\r\n        if (null != text && "" != text) {\r\n            a.beginPath();\r\n            a.font = this.font;\r\n            var fontWidth = a.measureText("田").width;\r\n            var maxWidth = fontWidth;\r\n            a.fillStyle = "rgba(" + this.fontColor + ",1)"; //", " + this.alpha + ")";名称永远不透明\r\n            //换行检测\r\n            var texts = text.split("\\n");\r\n            for (var i = 0; i < texts.length; i++) {\r\n                var width = a.measureText(texts[i]).width;\r\n                if (width > maxWidth) {\r\n                    maxWidth = width;\r\n                }\r\n            }\r\n            var e = this.getTextPostion(this.textPosition, maxWidth, fontWidth,texts.length);\r\n            for (var j = 0; j < texts.length; j++) {\r\n                var textWidth = a.measureText(texts[j]).width;\r\n                a.fillText(texts[j], e.x + (maxWidth - textWidth) / 2, e.y + j * fontWidth);\r\n            }\r\n\r\n            a.closePath();\r\n        }\r\n    }\r\n};\r\nfunction Container(jtopo) {\r\n    if (jtopo) {\r\n        Element.call(this, jtopo);\r\n    } else {\r\n        QTopo.util.error("create Container without jtopo", this);\r\n    }\r\n    /**\r\n     * 记录容器内的元素\r\n     * @property [C] children {array}\r\n     */\r\n    this.children = [];\r\n    /**\r\n     * 记录容器上的链路\r\n     * @property [C] links {array}\r\n     * @param in 以容器为终点的链路\r\n     * @param out 以容器为起点的链路\r\n     */\r\n    this.links = {\r\n        in: [],\r\n        out: []\r\n    };\r\n    reset(this);\r\n}\r\nQTopo.util.inherits(Container, Element);\r\nfunction reset(element) {\r\n    element.jtopo.paintText = jtopoReset.paintText;\r\n}\r\n/**\r\n *  设置容器名称\r\n *  @method [C] setName\r\n *  @param name {string}\r\n */\r\nContainer.prototype.setName = function (name) {\r\n    if (name) {\r\n        if (this.attr.namePosition != "hide") {\r\n            this.jtopo.text = name.trim();\r\n        }\r\n        this.attr.name = name.trim();\r\n    }\r\n};\r\n/**\r\n *  将元素加入容器内\r\n *  @method [C] add\r\n *  @param element {element|array} 一般为节点类型对象或数组，容器加入容器容易产生Bug\r\n */\r\nContainer.prototype.add = function (element) {\r\n    var self=this;\r\n    if (!$.isArray(this.children)) {\r\n        this.children = [];\r\n    }\r\n    if ($.isArray(element)) {\r\n        $.each(element,function(i,el){\r\n            addOnce(el);\r\n        });\r\n    }else{\r\n        addOnce(element);\r\n    }\r\n    function addOnce(element){\r\n        if (element&&check(element)&&!self.isChild(element)) {\r\n            self.children.push(element);\r\n            element.parent = self;\r\n            self.jtopo.add(element.jtopo);\r\n            if (self.attr.children && typeof self.attr.children.dragble == "boolean") {\r\n                //若分组不允许移动组内元素，手动设置元素不可移动\r\n                element.setDragable(self.attr.children.dragble);\r\n            }\r\n        }\r\n    }\r\n    function check(element){\r\n        return element.getType()==QTopo.constant.NODE&&element.getUseType()!=QTopo.constant.CASUAL&&!element.parent;\r\n    }\r\n};\r\n/**\r\n * 将子元素从容器中删除\r\n * @method [C] remove\r\n * @param element {element}\r\n */\r\nContainer.prototype.remove = function (element) {\r\n    if ($.isArray(this.children) && this.isChild(element)) {\r\n        this.children.splice(this.children.indexOf(element), 1);\r\n        delete element.parent;\r\n        this.jtopo.remove(element.jtopo);\r\n        //移除元素，应手动设回元素可移动\r\n        element.setDragable(true);\r\n    }\r\n};\r\n/**\r\n * 获取容器基本类型\r\n * @method [C] getType\r\n * @return QTopo.constant.CONTAINER\r\n */\r\nContainer.prototype.getType = function () {\r\n    return QTopo.constant.CONTAINER;\r\n};\r\n/**\r\n * 设置容器背景色\r\n * @method [C] setColor\r\n * @param color {string} "255,255,255"/"#ffffff"\r\n */\r\nContainer.prototype.setColor = function (color) {\r\n    if (color) {\r\n        color = QTopo.util.transHex(color.toLowerCase());\r\n        this.jtopo.fillColor = color;\r\n    }\r\n    this.attr.color = this.jtopo.fillColor;\r\n};\r\n/**\r\n * 设置容器内子元素一般行为,未完全实现\r\n * @method [C] setChildren\r\n * @param children {object}\r\n *          children={\r\n *                  dragble:是否可移动{boolean}\r\n *          }\r\n */\r\nContainer.prototype.setChildren = function (children) {\r\n    var jtopo = this.jtopo;\r\n    if (children) {\r\n        if (typeof children.dragble == "boolean") {\r\n            this.jtopo.childDragble = children.dragble;\r\n            for (var i = 0; i < this.children.length; i++) {\r\n                this.children[i].setDragable(children.dragble);\r\n            }\r\n        }\r\n    }\r\n    this.attr.children.dragble = jtopo.childDragble;\r\n};\r\n/**\r\n * 容器缩放切换,在scene创建时可选是否提供切换\r\n *\r\n * 可在创建时增加参数 toggle:{close:true}来创建一个不可切换的容器\r\n *\r\n * 若无切换对象，则该方法无动作\r\n * @method [C] toggle\r\n * @param [flag] 为true则强制缩放，为false则强制展开，无值则自适应切换,\r\n */\r\nContainer.prototype.toggle = function (flag) {\r\n    if (this.toggleTo) {\r\n        var gJtopo = this.jtopo;\r\n        var nJtopo = this.toggleTo.jtopo;\r\n        var todo = typeof flag == "boolean" ? flag : gJtopo.visible;\r\n        if (todo) {\r\n            //缩放\r\n            this.hide();\r\n            this.toggleTo.show();\r\n            this.toggleTo.setPosition([gJtopo.cx - nJtopo.width / 2, gJtopo.cy - nJtopo.height / 2]);\r\n        } else {\r\n            //展开\r\n            this.show();\r\n            this.toggleTo.hide();\r\n            this.setPosition([nJtopo.cx - gJtopo.width / 2, nJtopo.cy - gJtopo.height / 2]);\r\n        }\r\n    }\r\n};\r\n/**\r\n * 判断元素是否已是子元素\r\n * @method [C] isChild\r\n * @param element 判断的子元素\r\n * @return {boolean}\r\n */\r\nContainer.prototype.isChild = function (element) {\r\n    if ($.isArray(this.children)) {\r\n        var index=this.children.indexOf(element);\r\n        if (element.parent != this&& index> -1) {\r\n            QTopo.util.error("some group get error,the child\'s parent is not it and the child in its children,index is "+index, this,element);\r\n        }\r\n        return index>-1;\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n/**\r\n * 判断元素是否在分组覆盖的范围内,临时元素不考虑\r\n * @method [C] isInside\r\n * @param element 判断的元素\r\n * @return {boolean}\r\n */\r\nContainer.prototype.isInside = function (element) {\r\n    if (element && element.getType() != QTopo.constant.CASUAL) {\r\n        var center = element.getCenterPosition();\r\n        return !this.isChild(element) && center.x > this.x && center.x < (this.x + this.width) && center.y > this.y && center.y < (this.y + this.height);\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n/**\r\n * 分组属性提取\r\n * @method [C] toJson\r\n * @return {object}\r\n */\r\nContainer.prototype.toJson=function(){\r\n    var json=$.extend({},this.attr);\r\n    json.extra=$.extend({},this.extra);\r\n    json.children=[];\r\n    this.children.map(function(child){\r\n        json.children.push(child.get(\'jsonId\'));\r\n    });\r\n    json.toggle=this.toggleTo.toJson();\r\n    return json;\r\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,');
},28:function(module,exports,__webpack_require__){eval('/**\r\n * @module core\r\n */\r\n/**\r\n * 图形节点\r\n * @class  Group\r\n * @constructor\r\n * @extends [C] Container\r\n * @param [config] 配置参数，无参则按全局配置创建\r\n */\r\nvar Container=__webpack_require__(27);\r\nmodule.exports =  {\r\n    constructor:Group,\r\n    setDefault:setDefault,\r\n    getDefault:getDefault\r\n};\r\n//-\r\nvar DEFAULT = {\r\n        name: \'group\',\r\n        font:{\r\n            size:16,\r\n            type:"微软雅黑",\r\n            color:\'255,255,255\'\r\n        },\r\n        color: \'10,10,100\',\r\n        alpha: 0.5,\r\n        dragable: true,\r\n        zIndex: 10,\r\n        jsonId:"",\r\n        border:{\r\n            width:0,\r\n            radius:30,//最大160 最小0\r\n            color:"255,0,0"\r\n        },\r\n        size:[500,500],\r\n        position:[0,0],\r\n        namePosition: \'bottom\',//Bottom_Center Top_Center Middle_Left Middle_Right Hidden,\r\n        layout: {\r\n            type:"default"\r\n        },\r\n        children:{\r\n            showLink: false,\r\n            showName: true,\r\n            dragble: true\r\n        },\r\n        useType:QTopo.constant.container.GROUP\r\n};\r\nfunction setDefault(config){\r\n    QTopo.util.extend(DEFAULT, config || {});\r\n}\r\nfunction getDefault(){\r\n    return QTopo.util.deepClone(DEFAULT);\r\n}\r\n//-\r\n//----\r\n//----\r\nfunction Group(config) {\r\n    this.attr =  QTopo.util.extend(getDefault(), config || {});\r\n    Container.call(this, new JTopo.Container());\r\n    //函数\r\n    this.set = setJTopo;\r\n    //初始化\r\n    this.set(this.attr);\r\n}\r\nQTopo.util.inherits(Group,Container);\r\n//-\r\nvar fixedLayout=function(group, children){\r\n    if(this.qtopo){\r\n        if(group.width==0||group.height==0){\r\n            group.width=this.qtopo.attr.size[0];\r\n            group.height=this.qtopo.attr.size[1];\r\n        }\r\n        if(group.width>0&&group.height>0){\r\n            var groupBound=group.getBound();\r\n            children.map(function(child){\r\n                resetLocation(groupBound,child);\r\n            });\r\n        }else{\r\n            //若未设置高宽则运行一次自动布局设置高宽\r\n            JTopo.Layout.AutoBoundLayout()(group, children);\r\n        }\r\n    }else{\r\n        QTopo.util.error("the container not wrap with qtopo",this);\r\n    }\r\n};\r\nfunction resetLocation(groupBound,child){\r\n    var childBound=child.getBound();\r\n    var location=child.getLocation();\r\n    if(childBound.bottom>groupBound.bottom){\r\n        location.y=groupBound.bottom-childBound.height;\r\n    }\r\n    if(childBound.right>groupBound.right){\r\n        location.x=groupBound.right-childBound.width;\r\n    }\r\n    if(childBound.left<groupBound.left){\r\n        location.x=groupBound.left;\r\n    }\r\n    if(childBound.top<groupBound.top){\r\n        location.y=groupBound.top;\r\n    }\r\n    child.setLocation(location.x,location.y);\r\n}\r\n/**\r\n *  元素对属性的统一设置函数，推荐使用\r\n *\r\n *  参数可设置一项或多项,未设置部分参考全局配置\r\n *  @method set\r\n *  @param config\r\n *  @example\r\n *          实际参数参考attr内属性,只会修改有对应set函数的属性,若新增属性且添加了setXXX函数，也可用此函数配置\r\n *          如:name 对应 setName("..")\r\n *          参数格式如下\r\n *          config={\r\n *              xx:...,\r\n *              xx:...\r\n *          }\r\n */\r\nfunction setJTopo(config) {\r\n    if (config) {\r\n        var self=this;\r\n        self._setAttr(config);\r\n    }\r\n}\r\n//-\r\n/**\r\n *\r\n *  @method setLayout\r\n *  @param layout {object} 图片相对路径\r\n *      @param layout.type {string} flow(固定宽高,组员流式布局), grid(固定宽高,组员行列布局), fixed(固定宽高,组员可拖动), default(宽高自适应)\r\n *      @param [layout.row] {number} 当type=flow时,用以设置水平间隔 ,当type=grid时,用以设置行数\r\n *      @param [layout.column] {number} 当type=flow时,用以设置垂直间隔 ,当type=grid时,用以设置列数\r\n */\r\nGroup.prototype.setLayout=function(layout){\r\n    var selected;\r\n    if (layout) {\r\n        switch (layout.type) {\r\n            case \'flow\':\r\n                // 流式布局（水平,垂直间隔)\r\n                selected = JTopo.layout.FlowLayout(parseInt(layout.row), parseInt(layout.column));\r\n                this.attr.layout=layout;\r\n                break;\r\n            case \'grid\':\r\n                // 网格布局(行,列)\r\n                var rows=parseInt(layout.row);\r\n                var columns=parseInt(layout.column);\r\n                if(rows*columns<this.children.length){\r\n                    QTopo.util.error("GridLayout\'s row*column need bigger than group\'s children length");\r\n                    columns=rows= Math.ceil(Math.sqrt(todo.target.children.length));\r\n                }\r\n                selected = JTopo.layout.GridLayout(rows,columns);\r\n                this.attr.layout=layout;\r\n                break;\r\n            case \'fixed\':\r\n                //固定长宽布局\r\n                selected = fixedLayout;\r\n                this.attr.layout=layout;\r\n                break;\r\n            default:\r\n                selected = JTopo.Layout.AutoBoundLayout();\r\n                this.attr.layout={};\r\n                this.attr.layout.type="default";\r\n        }\r\n    } else {\r\n        selected = JTopo.Layout.AutoBoundLayout();\r\n        this.attr.layout={};\r\n        this.attr.layout.type="default";\r\n    }\r\n    this.jtopo.layout = selected;\r\n};\r\n/**\r\n *  获取全局设置\r\n *  @method getDefault\r\n *  @return config {object} 全局配置的克隆对象[只读]，修改该对象不会直接修改全局配置，若要修改全局配置请使用scene.setDefault\r\n *  @example\r\n *          默认全局参数:\r\n *              var DEFAULT = {\r\n                                name: \'group\',\r\n                                font:{\r\n                                    size:16,\r\n                                    type:"微软雅黑",\r\n                                    color:\'255,255,255\'\r\n                                },\r\n                                color: \'10,10,100\',\r\n                                alpha: 0.5,\r\n                                dragable: true,\r\n                                zIndex: 10,\r\n                                jsonId:"",\r\n                                border:{\r\n                                    width:0,\r\n                                    radius:30,//最大160 最小0\r\n                                    color:"255,0,0"\r\n                                },\r\n                                size:[500,500],\r\n                                position:[0,0],\r\n                                namePosition: \'bottom\',//Bottom_Center Top_Center Middle_Left Middle_Right Hidden,\r\n                                layout: {\r\n                                    type:"default"\r\n                                },\r\n                                children:{//待定设置，未完全实现\r\n                                    showLink: false,\r\n                                    showName: true,\r\n                                    dragble: true\r\n                                },\r\n                                useType:QTopo.constant.container.GROUP\r\n                        };\r\n */\r\nGroup.prototype.getDefault=getDefault;\r\n//-//# sourceMappingURL=data:application/json;charset=utf-8;base64,')},29:function(module,exports,__webpack_require__){eval('/**\r\n * @module core\r\n */\r\n/**\r\n * 图形节点\r\n * @class  DirectLine\r\n * @constructor\r\n * @extends [LE] Line\r\n * @param [config] 配置参数，无参则按全局配置创建\r\n */\r\nvar Line=__webpack_require__(30);\r\nmodule.exports =  {\r\n    constructor:DirectLine,\r\n    setDefault:setDefault,\r\n    getDefault:getDefault\r\n};\r\n//-\r\nvar DEFAULT={\r\n        num: 1,\r\n        alpha:1,\r\n        color: \'22,124,255\',\r\n        arrow:{\r\n            size:null,\r\n            offset:0,\r\n            start:false,\r\n            end:true\r\n        },\r\n        jsonId:"",\r\n        gap:20,\r\n        position:{\r\n            start:[0,0],\r\n            end:[0,100]\r\n        },\r\n        path:{\r\n            start:{},\r\n            end:{}\r\n        },\r\n        width: 2,\r\n        dashed:  null,\r\n        zIndex : 80,\r\n        font:{\r\n            size:16,\r\n            type:"微软雅黑",\r\n            color:\'255,255,255\'\r\n        },\r\n        useType: QTopo.constant.line.DIRECT,\r\n        bundleOffset:60// 多条直线时，线条折线拐角处的长度\r\n};\r\nfunction setDefault(config){\r\n    QTopo.util.extend(DEFAULT, config || {});\r\n}\r\nfunction getDefault(){\r\n    return QTopo.util.deepClone(DEFAULT);\r\n}\r\n//-\r\n//----\r\nvar jtopoReset={\r\n    //双向箭头\r\n    getStartPosition:function () {\r\n        var a;\r\n        return null != this.arrowsRadius && (a = (function (thisl) {\r\n            var b = thisl.nodeA, c = thisl.nodeZ;\r\n            var d = JTopo.util.lineF(b.cx, b.cy, c.cx, c.cy);\r\n            var e = b.getBound();\r\n            return f = JTopo.util.intersectionLineBound(d, e);\r\n        })(this)), null == a && (a = {\r\n            x: this.nodeA.cx,\r\n            y: this.nodeA.cy\r\n        }), a;\r\n    },\r\n    paintPath:function (a, b) {\r\n        if (this.nodeA === this.nodeZ) return void this.paintLoop(a);\r\n        a.beginPath(),\r\n            a.moveTo(b[0].x, b[0].y);\r\n        for (var c = 1; c < b.length; c++) {\r\n            null == this.dashedPattern ? (\r\n                (null == this.PointPathColor ? a.lineTo(b[c].x, b[c].y) : a.JtopoDrawPointPath(b[c - 1].x, b[c - 1].y, b[c].x, b[c].y, a.strokeStyle, this.PointPathColor))\r\n            ) : a.JTopoDashedLineTo(b[c - 1].x, b[c - 1].y, b[c].x, b[c].y, this.dashedPattern)\r\n        }\r\n        if (a.stroke(), a.closePath(), null != this.arrowsRadius) {\r\n            if (this.qtopo.attr.arrow.end) {\r\n                this.paintArrow(a, b[0], b[b.length - 1]);\r\n            }//终点箭头\r\n            if (this.qtopo.attr.arrow.start) {\r\n                this.paintArrow(a, b[b.length - 1], b[0]);\r\n            }//起点箭头\r\n        }\r\n    }\r\n};\r\n//----\r\nfunction DirectLine(config) {\r\n    this.attr =  QTopo.util.extend(getDefault(), config || {});\r\n    //line基于不加入画布的节点之间的线生成\r\n    Line.call(this,new JTopo.Link(new JTopo.Node(), new JTopo.Node()));\r\n    //函数\r\n    this.set = setJTopo;\r\n    //初始化\r\n    this.set(this.attr);\r\n    //源码修改\r\n    reset(this);\r\n}\r\nQTopo.util.inherits(DirectLine,Line);\r\n/**\r\n *  元素对属性的统一设置函数，推荐使用\r\n *\r\n *  参数可设置一项或多项,未设置部分参考全局配置\r\n *  @method set\r\n *  @param config\r\n *  @example\r\n *          实际参数参考attr内属性,只会修改有对应set函数的属性,若新增属性且添加了setXXX函数，也可用此函数配置\r\n *          如:name 对应 setName("..")\r\n *          参数格式如下\r\n *          config={\r\n *              xx:...,\r\n *              xx:...\r\n *          }\r\n */\r\nfunction setJTopo(config) {\r\n    if (config) {\r\n        var self=this;\r\n        self._setAttr(config);\r\n    }\r\n}\r\nfunction reset(Line){\r\n    Line.jtopo.getStartPosition = jtopoReset.getStartPosition;\r\n    Line.jtopo.paintPath = jtopoReset.paintPath;\r\n}\r\n/**\r\n *  设置直线两端的线段长度\r\n *\r\n *  当一条链路的两端元素之间有多条链路时，链路将会分成三段绘制并偏移，以区分其他链路\r\n *  @method setBundleOffset\r\n *  @param bundleOffset {number}\r\n */\r\nDirectLine.prototype.setBundleOffset=function(bundleOffset){\r\n    if($.isNumeric(bundleOffset)){\r\n        this.jtopo.bundleOffset=parseInt(bundleOffset);\r\n    }\r\n    this.attr.bundleOffset=this.jtopo.bundleOffset;\r\n};\r\n/**\r\n * 获取元素全局样式\r\n * @method getDefault\r\n * @return {object}\r\n * @example\r\n *          var DEFAULT = {\r\n                                number: 1,\r\n                                alpha: 1,\r\n                                color: \'22,124,255\',\r\n                                arrow: {\r\n                                    size: 10,\r\n                                    offset: 0,\r\n                                    start: false,\r\n                                    end: false\r\n                                },\r\n                                position:{\r\n                                    start:[0,0],\r\n                                    end:[0,100]\r\n                                },\r\n                                jsonId:"",\r\n                                gap: 20,\r\n                                width: 3,\r\n                                dashed: null,\r\n                                zIndex: 100,\r\n                                font: {\r\n                                    size: 16,\r\n                                    type: "微软雅黑",\r\n                                    color: \'255,255,255\'\r\n                                },\r\n                                expendAble: true,\r\n                                useType: QTopo.constant.line.DIRECT,\r\n                                bundleOffset: 60// 多条直线时，线条折线拐角处的长度\r\n                            };\r\n */\r\nDirectLine.prototype.getDefault=getDefault;//# sourceMappingURL=data:application/json;charset=utf-8;base64,');
},3:function(module,exports,__webpack_require__){eval('/**\r\n * @module core\r\n */\r\n/**\r\n * 节点基类,用以继承 [E]开头继承于Element,[N]开头为自身api\r\n * @class [N] Node\r\n * @constructor\r\n * @extends [E] Element\r\n * @param jtopo 元素核心的jtopo对象\r\n */\r\nvar Element=__webpack_require__(1);\r\nmodule.exports =Node;\r\n\r\nfunction Node(jtopo) {\r\n    if(jtopo){\r\n        Element.call(this,jtopo);\r\n    }else{\r\n        QTopo.util.error("create Node without jtopo",this);\r\n    }\r\n    /**\r\n     * 链接记录\r\n     * @property [N] links {object}\r\n     * @param in {array} 自身为终点的链路对象\r\n     * @param out {array} 自身为起点的链路对象\r\n     */\r\n    this.links={\r\n        in:[],\r\n        out:[]\r\n    };\r\n    reset(this);\r\n}\r\nQTopo.util.inherits(Node,Element);\r\nfunction reset(element){\r\n    var jtopoReset={\r\n        //对节点名的绘制重写，让名称可以换行\r\n        paintText:function (cx) {\r\n            var text = this.text;\r\n            if (null != text && "" != text) {\r\n                cx.beginPath();\r\n                cx.font = this.font;\r\n                var fontWidth = cx.measureText("田").width;\r\n                var maxWidth = fontWidth;\r\n                cx.fillStyle = "rgba(" + this.fontColor + "," + this.alpha + ")";//;名称永远不透明\r\n                //换行检测\r\n                var texts = text.split("\\n");\r\n                for (var i = 0; i < texts.length; i++) {\r\n                    var width = cx.measureText(texts[i]).width;\r\n                    if (width > maxWidth) {\r\n                        maxWidth = width;\r\n                    }\r\n                }\r\n                var e = this.getTextPostion(this.textPosition, maxWidth, fontWidth,texts.length);\r\n                for(var j = 0; j < texts.length; j++){\r\n                    var textWidth=cx.measureText(texts[j]).width;\r\n                    cx.fillText(texts[j], e.x+(maxWidth-textWidth)/2, e.y+j*fontWidth);\r\n                }\r\n\r\n                cx.closePath();\r\n            }\r\n        }\r\n    };\r\n    element.jtopo.paintText = jtopoReset.paintText;\r\n}\r\n/**\r\n *  获取元素基本类型,详细参考QTopo.constant中的类型定义\r\n *  @method [N] getType\r\n *  @return QTopo.constant.NODE\r\n */\r\nNode.prototype.getType=function(){\r\n    return QTopo.constant.NODE;\r\n};\r\n/**\r\n *  设置颜色,一般为设置自身填充颜色，节点有图片设置或为文字节点时无效\r\n *  @method [N] setColor\r\n *  @param color {string} "255,255,255"/"#ffffff"\r\n */\r\nNode.prototype.setColor = function (color) {\r\n    if (color) {\r\n        color = QTopo.util.transHex(color.toLowerCase());\r\n        this.jtopo.fillColor = color;\r\n    }\r\n    this.attr.color=this.jtopo.fillColor;\r\n};\r\n/**\r\n *  设置显示名称,删减首尾空格符\r\n *\r\n *  文字节点应调用setText处理文字显示\r\n *\r\n *  其他节点应用该函数处理名称，否则会出现隐藏后再显示而名称不符的Bug\r\n *  @method [N] setName\r\n *  @param name {string}\r\n */\r\nNode.prototype.setName=function(name){\r\n    if(name){\r\n        if (this.attr.namePosition != "hide") {\r\n            this.jtopo.text = (name+"").trim();\r\n        }\r\n        this.attr.name = (name+"").trim();\r\n    }\r\n};\r\n/**\r\n *  单个对象的属性提取\r\n *  @method [N] toJson\r\n *  @return {object}\r\n */\r\nNode.prototype.toJson=function(){\r\n    var json=$.extend({},this.attr);\r\n    json.extra=$.extend({},this.extra);\r\n    return json;\r\n};\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9kZXZlbG9wL2NvcmUvZWxlbWVudC9ub2RlL05vZGUuanM/OTA1OCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCLGtCQUFrQixNQUFNO0FBQ3hCLG1CQUFtQixNQUFNO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlGQUFpRixHQUFHO0FBQ3BGO0FBQ0E7QUFDQSwrQkFBK0Isa0JBQWtCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixrQkFBa0I7QUFDaEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsT0FBTztBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEIsMEJBQTBCO0FBQzFCO0FBQ0EiLCJmaWxlIjoiMy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAbW9kdWxlIGNvcmVcclxuICovXHJcbi8qKlxyXG4gKiDoioLngrnln7rnsbss55So5Lul57un5om/IFtFXeW8gOWktOe7p+aJv+S6jkVsZW1lbnQsW05d5byA5aS05Li66Ieq6LqrYXBpXHJcbiAqIEBjbGFzcyBbTl0gTm9kZVxyXG4gKiBAY29uc3RydWN0b3JcclxuICogQGV4dGVuZHMgW0VdIEVsZW1lbnRcclxuICogQHBhcmFtIGp0b3BvIOWFg+e0oOaguOW/g+eahGp0b3Bv5a+56LGhXHJcbiAqL1xyXG52YXIgRWxlbWVudD1yZXF1aXJlKFwiLi4vRWxlbWVudC5qc1wiKTtcclxubW9kdWxlLmV4cG9ydHMgPU5vZGU7XHJcblxyXG5mdW5jdGlvbiBOb2RlKGp0b3BvKSB7XHJcbiAgICBpZihqdG9wbyl7XHJcbiAgICAgICAgRWxlbWVudC5jYWxsKHRoaXMsanRvcG8pO1xyXG4gICAgfWVsc2V7XHJcbiAgICAgICAgUVRvcG8udXRpbC5lcnJvcihcImNyZWF0ZSBOb2RlIHdpdGhvdXQganRvcG9cIix0aGlzKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog6ZO+5o6l6K6w5b2VXHJcbiAgICAgKiBAcHJvcGVydHkgW05dIGxpbmtzIHtvYmplY3R9XHJcbiAgICAgKiBAcGFyYW0gaW4ge2FycmF5fSDoh6rouqvkuLrnu4jngrnnmoTpk77ot6/lr7nosaFcclxuICAgICAqIEBwYXJhbSBvdXQge2FycmF5fSDoh6rouqvkuLrotbfngrnnmoTpk77ot6/lr7nosaFcclxuICAgICAqL1xyXG4gICAgdGhpcy5saW5rcz17XHJcbiAgICAgICAgaW46W10sXHJcbiAgICAgICAgb3V0OltdXHJcbiAgICB9O1xyXG4gICAgcmVzZXQodGhpcyk7XHJcbn1cclxuUVRvcG8udXRpbC5pbmhlcml0cyhOb2RlLEVsZW1lbnQpO1xyXG5mdW5jdGlvbiByZXNldChlbGVtZW50KXtcclxuICAgIHZhciBqdG9wb1Jlc2V0PXtcclxuICAgICAgICAvL+WvueiKgueCueWQjeeahOe7mOWItumHjeWGme+8jOiuqeWQjeensOWPr+S7peaNouihjFxyXG4gICAgICAgIHBhaW50VGV4dDpmdW5jdGlvbiAoY3gpIHtcclxuICAgICAgICAgICAgdmFyIHRleHQgPSB0aGlzLnRleHQ7XHJcbiAgICAgICAgICAgIGlmIChudWxsICE9IHRleHQgJiYgXCJcIiAhPSB0ZXh0KSB7XHJcbiAgICAgICAgICAgICAgICBjeC5iZWdpblBhdGgoKTtcclxuICAgICAgICAgICAgICAgIGN4LmZvbnQgPSB0aGlzLmZvbnQ7XHJcbiAgICAgICAgICAgICAgICB2YXIgZm9udFdpZHRoID0gY3gubWVhc3VyZVRleHQoXCLnlLBcIikud2lkdGg7XHJcbiAgICAgICAgICAgICAgICB2YXIgbWF4V2lkdGggPSBmb250V2lkdGg7XHJcbiAgICAgICAgICAgICAgICBjeC5maWxsU3R5bGUgPSBcInJnYmEoXCIgKyB0aGlzLmZvbnRDb2xvciArIFwiLFwiICsgdGhpcy5hbHBoYSArIFwiKVwiOy8vO+WQjeensOawuOi/nOS4jemAj+aYjlxyXG4gICAgICAgICAgICAgICAgLy/mjaLooYzmo4DmtYtcclxuICAgICAgICAgICAgICAgIHZhciB0ZXh0cyA9IHRleHQuc3BsaXQoXCJcXG5cIik7XHJcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRleHRzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHdpZHRoID0gY3gubWVhc3VyZVRleHQodGV4dHNbaV0pLndpZHRoO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh3aWR0aCA+IG1heFdpZHRoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1heFdpZHRoID0gd2lkdGg7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdmFyIGUgPSB0aGlzLmdldFRleHRQb3N0aW9uKHRoaXMudGV4dFBvc2l0aW9uLCBtYXhXaWR0aCwgZm9udFdpZHRoLHRleHRzLmxlbmd0aCk7XHJcbiAgICAgICAgICAgICAgICBmb3IodmFyIGogPSAwOyBqIDwgdGV4dHMubGVuZ3RoOyBqKyspe1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciB0ZXh0V2lkdGg9Y3gubWVhc3VyZVRleHQodGV4dHNbal0pLndpZHRoO1xyXG4gICAgICAgICAgICAgICAgICAgIGN4LmZpbGxUZXh0KHRleHRzW2pdLCBlLngrKG1heFdpZHRoLXRleHRXaWR0aCkvMiwgZS55K2oqZm9udFdpZHRoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBjeC5jbG9zZVBhdGgoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICBlbGVtZW50Lmp0b3BvLnBhaW50VGV4dCA9IGp0b3BvUmVzZXQucGFpbnRUZXh0O1xyXG59XHJcbi8qKlxyXG4gKiAg6I635Y+W5YWD57Sg5Z+65pys57G75Z6LLOivpue7huWPguiAg1FUb3BvLmNvbnN0YW505Lit55qE57G75Z6L5a6a5LmJXHJcbiAqICBAbWV0aG9kIFtOXSBnZXRUeXBlXHJcbiAqICBAcmV0dXJuIFFUb3BvLmNvbnN0YW50Lk5PREVcclxuICovXHJcbk5vZGUucHJvdG90eXBlLmdldFR5cGU9ZnVuY3Rpb24oKXtcclxuICAgIHJldHVybiBRVG9wby5jb25zdGFudC5OT0RFO1xyXG59O1xyXG4vKipcclxuICogIOiuvue9ruminOiJsizkuIDoiKzkuLrorr7nva7oh6rouqvloavlhYXpopzoibLvvIzoioLngrnmnInlm77niYforr7nva7miJbkuLrmloflrZfoioLngrnml7bml6DmlYhcclxuICogIEBtZXRob2QgW05dIHNldENvbG9yXHJcbiAqICBAcGFyYW0gY29sb3Ige3N0cmluZ30gXCIyNTUsMjU1LDI1NVwiL1wiI2ZmZmZmZlwiXHJcbiAqL1xyXG5Ob2RlLnByb3RvdHlwZS5zZXRDb2xvciA9IGZ1bmN0aW9uIChjb2xvcikge1xyXG4gICAgaWYgKGNvbG9yKSB7XHJcbiAgICAgICAgY29sb3IgPSBRVG9wby51dGlsLnRyYW5zSGV4KGNvbG9yLnRvTG93ZXJDYXNlKCkpO1xyXG4gICAgICAgIHRoaXMuanRvcG8uZmlsbENvbG9yID0gY29sb3I7XHJcbiAgICB9XHJcbiAgICB0aGlzLmF0dHIuY29sb3I9dGhpcy5qdG9wby5maWxsQ29sb3I7XHJcbn07XHJcbi8qKlxyXG4gKiAg6K6+572u5pi+56S65ZCN56ewLOWIoOWHj+mmluWwvuepuuagvOesplxyXG4gKlxyXG4gKiAg5paH5a2X6IqC54K55bqU6LCD55Soc2V0VGV4dOWkhOeQhuaWh+Wtl+aYvuekulxyXG4gKlxyXG4gKiAg5YW25LuW6IqC54K55bqU55So6K+l5Ye95pWw5aSE55CG5ZCN56ew77yM5ZCm5YiZ5Lya5Ye6546w6ZqQ6JeP5ZCO5YaN5pi+56S66ICM5ZCN56ew5LiN56ym55qEQnVnXHJcbiAqICBAbWV0aG9kIFtOXSBzZXROYW1lXHJcbiAqICBAcGFyYW0gbmFtZSB7c3RyaW5nfVxyXG4gKi9cclxuTm9kZS5wcm90b3R5cGUuc2V0TmFtZT1mdW5jdGlvbihuYW1lKXtcclxuICAgIGlmKG5hbWUpe1xyXG4gICAgICAgIGlmICh0aGlzLmF0dHIubmFtZVBvc2l0aW9uICE9IFwiaGlkZVwiKSB7XHJcbiAgICAgICAgICAgIHRoaXMuanRvcG8udGV4dCA9IChuYW1lK1wiXCIpLnRyaW0oKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5hdHRyLm5hbWUgPSAobmFtZStcIlwiKS50cmltKCk7XHJcbiAgICB9XHJcbn07XHJcbi8qKlxyXG4gKiAg5Y2V5Liq5a+56LGh55qE5bGe5oCn5o+Q5Y+WXHJcbiAqICBAbWV0aG9kIFtOXSB0b0pzb25cclxuICogIEByZXR1cm4ge29iamVjdH1cclxuICovXHJcbk5vZGUucHJvdG90eXBlLnRvSnNvbj1mdW5jdGlvbigpe1xyXG4gICAgdmFyIGpzb249JC5leHRlbmQoe30sdGhpcy5hdHRyKTtcclxuICAgIGpzb24uZXh0cmE9JC5leHRlbmQoe30sdGhpcy5leHRyYSk7XHJcbiAgICByZXR1cm4ganNvbjtcclxufTtcclxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9kZXZlbG9wL2NvcmUvZWxlbWVudC9ub2RlL05vZGUuanNcbi8vIG1vZHVsZSBpZCA9IDNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIl0sInNvdXJjZVJvb3QiOiIifQ==')},30:function(module,exports,__webpack_require__){eval("/**\r\n * @module core\r\n */\r\n/**\r\n * 线段基类,用以继承 [E]开头继承于Element,[LE]开头为自身api\r\n * @class [LE] Line\r\n * @constructor\r\n * @extends [E] Element\r\n * @param jtopo 元素核心的jtopo对象\r\n */\r\nvar Element=__webpack_require__(1);\r\nmodule.exports =Line;\r\nfunction Line(jtopo) {\r\n    if(jtopo){\r\n        Element.call(this,jtopo);\r\n    }else{\r\n        QTopo.util.error(\"create Line without jtopo\",this);\r\n    }\r\n    /**\r\n     * 记录线段的首尾元素,首尾元素一般隐藏，且为jtopo对象，仅作为绘制的坐标点\r\n     * @property [LE] path {object}\r\n     * @param start {object} 起始元素\r\n     * @param end {object} 终点元素\r\n     */\r\n    this.attr.path={\r\n        start:this.jtopo.nodeA,\r\n        end:this.jtopo.nodeZ\r\n    };\r\n}\r\nQTopo.util.inherits(Line,Element);\r\n/**\r\n *  设置线段位置,原理是设置线段首尾处隐藏jtopo节点的位置\r\n *  @method [LE] setPosition\r\n *  @param position {object}\r\n *\r\n *          position={\r\n *              start:[x,y],\r\n *              end:[x,y]\r\n *          }\r\n */\r\nLine.prototype.setPosition=function(position){\r\n    var start=this.attr.path.start;\r\n    var end=this.attr.path.end;\r\n    if($.isArray(position.start)&&$.isNumeric(position.start[0])&&$.isNumeric(position.start[1])){\r\n        start.setLocation(parseInt(position.start[0]), parseInt(position.start[1]));\r\n    }\r\n    if($.isArray(position.end)&&$.isNumeric(position.end[0])&&$.isNumeric(position.end[1])){\r\n        end.setLocation(parseInt(position.end[0]), parseInt(position.end[1]));\r\n    }\r\n    this.attr.position={\r\n        start:[start.x,start.y],\r\n        end:[end.x,end.y]\r\n    };\r\n};\r\n/**\r\n *  获取基本类型\r\n *  @method [LE] getType\r\n *  @return QTopo.constant.Line {string}\r\n */\r\nLine.prototype.getType=function(){\r\n    return QTopo.constant.Line;\r\n};\r\n/**\r\n *  设置线段颜色\r\n *  @method [LE] setColor\r\n *  @param color{string} \"255,255,255\"/\"#ffffff\"\r\n */\r\nLine.prototype.setColor = function (color) {\r\n    if (color) {\r\n        this.jtopo.strokeColor = QTopo.util.transHex(color.toLowerCase());\r\n    }\r\n    this.attr.color=this.jtopo.strokeColor;\r\n};\r\n/**\r\n *  设置线段计数\r\n *  @method [LE] setNum\r\n *  @param {number} num\r\n */\r\nLine.prototype.setNum = function (num) {\r\n    if ($.isNumeric(num)) {\r\n        if(num > 1){\r\n            this.jtopo.text = '(+' + num + ')';\r\n        }else {\r\n            this.jtopo.text = '';\r\n        }\r\n        this.attr.num=num;\r\n    }\r\n};\r\n/**\r\n *  设置线段宽度\r\n *  @method [LE] setWidth\r\n *  @param {number} width\r\n */\r\nLine.prototype.setWidth=function(width){\r\n    if($.isNumeric(width)){\r\n        this.jtopo.lineWidth = width; // 线宽\r\n    }\r\n    this.attr.width=this.jtopo.lineWidth;\r\n};\r\n/**\r\n *  设置线段两端箭头参数\r\n *  @method [LE] setArrow\r\n *  @param arrow {object}\r\n *\r\n *          arrow={\r\n *              size:箭头大小{number},\r\n *              offset:箭头在链路上的偏移量{number},\r\n *              start:是否显示起点箭头{boolean},\r\n *              end:是否显示终点箭头{boolean},\r\n *          }\r\n */\r\nLine.prototype.setArrow = function(arrow){\r\n    if(arrow){\r\n        this.jtopo.arrowsRadius = $.isNumeric(arrow.size)?arrow.size:0;\r\n        this.jtopo.arrowsOffset = $.isNumeric(arrow.offset)?arrow.offset:0;\r\n    }\r\n    if(!this.attr.arrow){\r\n        this.attr.arrow={};\r\n    }\r\n    this.attr.arrow.size=this.jtopo.arrowsRadius;\r\n    this.attr.arrow.offset=this.jtopo.arrowsOffset;\r\n};\r\n/**\r\n *  设置相同起点和终点的链路之间的间隔大小\r\n *\r\n *  @method [LE] setGap\r\n *  @param gap {number}\r\n */\r\nLine.prototype.setGap=function(gap){\r\n    if(gap){\r\n        this.jtopo.bundleGap = $.isNumeric(gap)?gap:0; // 线条之间的间隔\r\n    }\r\n    this.attr.gap=this.jtopo.bundleGap;\r\n};\r\n/**\r\n *  设置链路的虚线线段长度\r\n *\r\n *  设置不为number类型或小于0时，则认为不要虚线\r\n *\r\n *  @method [LE] setDashed\r\n *  @param dashedPattern {number|null}\r\n */\r\nLine.prototype.setDashed=function(dashedPattern){\r\n    if($.isNumeric(dashedPattern)&&dashedPattern>0){\r\n        this.jtopo.dashedPattern=parseInt(dashedPattern);\r\n    }else{\r\n        this.jtopo.dashedPattern=null;\r\n    }\r\n    this.attr.dashed=this.jtopo.dashedPattern;\r\n};\r\n/**\r\n *  单个对象的属性提取\r\n *  @method [LE] toJson\r\n *  @return {object}\r\n */\r\nLine.prototype.toJson=function(){\r\n    var json=$.extend({},this.attr);\r\n    json.extra=$.extend({},this.extra);\r\n    return json;\r\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,")},31:function(module,exports,__webpack_require__){eval('/**\r\n * @module core\r\n */\r\n/**\r\n * 曲线链路\r\n * @class  CurveLink\r\n * @constructor\r\n * @extends [L] Link\r\n * @param [config] 配置参数，无参则按全局配置创建\r\n */\r\nvar Link = __webpack_require__(2);\r\nmodule.exports = {\r\n    constructor: CurveLink,\r\n    setDefault: setDefault,\r\n    getDefault: getDefault\r\n};\r\n//-\r\nvar DEFAULT = {\r\n    number: 1,\r\n    alpha: 1,\r\n    color: \'22,124,255\',\r\n    arrow: {\r\n        size: 10,\r\n        offset: 0,\r\n        start: false,\r\n        end: false\r\n    },\r\n    jsonId:"",\r\n    gap: 20,\r\n    width: 2,\r\n    dashed: null,\r\n    zIndex: 100,\r\n    font: {\r\n        size: 16,\r\n        type: "微软雅黑",\r\n        color: \'255,255,255\'\r\n    },\r\n    useType: QTopo.constant.link.CURVE,\r\n    curveOffset: 200\r\n};\r\nfunction setDefault(config) {\r\n    QTopo.util.extend(DEFAULT, config || {});\r\n}\r\nfunction getDefault() {\r\n    return QTopo.util.deepClone(DEFAULT);\r\n}\r\n//------\r\nvar jtopoRest={\r\n    //改写源码绘制二次贝赛尔曲线\r\n    //修改始终点的位置，用以确定箭头方向\r\n    getStart: function () {\r\n        var a;\r\n        var b = this.nodeA, c = this.nodeZ;\r\n        var d = JTopo.util.lineF(b.cx, b.cy, c.cx, c.cy);\r\n        var e = b.getBound();\r\n        a = JTopo.util.intersectionLineBound(d, e);\r\n        return a;\r\n    },\r\n    getEnd:function () {\r\n        var a;\r\n        var b = this.nodeZ, c = this.nodeA;\r\n        var d = JTopo.util.lineF(b.cx, b.cy, c.cx, c.cy);\r\n        var e = b.getBound();\r\n        a = JTopo.util.intersectionLineBound(d, e);\r\n        return a;\r\n    },\r\n    //获取曲线的路径点，返回应是数组\r\n    getPath:function () {\r\n        var path = [], start = this.getStartPosition(), end = this.getEndPosition();\r\n        if (this.nodeA === this.nodeZ)return [start, end];\r\n        if (start && end) {\r\n            var angle = Math.atan(Math.abs(end.y - start.y) / Math.abs(end.x - start.x));\r\n            var mX = (start.x + end.x) / 2 + this.qtopo.attr.curveOffset * Math.cos(angle - Math.PI / 2);\r\n            var mY = (start.y + end.y) / 2 + this.qtopo.attr.curveOffset * Math.sin(angle - Math.PI / 2);\r\n            path.start = start;\r\n            path.end = end;\r\n            path.middle = {\r\n                x: mX,\r\n                y: mY\r\n            };\r\n            path.text =  makePoint(path.start,path.middle, path.end, 1/2);\r\n            path.angle = angle;\r\n            path.push(start);\r\n            path.push(end);\r\n        }\r\n        return path\r\n    },\r\n    //绘制曲线路径\r\n    paintPath:function (cx, path) {\r\n        if (this.nodeA === this.nodeZ)return void this.paintLoop(cx);\r\n        var start = path.start;\r\n        var end = path.end;\r\n        var middle = path.middle;\r\n        if (start && end && middle) {\r\n            cx.beginPath();\r\n            cx.moveTo(start.x, start.y);\r\n            cx.strokeStyle = "rgba(" + this.strokeColor + "," + this.alpha + ")";\r\n            cx.lineWidth = this.lineWidth;\r\n            cx.moveTo(start.x, start.y);\r\n            cx.quadraticCurveTo(middle.x, middle.y, end.x, end.y);\r\n            cx.stroke();\r\n            if (cx.stroke(), cx.closePath(), null != this.arrowsRadius) {\r\n                if (this.qtopo.attr.arrow.end) {\r\n                    this.paintArrow(cx, start, end);\r\n                }\r\n                if (this.qtopo.attr.arrow.start) {\r\n                    this.paintArrow(cx, end, start);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    //线上文本位置\r\n    paintText:function (cx, path) {\r\n        if (path && path.text && this.text && this.text.length > 0) {\r\n            var textX = path.text.x + this.textOffsetX;\r\n            var textY = path.text.y + this.textOffsetY;\r\n            cx.save();\r\n            cx.beginPath();\r\n            cx.font = this.font;\r\n            var totalWidth = cx.measureText(this.text).width;\r\n            var fontWidth = cx.measureText("田").width;\r\n            cx.fillStyle = "rgba(" + this.fontColor + ", " + this.alpha + ")";\r\n            cx.fillText(this.text, textX - totalWidth / 2, textY - fontWidth / 2);\r\n            cx.stroke();\r\n            cx.closePath();\r\n            cx.restore();\r\n        }\r\n    },\r\n    //判断点是否落在曲线上,原理基于二次贝塞尔曲线公式阶段点取样,判断点是否落在每小部分的线段上\r\n    isInBound:function (x, y) {\r\n        if (this.nodeA === this.nodeZ) {\r\n            var d = this.bundleGap * (this.nodeIndex + 1) / 2, e = a.util.getDistance(this.nodeA, {x: x, y: y}) - d;\r\n            return Math.abs(e) <= 3\r\n        }\r\n        //----\r\n        var flag = false;\r\n        var start = this.path.start;\r\n        var end = this.path.end;\r\n        var middle = this.path.middle;\r\n        var angle = this.path.angle;//起始点之间的夹角\r\n        if(start&&end&&middle&&angle){\r\n            var temp1 = start;//首次为起点\r\n            var temp2;\r\n            for (var i = 1; i <= 10; i++) {\r\n                temp2 = makePoint(start, middle, end, i / 10);//取样为10份\r\n                //判断点是否落在temp1和temp2构成的直线上\r\n                if (pointInLine({x: x, y: y}, temp1, temp2, this.width / 2, angle)) {\r\n                    flag = true;\r\n                    break\r\n                }\r\n                temp1 = temp2;\r\n            }\r\n        }\r\n        return flag\r\n    }\r\n};\r\n//----\r\n//制造一个二次贝塞尔曲线的阶段点\r\nfunction makePoint(s, m, e, t) {\r\n    return {\r\n        x: (1 - t) * (1 - t) * s.x + 2 * t * (1 - t) * m.x + t * t * e.x,\r\n        y: (1 - t) * (1 - t) * s.y + 2 * t * (1 - t) * m.y + t * t * e.y\r\n    }\r\n}\r\n//考虑到线段的粗细,需要判断点是否在矩形内，若点同时在顺时针4个点成的4条线的右侧,则为在矩形内\r\nfunction pointInLine(p, s, e, w, an) {\r\n    var rectangle = [//顺时针，从左上开始\r\n        {\r\n            x: s.x - w * Math.sin(an),\r\n            y: s.y - w * Math.cos(an)\r\n        },\r\n        {\r\n            x: e.x - w * Math.sin(an),\r\n            y: e.y - w * Math.cos(an)\r\n        },\r\n        {\r\n            x: e.x + w * Math.sin(an),\r\n            y: e.y + w * Math.cos(an)\r\n        },\r\n        {\r\n            x: s.x + w * Math.sin(an),\r\n            y: s.y + w * Math.cos(an)\r\n        }\r\n    ];\r\n    return poinRightLine(rectangle[0], rectangle[1], p) && poinRightLine(rectangle[1], rectangle[2], p) && poinRightLine(rectangle[2], rectangle[3], p) && poinRightLine(rectangle[3], rectangle[0], p);\r\n}\r\n//判断点在线的右侧?\r\nfunction poinRightLine(s, e, p) {\r\n    return ((e.x - s.x) * (-p.y + s.y) - (-e.y + s.y) * (p.x - s.x)) < 0;\r\n}\r\n//---\r\n//------\r\n//-\r\nfunction CurveLink(config) {\r\n    if (!config.start || !config.end || !config.start.jtopo || !config.end.jtopo) {\r\n        QTopo.util.error("Create Link need start and end");\r\n        return;\r\n    }\r\n    this.attr = QTopo.util.extend(getDefault(), config || {});\r\n    Link.call(this, new JTopo.CurveLink(config.start.jtopo, config.end.jtopo));\r\n    //函数\r\n    this.set = setJTopo;\r\n    //初始化\r\n    this.set(this.attr);\r\n    //改写源码绘制曲线,可由curveOffset指定弧度\r\n    reset(this);\r\n}\r\nQTopo.util.inherits(CurveLink, Link);\r\n//-\r\n/**\r\n *  元素对属性的统一设置函数，推荐使用\r\n *\r\n *  参数可设置一项或多项,未设置部分参考全局配置\r\n *  @method set\r\n *  @param config\r\n *  @example\r\n *          实际参数参考attr内属性,只会修改有对应set函数的属性,若新增属性且添加了setXXX函数，也可用此函数配置\r\n *          如:name 对应 setName("..")\r\n *          参数格式如下\r\n *          config={\r\n *              xx:...,\r\n *              xx:...\r\n *          }\r\n */\r\nfunction setJTopo(config) {\r\n    if (config) {\r\n        var self = this;\r\n        self._setAttr(config);\r\n    }\r\n}\r\nfunction reset(link) {\r\n    link.jtopo.getStartPosition =jtopoRest.getStart;\r\n    link.jtopo.getEndPosition =jtopoRest.getEnd;\r\n    link.jtopo.paintPath =jtopoRest.paintPath;\r\n    link.jtopo.getPath =jtopoRest.getPath;\r\n    link.jtopo.isInBound = jtopoRest.isInBound;\r\n    link.jtopo.paintText =jtopoRest.paintText;\r\n}\r\n//-\r\n/**\r\n *  设置曲线偏移量\r\n *\r\n *  @method setCurveOffset\r\n *  @param curveOffset {number}\r\n */\r\nCurveLink.prototype.setCurveOffset = function (curveOffset) {\r\n    if ($.isNumeric(curveOffset)) {\r\n        this.attr.curveOffset = parseInt(curveOffset);\r\n    }\r\n};\r\n/**\r\n * 获取元素全局样式\r\n * @method getDefault\r\n * @return {object}\r\n * @example\r\n *          var DEFAULT = {\r\n                                number: 1,\r\n                                alpha: 1,\r\n                                color: \'22,124,255\',\r\n                                arrow: {\r\n                                    size: 10,\r\n                                    offset: 0,\r\n                                    start: false,\r\n                                    end: false\r\n                                },\r\n                                jsonId:"",\r\n                                gap: 20,\r\n                                width: 2,\r\n                                dashed: null,\r\n                                zIndex: 100,\r\n                                font: {\r\n                                    size: 16,\r\n                                    type: "微软雅黑",\r\n                                    color: \'255,255,255\'\r\n                                },\r\n                                useType: QTopo.constant.link.CURVE,\r\n                                curveOffset: 200\r\n                            };\r\n */\r\nCurveLink.prototype.getDefault = getDefault;\r\n//-//# sourceMappingURL=data:application/json;charset=utf-8;base64,');
},32:function(module,exports,__webpack_require__){eval('/**\r\n * @module core\r\n */\r\n/**\r\n * 直线链路\r\n * @class  DirectLink\r\n * @constructor\r\n * @extends [L] Link\r\n * @param [config] 配置参数，无参则按全局配置创建\r\n */\r\nvar Link = __webpack_require__(2);\r\nmodule.exports = {\r\n    constructor: DirectLink,\r\n    setDefault: setDefault,\r\n    getDefault: getDefault\r\n};\r\n//-\r\nvar DEFAULT = {\r\n    number: 1,\r\n    alpha: 1,\r\n    color: \'22,124,255\',\r\n    arrow: {\r\n        size: 10,\r\n        offset: 0,\r\n        start: false,\r\n        end: false\r\n    },\r\n    jsonId:"",\r\n    gap: 20,\r\n    width: 3,\r\n    dashed: null,\r\n    zIndex: 100,\r\n    font: {\r\n        size: 16,\r\n        type: "微软雅黑",\r\n        color: \'255,255,255\'\r\n    },\r\n    expendAble: true,\r\n    useType: QTopo.constant.link.DIRECT,\r\n    bundleOffset: 60// 多条直线时，线条折线拐角处的长度\r\n};\r\nfunction setDefault(config) {\r\n    QTopo.util.extend(DEFAULT, config || {});\r\n}\r\nfunction getDefault() {\r\n    return QTopo.util.deepClone(DEFAULT);\r\n}\r\n//------\r\nvar jtopoReset={\r\n    //重写绘制，添加双向箭头\r\n    getStartPosition:function () {\r\n        var a;\r\n        return null != this.arrowsRadius && (a = (function (self) {\r\n            var b = self.nodeA, c = self.nodeZ;\r\n            var d = JTopo.util.lineF(b.cx, b.cy, c.cx, c.cy);\r\n            var e = b.getBound();\r\n            return f = JTopo.util.intersectionLineBound(d, e);\r\n        })(this)), null == a && (a = {\r\n            x: this.nodeA.cx,\r\n            y: this.nodeA.cy\r\n        }), a;\r\n    },\r\n    paintPath:function (a, b) {\r\n        if (this.nodeA === this.nodeZ) return void this.paintLoop(a);\r\n        a.beginPath(),\r\n            a.moveTo(b[0].x, b[0].y);\r\n        for (var c = 1; c < b.length; c++) {\r\n            null == this.dashedPattern ? (\r\n                (null == this.PointPathColor ? a.lineTo(b[c].x, b[c].y) : a.JtopoDrawPointPath(b[c - 1].x, b[c - 1].y, b[c].x, b[c].y, a.strokeStyle, this.PointPathColor))\r\n            ) : a.JTopoDashedLineTo(b[c - 1].x, b[c - 1].y, b[c].x, b[c].y, this.dashedPattern)\r\n        }\r\n        if (a.stroke(), a.closePath(), null != this.arrowsRadius) {\r\n            if (this.qtopo.attr.arrow.end) {\r\n                this.paintArrow(a, b[0], b[b.length - 1]);\r\n            }//终点箭头\r\n            if (this.qtopo.attr.arrow.start) {\r\n                this.paintArrow(a, b[b.length - 1], b[0]);\r\n            }//起点箭头\r\n        }\r\n    }\r\n};\r\n//------\r\n//-\r\nfunction DirectLink(config) {\r\n    if (!config.start || !config.end || !config.start.jtopo || !config.end.jtopo) {\r\n        QTopo.util.error("Create Link need start and end");\r\n        return;\r\n    }\r\n    this.attr = QTopo.util.extend(getDefault(), config || {});\r\n    Link.call(this, new JTopo.Link(config.start.jtopo, config.end.jtopo));\r\n    //函数\r\n    this.set = setJTopo;\r\n    //初始化\r\n    this.set(this.attr);\r\n    //源码修改\r\n    reset(this);\r\n}\r\nQTopo.util.inherits(DirectLink, Link);\r\n/**\r\n *  元素对属性的统一设置函数，推荐使用\r\n *\r\n *  参数可设置一项或多项,未设置部分参考全局配置\r\n *  @method set\r\n *  @param config\r\n *  @example\r\n *          实际参数参考attr内属性,只会修改有对应set函数的属性,若新增属性且添加了setXXX函数，也可用此函数配置\r\n *          如:name 对应 setName("..")\r\n *          参数格式如下\r\n *          config={\r\n *              xx:...,\r\n *              xx:...\r\n *          }\r\n */\r\nfunction setJTopo(config) {\r\n    if (config) {\r\n        var self = this;\r\n        self._setAttr(config);\r\n    }\r\n}\r\nfunction reset(link) {\r\n    link.jtopo.getStartPosition = jtopoReset.getStartPosition;\r\n    link.jtopo.paintPath = jtopoReset.paintPath;\r\n}\r\n/**\r\n *  设置直线两端的线段长度\r\n *\r\n *  当一条链路的两端元素之间有多条链路时，链路将会分成三段绘制并偏移，以区分其他链路\r\n *  @method setBundleOffset\r\n *  @param bundleOffset {number}\r\n */\r\nDirectLink.prototype.setBundleOffset = function (bundleOffset) {\r\n    if ($.isNumeric(bundleOffset)) {\r\n        this.jtopo.bundleOffset = parseInt(bundleOffset);\r\n    }\r\n    this.attr.bundleOffset = this.jtopo.bundleOffset;\r\n};\r\n/**\r\n * 获取元素全局样式\r\n * @method getDefault\r\n * @return {object}\r\n * @example\r\n *          var DEFAULT = {\r\n                                number: 1,\r\n                                alpha: 1,\r\n                                color: \'22,124,255\',\r\n                                arrow: {\r\n                                    size: 10,\r\n                                    offset: 0,\r\n                                    start: false,\r\n                                    end: false\r\n                                },\r\n                                jsonId:"",\r\n                                gap: 20,\r\n                                width: 3,\r\n                                dashed: null,\r\n                                zIndex: 100,\r\n                                font: {\r\n                                    size: 16,\r\n                                    type: "微软雅黑",\r\n                                    color: \'255,255,255\'\r\n                                },\r\n                                expendAble: true,\r\n                                useType: QTopo.constant.link.DIRECT,\r\n                                bundleOffset: 60// 多条直线时，线条折线拐角处的长度\r\n                            };\r\n */\r\nDirectLink.prototype.getDefault = getDefault;\r\n/**\r\n * 开启链路展开模式,为链路生成toggle函数\r\n * @method openToggle\r\n * @param scene {scene}链路所在图层\r\n */\r\nDirectLink.prototype.openToggle = function (scene) {\r\n    this.attr.expendAble = true;\r\n    var jtopo = scene.jtopo;\r\n    /**\r\n     * 链路展开/合并切换\r\n     * @method toggle\r\n     * @param [flag] {boolean}为true则展开为false则缩放，无值则根据现状自适应切换,\r\n     */\r\n    this.toggle = function (flag) {\r\n        var todo = !(this.getUseType() == QTopo.constant.CASUAL && this.parent);\r\n        if (typeof flag == "boolean" && (flag ^ todo)) {\r\n            return;\r\n        }\r\n        if (todo) {\r\n            //展开\r\n            //复制属性\r\n            if (this.attr.number > 1 && this.attr.expendAble) {\r\n                var childSet = QTopo.util.deepClone(this.attr);\r\n                childSet.start = this.path.start;\r\n                childSet.end = this.path.end;\r\n                childSet.useType = QTopo.constant.CASUAL;\r\n                childSet.number = 1;\r\n                var parent = {\r\n                    attr: this.attr,\r\n                    extra: this.extra,\r\n                    path: this.path,\r\n                    addChild: function (num) {\r\n                        if ($.isNumeric(num)) {\r\n                            num = parseInt(num);\r\n                            for (var i = 0; i < num; i++) {\r\n                                var link = scene.createLink(childSet);\r\n                                parent.children.push(link);\r\n                                link.parent = parent;\r\n                                link.extra = parent.extra;\r\n                            }\r\n                        }\r\n                    },\r\n                    children: []\r\n                };\r\n                scene.remove(this);\r\n                parent.addChild(parent.attr.number);\r\n            }\r\n        } else {\r\n            //聚合\r\n            var father = this.parent;\r\n            scene.remove(father.children);\r\n            var config = father.attr;\r\n            config.start = father.path.start;\r\n            config.end = father.path.end;\r\n            scene.createLink(config).extra = father.extra;\r\n        }\r\n    };\r\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,')},33:function(module,exports,__webpack_require__){eval('/**\r\n * @module core\r\n */\r\n/**\r\n * 二次折线链路\r\n * @class  FlexionalLink\r\n * @constructor\r\n * @extends [L] Link\r\n * @param [config] 配置参数，无参则按全局配置创建\r\n */\r\nvar Link = __webpack_require__(2);\r\nmodule.exports = {\r\n    constructor: FlexionalLink,\r\n    setDefault: setDefault,\r\n    getDefault: getDefault\r\n};\r\n//-\r\nvar DEFAULT = {\r\n    number: 1,\r\n    alpha: 1,\r\n    color: \'22,124,255\',\r\n    arrow: {\r\n        size: 10,\r\n        offset: 0,\r\n        start: false,\r\n        end: false\r\n    },\r\n    jsonId:"",\r\n    radius: 0,\r\n    gap: 20,\r\n    width: 2,\r\n    dashed: null,\r\n    zIndex: 100,\r\n    font: {\r\n        size: 16,\r\n        type: "微软雅黑",\r\n        color: \'255,255,255\'\r\n    },\r\n    useType: QTopo.constant.link.FLEXIONAL,\r\n    direction: "horizontal",\r\n    offsetGap: 60//折线处长度\r\n};\r\nfunction setDefault(config) {\r\n    QTopo.util.extend(DEFAULT, config || {});\r\n}\r\nfunction getDefault() {\r\n    return QTopo.util.deepClone(DEFAULT);\r\n}\r\n//-\r\n//-----\r\nvar jtopoReset = {\r\n    paintPath: function (cx, path) {\r\n        var attr = this.qtopo.attr;\r\n        if (this.nodeA === this.nodeZ)return void this.paintLoop(cx);\r\n        var start = path[0];\r\n        var end = path[path.length - 1];\r\n        cx.beginPath();\r\n        cx.moveTo(start.x, start.y);\r\n        for (var i = 1; i < path.length; i++) {\r\n            if (null == this.dashedPattern) {\r\n                if (attr.radius > 0) {\r\n                    if (i < path.length - 1) {\r\n                        cx.arcTo(path[i].x, path[i].y,path[i + 1].x, path[i + 1].y,attr.radius);//增加折线弧度\r\n                    } else {\r\n                        cx.lineTo(path[i].x, path[i].y);\r\n                    }\r\n                } else {\r\n                    cx.lineTo(path[i].x, path[i].y);\r\n                }\r\n            } else {\r\n                cx.JTopoDashedLineTo(path[i - 1].x, path[i - 1].y, path[i].x, path[i].y, this.dashedPattern);\r\n            }\r\n        }\r\n        cx.stroke();\r\n        cx.closePath();\r\n        if (null != this.arrowsRadius) {\r\n            if (attr.arrow.end) {\r\n                this.paintArrow(cx, path[path.length - 2], path[path.length - 1]);\r\n            }\r\n            if (attr.arrow.start) {\r\n                this.paintArrow(cx, path[1], path[0]);//添加双向箭头\r\n            }\r\n        }\r\n    }\r\n};\r\n//-----\r\nfunction FlexionalLink(config) {\r\n    if (!config.start || !config.end || !config.start.jtopo || !config.end.jtopo) {\r\n        QTopo.util.error("Create Link need start and end");\r\n        return;\r\n    }\r\n    this.attr = QTopo.util.extend(getDefault(), config || {});\r\n    Link.call(this, new JTopo.FlexionalLink(config.start.jtopo, config.end.jtopo));\r\n    //函数\r\n    this.set = setJTopo;\r\n    //初始化\r\n    this.set(this.attr);\r\n    //修改源码\r\n    reset(this);\r\n}\r\nQTopo.util.inherits(FlexionalLink, Link);\r\n/**\r\n *  元素对属性的统一设置函数，推荐使用\r\n *\r\n *  参数可设置一项或多项,未设置部分参考全局配置\r\n *  @method set\r\n *  @param config\r\n *  @example\r\n *          实际参数参考attr内属性,只会修改有对应set函数的属性,若新增属性且添加了setXXX函数，也可用此函数配置\r\n *          如:name 对应 setName("..")\r\n *          参数格式如下\r\n *          config={\r\n *              xx:...,\r\n *              xx:...\r\n *          }\r\n */\r\nfunction setJTopo(config) {\r\n    if (config) {\r\n        var self = this;\r\n        this._setAttr(config);\r\n    }\r\n}\r\nfunction reset(link) {\r\n    //双向箭头\r\n    link.jtopo.paintPath = jtopoReset.paintPath;\r\n}\r\n/**\r\n *  两端折线线段的长度\r\n *\r\n *  @method setOffsetGap\r\n *  @param offsetGap {number}\r\n */\r\nFlexionalLink.prototype.setOffsetGap = function (offsetGap) {\r\n    if ($.isNumeric(offsetGap)) {\r\n        this.jtopo.offsetGap = parseInt(offsetGap);\r\n    }\r\n    this.attr.offsetGap = this.jtopo.offsetGap;\r\n};\r\n/**\r\n *  设置折线方向\r\n *\r\n *  @method setDirection\r\n *  @param direction {string} horizontal 水平 "vertical"垂直\r\n */\r\nFlexionalLink.prototype.setDirection = function (direction) {\r\n    //折线方向 horizontal 水平 "vertical"垂直\r\n    if (direction) {\r\n        this.jtopo.direction = direction;\r\n    }\r\n    this.attr.direction = this.jtopo.direction;\r\n};\r\n/**\r\n *  设置折角弧度\r\n *\r\n *  @method setRadius\r\n *  @param radius {number}\r\n */\r\nFlexionalLink.prototype.setRadius = function (radius) {\r\n    if ($.isNumeric(radius)) {\r\n        radius = parseInt(radius);\r\n        if (radius > 20) {\r\n            radius = 20;\r\n        } else if (radius < 0) {\r\n            radius = 0;\r\n        }\r\n        this.attr.radius = radius;\r\n    }\r\n};\r\n/**\r\n * 获取元素全局样式\r\n * @method getDefault\r\n * @return {object}\r\n * @example\r\n *         var DEFAULT = {\r\n                            number: 1,\r\n                            alpha: 1,\r\n                            color: \'22,124,255\',\r\n                            arrow: {\r\n                                size: 10,\r\n                                offset: 0,\r\n                                start: false,\r\n                                end: false\r\n                            },\r\n                            jsonId:"",\r\n                            radius: 0,\r\n                            gap: 20,\r\n                            width: 2,\r\n                            dashed: null,\r\n                            zIndex: 100,\r\n                            font: {\r\n                                size: 16,\r\n                                type: "微软雅黑",\r\n                                color: \'255,255,255\'\r\n                            },\r\n                            useType: QTopo.constant.link.FLEXIONAL,\r\n                            direction: "horizontal",\r\n                            offsetGap: 60//两端折线线段的长度\r\n                        };\r\n */\r\nFlexionalLink.prototype.getDefault = getDefault;\r\n/*一种绘制固定在节点右侧的二次线*/\r\n//resetFold.jtopo.getPath =poinst;\r\nfunction poinst() {\r\n    //重写线的绘制路径\r\n    var littleSize = 50;\r\n    var startRight = {\r\n        x: start.x + start.width,\r\n        y: start.y + start.height / 2\r\n    };\r\n    var endRight = {\r\n        x: end.x + end.width,\r\n        y: end.y + end.height / 2\r\n    };\r\n    var middleA = {};\r\n    var middleB = {};\r\n    if (startRight.x > endRight.x) {\r\n        middleA.x = startRight.x + littleSize;\r\n        middleA.y = startRight.y;\r\n        middleB.x = startRight.x + littleSize;\r\n        middleB.y = endRight.y;\r\n    } else {\r\n        middleA.x = endRight.x + littleSize;\r\n        middleA.y = startRight.y;\r\n        middleB.x = endRight.x + littleSize;\r\n        middleB.y = endRight.y;\r\n    }\r\n    return [startRight, middleA, middleB, endRight];\r\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,');
},34:function(module,exports,__webpack_require__){eval('/**\r\n * @module core\r\n */\r\n/**\r\n * 折线链路\r\n * @class  FoldLink\r\n * @constructor\r\n * @extends [L] Link\r\n * @param [config] 配置参数，无参则按全局配置创建\r\n */\r\nvar Link=__webpack_require__(2);\r\nmodule.exports =  {\r\n    constructor:FoldLink,\r\n    setDefault:setDefault,\r\n    getDefault:getDefault\r\n};\r\n//-\r\nvar DEFAULT ={\r\n        number:1,\r\n        alpha:1,\r\n        color: \'22,124,255\',\r\n        arrow:{\r\n            size:10,\r\n            offset:0,\r\n            start:false,\r\n            end:false\r\n        },\r\n        jsonId:"",\r\n        gap:20,\r\n        width: 2,\r\n        dashed:  null,\r\n        zIndex : 100,\r\n        radius:0,\r\n        font:{\r\n            size:16,\r\n            type:"微软雅黑",\r\n            color:\'255,255,255\'\r\n        },\r\n        useType: QTopo.constant.link.FOLD,\r\n        direction:"vertical"\r\n};\r\nfunction setDefault(config){\r\n    QTopo.util.extend(DEFAULT, config || {});\r\n}\r\nfunction getDefault(){\r\n    return QTopo.util.deepClone(DEFAULT);\r\n}\r\n//---------\r\nvar jtopoReset={\r\n    //双向箭头\r\n    paintPath:function (cx, path) {\r\n        var attr=this.qtopo.attr;\r\n        if (this.nodeA === this.nodeZ)return void this.paintLoop(cx);\r\n        cx.beginPath();\r\n        cx.moveTo(path[0].x, path[0].y);\r\n        for (var i = 1; i < path.length; i++){\r\n            if(null == this.dashedPattern){\r\n                if (attr.radius > 0) {\r\n                    if (i < path.length - 1) {\r\n                        cx.arcTo(path[i].x, path[i].y,path[i + 1].x, path[i + 1].y,attr.radius);//增加折线弧度\r\n                    } else {\r\n                        cx.lineTo(path[i].x, path[i].y);\r\n                    }\r\n                } else {\r\n                    cx.lineTo(path[i].x, path[i].y);\r\n                }\r\n            }else{\r\n                cx.JTopoDashedLineTo(path[i - 1].x, path[i - 1].y, path[i].x, path[i].y, this.dashedPattern);\r\n            }\r\n        }\r\n        cx.stroke();\r\n        cx.closePath();\r\n        if (null != this.arrowsRadius) {\r\n            if (attr.arrow.end) {\r\n                this.paintArrow(cx, path[path.length - 2], path[path.length - 1]);\r\n            }\r\n            if (attr.arrow.start) {\r\n                this.paintArrow(cx, path[1], path[0]);//添加双向箭头\r\n            }\r\n        }\r\n    }\r\n};\r\n//---------\r\n//-\r\nfunction FoldLink(config){\r\n    if(!config.start||!config.end||!config.start.jtopo||!config.end.jtopo){\r\n        QTopo.util.error("Create Link need start and end");\r\n        return;\r\n    }\r\n    this.attr =  QTopo.util.extend(getDefault(), config || {});\r\n    Link.call(this, new JTopo.FoldLink(config.start.jtopo, config.end.jtopo));\r\n    //函数\r\n    this.set = setJTopo;\r\n    //初始化\r\n    this.set(this.attr);\r\n    //修改源码\r\n    reset(this);\r\n}\r\nQTopo.util.inherits(FoldLink,Link);\r\n//-\r\n/**\r\n *  元素对属性的统一设置函数，推荐使用\r\n *\r\n *  参数可设置一项或多项,未设置部分参考全局配置\r\n *  @method set\r\n *  @param config\r\n *  @example\r\n *          实际参数参考attr内属性,只会修改有对应set函数的属性,若新增属性且添加了setXXX函数，也可用此函数配置\r\n *          如:name 对应 setName("..")\r\n *          参数格式如下\r\n *          config={\r\n *              xx:...,\r\n *              xx:...\r\n *          }\r\n */\r\nfunction setJTopo(config) {\r\n    if (config) {\r\n        var self=this;\r\n        this._setAttr(config);\r\n    }\r\n}\r\nfunction reset(link){\r\n    link.jtopo.paintPath = jtopoReset.paintPath;\r\n}\r\n//-\r\n/**\r\n *  设置折线方向\r\n *\r\n *  @method setDirection\r\n *  @param direction {string} /horizontal 水平 "vertical"垂直\r\n */\r\nFoldLink.prototype.setDirection=function(direction){\r\n    if(direction){\r\n        this.jtopo.direction=direction;\r\n    }\r\n    this.attr.direction=this.jtopo.direction;\r\n};\r\n/**\r\n * 获取元素全局样式\r\n * @method getDefault\r\n * @return {object}\r\n * @example\r\n *        var DEFAULT ={\r\n                            number:1,\r\n                            alpha:1,\r\n                            color: \'22,124,255\',\r\n                            arrow:{\r\n                                size:10,\r\n                                offset:0,\r\n                                start:false,\r\n                                end:false\r\n                            },\r\n                            jsonId:"",\r\n                            gap:20,\r\n                            width: 2,\r\n                            dashed:  null,\r\n                            zIndex : 100,\r\n                            radius:0,\r\n                            font:{\r\n                                size:16,\r\n                                type:"微软雅黑",\r\n                                color:\'255,255,255\'\r\n                            },\r\n                            useType: QTopo.constant.link.FOLD,\r\n                            direction:"vertical"\r\n                    };\r\n */\r\nFoldLink.prototype.getDefault=getDefault;\r\n/**\r\n *  设置折角弧度\r\n *\r\n *  @method setRadius\r\n *  @param radius {number}\r\n */\r\nFoldLink.prototype.setRadius = function (radius) {\r\n    if ($.isNumeric(radius)) {\r\n        radius = parseInt(radius);\r\n        if (radius > 20) {\r\n            radius = 20;\r\n        } else if (radius < 0) {\r\n            radius = 0;\r\n        }\r\n        this.attr.radius = radius;\r\n    }\r\n};\r\n//-//# sourceMappingURL=data:application/json;charset=utf-8;base64,')},35:function(module,exports,__webpack_require__){eval('/**\r\n * @module core\r\n */\r\n/**\r\n * 图形节点\r\n * @class  ImageNode\r\n * @constructor\r\n * @extends [N] Node\r\n * @param [config] 配置参数，无参则按全局配置创建\r\n */\r\nvar Node=__webpack_require__(3);\r\nmodule.exports = {\r\n    constructor:ImageNode,\r\n    setDefault:setDefault,\r\n    getDefault:getDefault\r\n};\r\n//-\r\nvar DEFAULT= {\r\n    image: "",\r\n    size: [60, 60],\r\n    name: "node",\r\n    alpha: 1,\r\n    position: [0, 0],\r\n    font: {\r\n        size: 16,\r\n        type: \'微软雅黑\',\r\n        color: "255,255,255"\r\n    },\r\n    jsonId:"",\r\n    border:{\r\n        width:0,\r\n        radius:0,//最大160 最小0\r\n        color:"255,0,0"\r\n    },\r\n    zIndex: 200,//层级(10-999)\r\n    color: JTopo.util.randomColor(),\r\n    namePosition: \'bottom\',\r\n    useType: QTopo.constant.node.IMAGE,\r\n    alarm: {\r\n        show: false,\r\n        text: "",\r\n        color: "255,255,255",\r\n        font: {\r\n            size: 16,\r\n            type: "微软雅黑"\r\n        }\r\n    }\r\n};\r\nfunction setDefault(config){\r\n    QTopo.util.extend(DEFAULT, config || {});\r\n}\r\nfunction getDefault(){\r\n    return QTopo.util.deepClone(DEFAULT);\r\n}\r\n//-\r\n//------\r\n    var jtopoReset={\r\n        //重写绘制函数，优化告警效果\r\n        paint:function (cx) {\r\n            alarmFlash.call(this,cx);\r\n            if (this.image) {\r\n                var b = cx.globalAlpha;\r\n                cx.globalAlpha = this.alpha;\r\n                if(null != this.alarmImage&& null != this.alarm ){\r\n                    cx.drawImage(this.alarmImage, -this.width / 2, -this.height / 2, this.width, this.height)\r\n                }else{\r\n                    cx.drawImage(this.image, -this.width / 2, -this.height / 2, this.width, this.height)\r\n                }\r\n                cx.globalAlpha = b;\r\n            } else{\r\n                cx.beginPath();\r\n                cx.fillStyle = "rgba(" + this.fillColor + "," + this.alpha + ")";\r\n                if(null == this.borderRadius || 0 == this.borderRadius){\r\n                    cx.rect(-this.width / 2, -this.height / 2, this.width, this.height);\r\n                }else{\r\n                    cx.JTopoRoundRect(-this.width / 2, -this.height / 2, this.width, this.height, this.borderRadius);\r\n                }\r\n                cx.fill();\r\n                cx.closePath();\r\n            }\r\n            this.paintText(cx);\r\n            this.paintBorder(cx);\r\n            this.paintCtrl(cx);\r\n            this.paintAlarmText(cx);\r\n        }\r\n    };\r\n//------\r\nfunction ImageNode(config) {\r\n    this.attr = QTopo.util.extend(getDefault(), config || {});\r\n    Node.call(this,new JTopo.Node());\r\n    //函数\r\n    this.set = setJTopo;\r\n    //初始化\r\n    this.set(this.attr);\r\n    reset(this);\r\n}\r\nQTopo.util.inherits(ImageNode,Node);\r\n//-\r\n/**\r\n *  元素对属性的统一设置函数，推荐使用\r\n *\r\n *  参数可设置一项或多项,未设置部分参考全局配置\r\n *  @method set\r\n *  @param config\r\n *  @example\r\n *          实际参数参考attr内属性,只会修改有对应set函数的属性,若新增属性且添加了setXXX函数，也可用此函数配置\r\n *          如:name 对应 setName("..")\r\n *          参数格式如下\r\n *          config={\r\n *              xx:...,\r\n *              xx:...\r\n *          }\r\n */\r\nfunction setJTopo(config) {\r\n    if (config) {\r\n        //处理一般属性的设置\r\n        this._setAttr(config);\r\n        //处理特殊属性的设置\r\n    }\r\n}\r\nfunction reset(node){\r\n    node.jtopo.paint=jtopoReset.paint;\r\n}\r\n\r\n//-\r\n/**\r\n *  设置节点图片,与setColor冲突，设了图片则颜色无效\r\n *\r\n *  未设置图片则显示方形节点，内部填充颜色\r\n *  @method setImage\r\n *  @param image {string} 图片相对路径\r\n */\r\nImageNode.prototype.setImage=function(image) {\r\n    if(image){\r\n        this.jtopo.setImage(image);\r\n        this.attr.image=image;\r\n    }\r\n};\r\n/**\r\n *  获取全局设置\r\n *  @method getDefault\r\n *  @return config {object} 全局配置的克隆对象[只读]，修改该对象不会直接修改全局配置，若要修改全局配置请使用scene.setDefault\r\n *  @example\r\n *          默认全局参数:\r\n *              var DEFAULT= {\r\n                        image: "",\r\n                        size: [60, 60],\r\n                        name: "node",\r\n                        alpha: 1,\r\n                        position: [0, 0],\r\n                        font: {\r\n                            size: 16,\r\n                            type: \'微软雅黑\',\r\n                            color: "255,255,255"\r\n                        },\r\n                        jsonId:"",\r\n                        border:{\r\n                            width:0,\r\n                            radius:0,//最大160 最小0\r\n                            color:"255,0,0"\r\n                        },\r\n                        zIndex: 200,//层级(10-999)\r\n                        color: JTopo.util.randomColor(),\r\n                        namePosition: \'bottom\',\r\n                        useType: QTopo.constant.node.IMAGE,\r\n                        alarm: {\r\n                            show: false,\r\n                            text: "",\r\n                            color: "255,255,255",\r\n                            font: {\r\n                                size: 16,\r\n                                type: "微软雅黑"\r\n                            }\r\n                        }\r\n                    };\r\n */\r\nImageNode.prototype.getDefault=getDefault;\r\n//--\r\n/**\r\n *  设置告警\r\n *\r\n *  参数可设置一项或多项,未设置部分参考全局配置\r\n *  @method setAlarm\r\n *  @param config {object}\r\n *  @example\r\n *          config={\r\n *              show: 是否显示告警{boolean},\r\n                text: 节点右上角告警板中内容,可为空{string},\r\n                color: 告警颜色{string} "255,255,255"/"#ffffff",\r\n                font: {\r\n                    size: 告警字体大小{number},\r\n                    type: 告警字体类型{string} 如"微软雅黑"\r\n                }\r\n *          }\r\n */\r\nImageNode.prototype.setAlarm=function(config) {\r\n    alarmAttr(this,this.attr.alarm,config);\r\n};\r\nfunction alarmAttr(qtopo,alarm,config){\r\n    var jtopo=qtopo.jtopo;\r\n    if(typeof config.show=="undefined"){\r\n        config.show=alarm.show;\r\n    }\r\n    if ((typeof config.show=="boolean"&&config.show)||(config.show=="true")) {\r\n        qtopo.setAlpha(1);\r\n        jtopo.shadow = true;\r\n        jtopo.alarm = config.text || "";\r\n        alarm.text=jtopo.alarm;\r\n        if(config.color){\r\n            jtopo.alarmColor = QTopo.util.transHex(config.color.toLowerCase());\r\n            alarm.color=jtopo.alarmColor;\r\n        }\r\n        var size=alarm.font.size;\r\n        var font=alarm.font.type;\r\n        if(config.font&&$.isNumeric(config.font.size)){\r\n            size=config.font.size;\r\n        }\r\n        if(config.font&&config.font.type){\r\n            font=config.font.type;\r\n        }\r\n        jtopo.alarmFont =  size+ \'px \' + font;\r\n        alarm.font.size=size;\r\n        alarm.font.type=font;\r\n        toggleAlarmFlash(jtopo,true);\r\n    } else {\r\n        jtopo.alarm = null;\r\n        toggleAlarmFlash(jtopo,false);\r\n    }\r\n    alarm.show=config.show;\r\n}\r\nfunction toggleAlarmFlash(node,show){\r\n    //切换闪烁\r\n    if(show){\r\n        node.shadowOffsetX = 0;\r\n        node.shadowOffsetY = 0;\r\n        node.shadowColor = "rgba(" + node.alarmColor + ",1)";\r\n        node.shadowBlur = 10;\r\n        node.allowAlarmFlash=true;\r\n    }else{\r\n        node.shadowOffsetX = 3;\r\n        node.shadowOffsetY = 6;\r\n        node.shadowColor="rgba(0,0,0,0.1)";\r\n        node.shadowBlur = 10;\r\n        node.allowAlarmFlash=false;\r\n    }\r\n}\r\n//插入源码部分,启用告警后每次绘画执行修改阴影\r\nfunction alarmFlash(cx) {\r\n    if(this.shadow&&this.allowAlarmFlash){\r\n        if(typeof this.shadowDirection=="undefined"){\r\n            this.shadowDirection=true;\r\n        }\r\n        move(this);\r\n        cx.shadowBlur = this.shadowBlur;\r\n        function move(node){\r\n            if (node.shadowDirection) {\r\n                node.shadowBlur += 5;\r\n                if(node.shadowBlur>100){\r\n                    node.shadowDirection=false;\r\n                }\r\n            }\r\n            else {\r\n                node.shadowBlur -= 5;\r\n                if(node.shadowBlur<=10){\r\n                    node.shadowDirection=true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n//--\r\n//-//# sourceMappingURL=data:application/json;charset=utf-8;base64,');
},36:function(module,exports,__webpack_require__){eval('/**\r\n * @module core\r\n */\r\n/**\r\n * 文本节点\r\n * @class  TextNode\r\n * @constructor\r\n * @extends [N] Node\r\n * @param [config] 配置参数，无参则按全局配置创建\r\n */\r\nvar Node = __webpack_require__(3);\r\nmodule.exports = {\r\n    constructor: TextNode,\r\n    setDefault: setDefault,\r\n    getDefault: getDefault\r\n};\r\n//-\r\nvar DEFAULT = {\r\n    position: [0, 0],\r\n    font: {\r\n        size: 16,\r\n        type: \'微软雅黑\',\r\n        color: "255,255,255"\r\n    },\r\n    jsonId:"",\r\n    border: {\r\n        width: 0,\r\n        radius: 0,//最大160 最小0\r\n        color: "255,0,0"\r\n    },\r\n    zIndex: 200,//层级(10-999)\r\n    alpha: 1,\r\n    text: \'no text here\',\r\n    useType: QTopo.constant.node.TEXT\r\n};\r\nfunction setDefault(config) {\r\n    QTopo.util.extend(DEFAULT, config || {});\r\n}\r\nfunction getDefault() {\r\n    return QTopo.util.deepClone(DEFAULT);\r\n}\r\n//-\r\n//----\r\n//支持自动换行\r\nvar jtopoReset = {\r\n    paint: function (a) {\r\n        //自动换行\r\n        var texts = this.text.split("\\n");\r\n        a.beginPath();\r\n        a.font = this.font;\r\n        var fontWidth = a.measureText("田").width;\r\n        this.width = 0;\r\n        for (var j = 0; j < texts.length; j++) {\r\n            var width = a.measureText(texts[j]).width;\r\n            if (width > this.width) {\r\n                this.width = width;\r\n            }\r\n        }\r\n        this.height = texts.length * fontWidth;\r\n        a.strokeStyle = "rgba(" + this.fontColor + ", " + this.alpha + ")";\r\n        a.fillStyle = "rgba(" + this.fontColor + ", " + this.alpha + ")";\r\n        if (texts.length > 1) {\r\n            for (var i = 0; i < texts.length; i++) {\r\n                a.fillText(texts[i], -this.width / 2 + 0.15 * fontWidth, this.height / 2 + (i - texts.length + 0.85) * fontWidth);\r\n            }\r\n        } else {\r\n            a.fillText(texts, -this.width / 2 + 0.03 * fontWidth, this.height / 2 - 0.15 * fontWidth);\r\n        }\r\n        a.closePath();\r\n        this.paintBorder(a);\r\n        this.paintCtrl(a);\r\n        this.paintAlarmText(a);\r\n    }\r\n};\r\n//----\r\nfunction TextNode(config) {\r\n    this.attr = QTopo.util.extend(getDefault(), config || {});\r\n    Node.call(this, new JTopo.TextNode());\r\n    this.set = setJTopo;\r\n    //初始化\r\n    this.set(this.attr);\r\n    reset(this);\r\n}\r\nQTopo.util.inherits(TextNode, Node);\r\n//-\r\n/**\r\n *  元素对属性的统一设置函数，推荐使用\r\n *\r\n *  参数可设置一项或多项,未设置部分参考全局配置\r\n *\r\n *  若传入参数的text未配置，则显示为  "not set text"\r\n *  @method set\r\n *  @param config\r\n *  @example\r\n *          实际参数参考attr内属性,只会修改有对应set函数的属性,若新增属性且添加了setXXX函数，也可用此函数配置\r\n *          如:name 对应 setName("..")\r\n *          参数格式如下\r\n *          config={\r\n *              xx:...,\r\n *              xx:...\r\n *          }\r\n */\r\nfunction setJTopo(config) {\r\n    if (config) {\r\n        //处理一般属性的设置\r\n        if (!this.attr.text&&!config.text) {\r\n            config.text = "not set text";\r\n        }\r\n        this._setAttr(config);\r\n    }\r\n}\r\n//重写源码\r\nfunction reset(node) {\r\n    node.jtopo.paint = jtopoReset.paint;\r\n}\r\n//-\r\n/**\r\n *  获取全局设置\r\n *  @method getDefault\r\n *  @return config {object} 全局配置的克隆对象[只读]，修改该对象不会直接修改全局配置，若要修改全局配置请使用scene.setDefault\r\n *  @example\r\n *          默认全局参数:\r\n *              var DEFAULT = {\r\n                    position: [0, 0],\r\n                    font: {\r\n                        size: 16,\r\n                        type: \'微软雅黑\',\r\n                        color: "255,255,255"\r\n                    },\r\n                    jsonId:"",\r\n                    border: {\r\n                        width: 0,\r\n                        radius: 0,//最大160 最小0\r\n                        color: "255,0,0"\r\n                    },\r\n                    zIndex: 200,//层级(10-999)\r\n                    alpha: 1,\r\n                    text: \'no text here\',\r\n                    useType: QTopo.constant.node.TEXT\r\n                };\r\n */\r\nTextNode.prototype.getDefault = getDefault;\r\n//-\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9kZXZlbG9wL2NvcmUvZWxlbWVudC9ub2RlL1RleHQuanM/MzM5ZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixrQkFBa0I7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLGtCQUFrQjtBQUM3QztBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNERBQTREO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixPQUFPO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjM2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEBtb2R1bGUgY29yZVxyXG4gKi9cclxuLyoqXHJcbiAqIOaWh+acrOiKgueCuVxyXG4gKiBAY2xhc3MgIFRleHROb2RlXHJcbiAqIEBjb25zdHJ1Y3RvclxyXG4gKiBAZXh0ZW5kcyBbTl0gTm9kZVxyXG4gKiBAcGFyYW0gW2NvbmZpZ10g6YWN572u5Y+C5pWw77yM5peg5Y+C5YiZ5oyJ5YWo5bGA6YWN572u5Yib5bu6XHJcbiAqL1xyXG52YXIgTm9kZSA9IHJlcXVpcmUoXCIuL05vZGUuanNcIik7XHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG4gICAgY29uc3RydWN0b3I6IFRleHROb2RlLFxyXG4gICAgc2V0RGVmYXVsdDogc2V0RGVmYXVsdCxcclxuICAgIGdldERlZmF1bHQ6IGdldERlZmF1bHRcclxufTtcclxuLy8tXHJcbnZhciBERUZBVUxUID0ge1xyXG4gICAgcG9zaXRpb246IFswLCAwXSxcclxuICAgIGZvbnQ6IHtcclxuICAgICAgICBzaXplOiAxNixcclxuICAgICAgICB0eXBlOiAn5b6u6L2v6ZuF6buRJyxcclxuICAgICAgICBjb2xvcjogXCIyNTUsMjU1LDI1NVwiXHJcbiAgICB9LFxyXG4gICAganNvbklkOlwiXCIsXHJcbiAgICBib3JkZXI6IHtcclxuICAgICAgICB3aWR0aDogMCxcclxuICAgICAgICByYWRpdXM6IDAsLy/mnIDlpKcxNjAg5pyA5bCPMFxyXG4gICAgICAgIGNvbG9yOiBcIjI1NSwwLDBcIlxyXG4gICAgfSxcclxuICAgIHpJbmRleDogMjAwLC8v5bGC57qnKDEwLTk5OSlcclxuICAgIGFscGhhOiAxLFxyXG4gICAgdGV4dDogJ25vIHRleHQgaGVyZScsXHJcbiAgICB1c2VUeXBlOiBRVG9wby5jb25zdGFudC5ub2RlLlRFWFRcclxufTtcclxuZnVuY3Rpb24gc2V0RGVmYXVsdChjb25maWcpIHtcclxuICAgIFFUb3BvLnV0aWwuZXh0ZW5kKERFRkFVTFQsIGNvbmZpZyB8fCB7fSk7XHJcbn1cclxuZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHtcclxuICAgIHJldHVybiBRVG9wby51dGlsLmRlZXBDbG9uZShERUZBVUxUKTtcclxufVxyXG4vLy1cclxuLy8tLS0tXHJcbi8v5pSv5oyB6Ieq5Yqo5o2i6KGMXHJcbnZhciBqdG9wb1Jlc2V0ID0ge1xyXG4gICAgcGFpbnQ6IGZ1bmN0aW9uIChhKSB7XHJcbiAgICAgICAgLy/oh6rliqjmjaLooYxcclxuICAgICAgICB2YXIgdGV4dHMgPSB0aGlzLnRleHQuc3BsaXQoXCJcXG5cIik7XHJcbiAgICAgICAgYS5iZWdpblBhdGgoKTtcclxuICAgICAgICBhLmZvbnQgPSB0aGlzLmZvbnQ7XHJcbiAgICAgICAgdmFyIGZvbnRXaWR0aCA9IGEubWVhc3VyZVRleHQoXCLnlLBcIikud2lkdGg7XHJcbiAgICAgICAgdGhpcy53aWR0aCA9IDA7XHJcbiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB0ZXh0cy5sZW5ndGg7IGorKykge1xyXG4gICAgICAgICAgICB2YXIgd2lkdGggPSBhLm1lYXN1cmVUZXh0KHRleHRzW2pdKS53aWR0aDtcclxuICAgICAgICAgICAgaWYgKHdpZHRoID4gdGhpcy53aWR0aCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy53aWR0aCA9IHdpZHRoO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuaGVpZ2h0ID0gdGV4dHMubGVuZ3RoICogZm9udFdpZHRoO1xyXG4gICAgICAgIGEuc3Ryb2tlU3R5bGUgPSBcInJnYmEoXCIgKyB0aGlzLmZvbnRDb2xvciArIFwiLCBcIiArIHRoaXMuYWxwaGEgKyBcIilcIjtcclxuICAgICAgICBhLmZpbGxTdHlsZSA9IFwicmdiYShcIiArIHRoaXMuZm9udENvbG9yICsgXCIsIFwiICsgdGhpcy5hbHBoYSArIFwiKVwiO1xyXG4gICAgICAgIGlmICh0ZXh0cy5sZW5ndGggPiAxKSB7XHJcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGV4dHMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgIGEuZmlsbFRleHQodGV4dHNbaV0sIC10aGlzLndpZHRoIC8gMiArIDAuMTUgKiBmb250V2lkdGgsIHRoaXMuaGVpZ2h0IC8gMiArIChpIC0gdGV4dHMubGVuZ3RoICsgMC44NSkgKiBmb250V2lkdGgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgYS5maWxsVGV4dCh0ZXh0cywgLXRoaXMud2lkdGggLyAyICsgMC4wMyAqIGZvbnRXaWR0aCwgdGhpcy5oZWlnaHQgLyAyIC0gMC4xNSAqIGZvbnRXaWR0aCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGEuY2xvc2VQYXRoKCk7XHJcbiAgICAgICAgdGhpcy5wYWludEJvcmRlcihhKTtcclxuICAgICAgICB0aGlzLnBhaW50Q3RybChhKTtcclxuICAgICAgICB0aGlzLnBhaW50QWxhcm1UZXh0KGEpO1xyXG4gICAgfVxyXG59O1xyXG4vLy0tLS1cclxuZnVuY3Rpb24gVGV4dE5vZGUoY29uZmlnKSB7XHJcbiAgICB0aGlzLmF0dHIgPSBRVG9wby51dGlsLmV4dGVuZChnZXREZWZhdWx0KCksIGNvbmZpZyB8fCB7fSk7XHJcbiAgICBOb2RlLmNhbGwodGhpcywgbmV3IEpUb3BvLlRleHROb2RlKCkpO1xyXG4gICAgdGhpcy5zZXQgPSBzZXRKVG9wbztcclxuICAgIC8v5Yid5aeL5YyWXHJcbiAgICB0aGlzLnNldCh0aGlzLmF0dHIpO1xyXG4gICAgcmVzZXQodGhpcyk7XHJcbn1cclxuUVRvcG8udXRpbC5pbmhlcml0cyhUZXh0Tm9kZSwgTm9kZSk7XHJcbi8vLVxyXG4vKipcclxuICogIOWFg+e0oOWvueWxnuaAp+eahOe7n+S4gOiuvue9ruWHveaVsO+8jOaOqOiNkOS9v+eUqFxyXG4gKlxyXG4gKiAg5Y+C5pWw5Y+v6K6+572u5LiA6aG55oiW5aSa6aG5LOacquiuvue9rumDqOWIhuWPguiAg+WFqOWxgOmFjee9rlxyXG4gKlxyXG4gKiAg6Iul5Lyg5YWl5Y+C5pWw55qEdGV4dOacqumFjee9ru+8jOWImeaYvuekuuS4uiAgXCJub3Qgc2V0IHRleHRcIlxyXG4gKiAgQG1ldGhvZCBzZXRcclxuICogIEBwYXJhbSBjb25maWdcclxuICogIEBleGFtcGxlXHJcbiAqICAgICAgICAgIOWunumZheWPguaVsOWPguiAg2F0dHLlhoXlsZ7mgKcs5Y+q5Lya5L+u5pS55pyJ5a+55bqUc2V05Ye95pWw55qE5bGe5oCnLOiLpeaWsOWinuWxnuaAp+S4lOa3u+WKoOS6hnNldFhYWOWHveaVsO+8jOS5n+WPr+eUqOatpOWHveaVsOmFjee9rlxyXG4gKiAgICAgICAgICDlpoI6bmFtZSDlr7nlupQgc2V0TmFtZShcIi4uXCIpXHJcbiAqICAgICAgICAgIOWPguaVsOagvOW8j+WmguS4i1xyXG4gKiAgICAgICAgICBjb25maWc9e1xyXG4gKiAgICAgICAgICAgICAgeHg6Li4uLFxyXG4gKiAgICAgICAgICAgICAgeHg6Li4uXHJcbiAqICAgICAgICAgIH1cclxuICovXHJcbmZ1bmN0aW9uIHNldEpUb3BvKGNvbmZpZykge1xyXG4gICAgaWYgKGNvbmZpZykge1xyXG4gICAgICAgIC8v5aSE55CG5LiA6Iis5bGe5oCn55qE6K6+572uXHJcbiAgICAgICAgaWYgKCF0aGlzLmF0dHIudGV4dCYmIWNvbmZpZy50ZXh0KSB7XHJcbiAgICAgICAgICAgIGNvbmZpZy50ZXh0ID0gXCJub3Qgc2V0IHRleHRcIjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5fc2V0QXR0cihjb25maWcpO1xyXG4gICAgfVxyXG59XHJcbi8v6YeN5YaZ5rqQ56CBXHJcbmZ1bmN0aW9uIHJlc2V0KG5vZGUpIHtcclxuICAgIG5vZGUuanRvcG8ucGFpbnQgPSBqdG9wb1Jlc2V0LnBhaW50O1xyXG59XHJcbi8vLVxyXG4vKipcclxuICogIOiOt+WPluWFqOWxgOiuvue9rlxyXG4gKiAgQG1ldGhvZCBnZXREZWZhdWx0XHJcbiAqICBAcmV0dXJuIGNvbmZpZyB7b2JqZWN0fSDlhajlsYDphY3nva7nmoTlhYvpmoblr7nosaFb5Y+q6K+7Xe+8jOS/ruaUueivpeWvueixoeS4jeS8muebtOaOpeS/ruaUueWFqOWxgOmFjee9ru+8jOiLpeimgeS/ruaUueWFqOWxgOmFjee9ruivt+S9v+eUqHNjZW5lLnNldERlZmF1bHRcclxuICogIEBleGFtcGxlXHJcbiAqICAgICAgICAgIOm7mOiupOWFqOWxgOWPguaVsDpcclxuICogICAgICAgICAgICAgIHZhciBERUZBVUxUID0ge1xyXG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBbMCwgMF0sXHJcbiAgICAgICAgICAgICAgICAgICAgZm9udDoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzaXplOiAxNixcclxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ+W+rui9r+mbhem7kScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiBcIjI1NSwyNTUsMjU1XCJcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIGpzb25JZDpcIlwiLFxyXG4gICAgICAgICAgICAgICAgICAgIGJvcmRlcjoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmFkaXVzOiAwLC8v5pyA5aSnMTYwIOacgOWwjzBcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6IFwiMjU1LDAsMFwiXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB6SW5kZXg6IDIwMCwvL+Wxgue6pygxMC05OTkpXHJcbiAgICAgICAgICAgICAgICAgICAgYWxwaGE6IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgdGV4dDogJ25vIHRleHQgaGVyZScsXHJcbiAgICAgICAgICAgICAgICAgICAgdXNlVHlwZTogUVRvcG8uY29uc3RhbnQubm9kZS5URVhUXHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gKi9cclxuVGV4dE5vZGUucHJvdG90eXBlLmdldERlZmF1bHQgPSBnZXREZWZhdWx0O1xyXG4vLy1cclxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9kZXZlbG9wL2NvcmUvZWxlbWVudC9ub2RlL1RleHQuanNcbi8vIG1vZHVsZSBpZCA9IDM2XG4vLyBtb2R1bGUgY2h1bmtzID0gMSJdLCJzb3VyY2VSb290IjoiIn0=')},37:function(module,exports){eval('/**\r\n * @module core\r\n */\r\n/**\r\n * @class Scene\r\n */\r\nvar events = {\r\n    init: function (scene) {\r\n        /**\r\n         * 在图层上双击时\r\n         *\r\n         * 目标是分组,则分组可进行缩放和还原\r\n         *\r\n         * 目标为链路,QTopo.constant.link.DIRECT类型的链路计数大于1时可展开和合并\r\n         * @event dbclick\r\n         */\r\n        scene.on("dbclick", dbClick(scene));\r\n    }\r\n};\r\nfunction dbClick(scene) {\r\n    return function (e, qtopo) {\r\n        toggleGroup(e, qtopo, scene);\r\n        toggleLink(e, qtopo, scene);\r\n    }\r\n}\r\nfunction toggleGroup(e, qtopo, scene) {\r\n    //分组隐藏，显示缩放节点，节点位置根据分组长宽计算\r\n    if (qtopo) {\r\n        if (qtopo.getType() == QTopo.constant.CONTAINER) {\r\n            qtopo.toggle();\r\n        } else if (qtopo.getType() == QTopo.constant.NODE && qtopo.getUseType() == QTopo.constant.CASUAL) {\r\n            //分组显示，隐藏缩放节点，分组新位置根据节点位置和分组长宽计算\r\n            if (qtopo.toggleTo) {\r\n                qtopo.toggleTo.toggle();\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction toggleLink(e, qtopo, scene) {\r\n    if (qtopo && qtopo.getType() == QTopo.constant.LINK && qtopo.attr.expendAble) {\r\n        if (!$.isFunction(qtopo.toggle)) {\r\n            qtopo.openToggle(scene);\r\n        }\r\n        qtopo.toggle();\r\n    }\r\n}\r\nmodule.exports = events;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9kZXZlbG9wL2NvcmUvZXZlbnRzLmpzP2FmNWMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjM3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEBtb2R1bGUgY29yZVxyXG4gKi9cclxuLyoqXHJcbiAqIEBjbGFzcyBTY2VuZVxyXG4gKi9cclxudmFyIGV2ZW50cyA9IHtcclxuICAgIGluaXQ6IGZ1bmN0aW9uIChzY2VuZSkge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIOWcqOWbvuWxguS4iuWPjOWHu+aXtlxyXG4gICAgICAgICAqXHJcbiAgICAgICAgICog55uu5qCH5piv5YiG57uELOWImeWIhue7hOWPr+i/m+ihjOe8qeaUvuWSjOi/mOWOn1xyXG4gICAgICAgICAqXHJcbiAgICAgICAgICog55uu5qCH5Li66ZO+6LevLFFUb3BvLmNvbnN0YW50LmxpbmsuRElSRUNU57G75Z6L55qE6ZO+6Lev6K6h5pWw5aSn5LqOMeaXtuWPr+WxleW8gOWSjOWQiOW5tlxyXG4gICAgICAgICAqIEBldmVudCBkYmNsaWNrXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgc2NlbmUub24oXCJkYmNsaWNrXCIsIGRiQ2xpY2soc2NlbmUpKTtcclxuICAgIH1cclxufTtcclxuZnVuY3Rpb24gZGJDbGljayhzY2VuZSkge1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChlLCBxdG9wbykge1xyXG4gICAgICAgIHRvZ2dsZUdyb3VwKGUsIHF0b3BvLCBzY2VuZSk7XHJcbiAgICAgICAgdG9nZ2xlTGluayhlLCBxdG9wbywgc2NlbmUpO1xyXG4gICAgfVxyXG59XHJcbmZ1bmN0aW9uIHRvZ2dsZUdyb3VwKGUsIHF0b3BvLCBzY2VuZSkge1xyXG4gICAgLy/liIbnu4TpmpDol4/vvIzmmL7npLrnvKnmlL7oioLngrnvvIzoioLngrnkvY3nva7moLnmja7liIbnu4Tplb/lrr3orqHnrpdcclxuICAgIGlmIChxdG9wbykge1xyXG4gICAgICAgIGlmIChxdG9wby5nZXRUeXBlKCkgPT0gUVRvcG8uY29uc3RhbnQuQ09OVEFJTkVSKSB7XHJcbiAgICAgICAgICAgIHF0b3BvLnRvZ2dsZSgpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAocXRvcG8uZ2V0VHlwZSgpID09IFFUb3BvLmNvbnN0YW50Lk5PREUgJiYgcXRvcG8uZ2V0VXNlVHlwZSgpID09IFFUb3BvLmNvbnN0YW50LkNBU1VBTCkge1xyXG4gICAgICAgICAgICAvL+WIhue7hOaYvuekuu+8jOmakOiXj+e8qeaUvuiKgueCue+8jOWIhue7hOaWsOS9jee9ruagueaNruiKgueCueS9jee9ruWSjOWIhue7hOmVv+Wuveiuoeeul1xyXG4gICAgICAgICAgICBpZiAocXRvcG8udG9nZ2xlVG8pIHtcclxuICAgICAgICAgICAgICAgIHF0b3BvLnRvZ2dsZVRvLnRvZ2dsZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbmZ1bmN0aW9uIHRvZ2dsZUxpbmsoZSwgcXRvcG8sIHNjZW5lKSB7XHJcbiAgICBpZiAocXRvcG8gJiYgcXRvcG8uZ2V0VHlwZSgpID09IFFUb3BvLmNvbnN0YW50LkxJTksgJiYgcXRvcG8uYXR0ci5leHBlbmRBYmxlKSB7XHJcbiAgICAgICAgaWYgKCEkLmlzRnVuY3Rpb24ocXRvcG8udG9nZ2xlKSkge1xyXG4gICAgICAgICAgICBxdG9wby5vcGVuVG9nZ2xlKHNjZW5lKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcXRvcG8udG9nZ2xlKCk7XHJcbiAgICB9XHJcbn1cclxubW9kdWxlLmV4cG9ydHMgPSBldmVudHM7XHJcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZGV2ZWxvcC9jb3JlL2V2ZW50cy5qc1xuLy8gbW9kdWxlIGlkID0gMzdcbi8vIG1vZHVsZSBjaHVua3MgPSAxIl0sInNvdXJjZVJvb3QiOiIifQ==')},74:function(module,exports,__webpack_require__){eval('/**\r\n * @module QTopo\r\n */\r\n__webpack_require__(10);\r\nif (typeof jQuery == "undefined") {\r\n    throw new Error("need jquery");\r\n}\r\n/**\r\n * 主入口,window.QTopo\r\n * @class QTopo\r\n * @static\r\n */\r\nvar QTopo = {\r\n    /**\r\n     * 存放当前页面中所初始化的topo实例\r\n     * @property instance {array}\r\n     */\r\n    instance: [],\r\n    /**\r\n     * 一系列工具函数,详细内容参考 QTopo.util\r\n     * @property util {object}\r\n     */\r\n    util: __webpack_require__(11),\r\n    constant: __webpack_require__(8),\r\n    /**\r\n     * 可开启或屏蔽控制台日志,对应用QTopo.util.info以及QTopo.util.error函数输出的日志\r\n     * @property log {object}\r\n     * @param error {boolean} 默认为true,开启\r\n     * @param info {boolean} 默认为true,开启\r\n     */\r\n    log: {\r\n        error: true,\r\n        info: true\r\n    }\r\n};\r\nwindow.QTopo = QTopo;\r\nvar Scene = __webpack_require__(9);\r\n/**\r\n * 初始化Qtopo实例,创建并将其保存在QTopo.instance数组内,实例api参考QTopo.instance\r\n *  @method init\r\n *  @param dom {document} 指定初始化所在的dom,若是数组则自动取第一个\r\n *  @param [config] {object} 配置参数,配置内容为图层scene配置(参考scene配置)\r\n *  @returns [instance] QTopo实例对象，QTopo.instance\r\n *  @example\r\n *      IPOSS = QTopo.init(\r\n *           document.getElementsByClassName("topo_base")[0],\r\n *          {\r\n *              backgroundColor: "#06243e",//基本属性配置背景色\r\n *              path:[] //自定义属性,插入到图层对象scene的额外属性中\r\n *          }\r\n *      );\r\n */\r\nQTopo.init = function (dom, config) {\r\n    dom = dom instanceof Array ? dom[0] : dom;\r\n    var canvas = initCanvas(dom, $(dom).width(), $(dom).height());\r\n    /**\r\n     * QTopo初始化的topo实例,QTopo.init后的返回对象，或是QTopo.instance数组内保存的对象\r\n     * @class QTopo.instance\r\n     * @static\r\n     */\r\n    var QtopoInstance = {\r\n        /**\r\n         * topo实例化的图层对象\r\n         * @property scene {object}\r\n         */\r\n        scene: new Scene(canvas, config),\r\n        setOption: setOption,\r\n        /**\r\n         * topo实例所在dom\r\n         * @property document {document}\r\n         */\r\n        document: dom,\r\n        resize: resize(dom, canvas),\r\n        toJson: toJson\r\n    };\r\n    this.instance.push(QtopoInstance);\r\n    return QtopoInstance;\r\n};\r\nmodule.exports = QTopo;\r\n//---------------------\r\n/**\r\n * 图层绘制主函数\r\n *\r\n * 可以随时使用setOption生成一个或多个元素,或配置告警，也可以一次性全局配置\r\n *\r\n * 相关的全局样式请参考各元素自身的attr属性,或通过 元素的getDefault() / scene.getDefault(type)来获取对应元素的全局样式\r\n *\r\n * 前端绘图过程可以用工具栏和右键菜单绘制完成后,配合实例的toJson函数取得图层数据,(实例通过QTopo.init初始化且保存在QTopo.instance数组内)\r\n *\r\n * 直接将返回对象的option属性传入setOption可复制绘图\r\n *\r\n * 每个元素配置的data数组内成员的属性可以是样式也可以是额外属性,自适应取值配置，过滤的额外属性自动分配到元素的extra属性中保存,可以通过node.val(\'id\')的形式获取\r\n *\r\n * 和样式重名的额外属性可以放在extra中，extra中的属性将默认全部覆盖到元素的extra属性内\r\n *\r\n *  @method setOption\r\n *  @param option {object} 配置属性,参数可以是instance.toJson().option对象\r\n *      @param [option.node] {object} 创建node元素\r\n *          @param [option.node.style] {object} 设定全局的节点样式，未配置样式的节点会采用默认样式\r\n *          @param option.node.data {array} 细则看示例\r\n *      @param [option.container] {object} 创建container元素\r\n *          @param [option.container.style] {object} 设定全局的分组样式，未配置样式的分组会采用默认样式\r\n *          @param option.container.findChildren {string} 通知分组通过什么属性去查找成员\r\n *          @param option.container.data {array} 细则看示例\r\n *      @param [option.link] {object} 创建link元素\r\n *          @param [option.link.style] {object} 设定全局的分组样式，未配置样式的分组会采用默认样式\r\n *          @param option.link.path {array} 通知链接通过什么属性去查找起始点和终点,数组参数可以为1个或2个，当设置为2个时，通过不同属性查找起始点和终点\r\n *          @param option.link.data {array} 细则看示例\r\n *      @param [option.line] {object} 创建line元素\r\n *      @param [option.alarm] {object} 配置告警\r\n *          @param option.alarm.node {string} 通知告警模块如何查找需要设定告警的节点,现只支持节点上的告警\r\n *          @param [option.alarm.animate] {object} 配置告警动画,包含2个属性 ：\r\n *                     1. time:{number}设定间隔时间,单位为毫秒 ,\r\n *                     2. callBack:{function}回调函数,参数为当前处理告警的节点\r\n *          @param option.alarm.data {array} 告警设置,包含3个属性 ：\r\n *                     1. color {string}:告警展示的颜色,255,255,255/#ffffff ,\r\n *                     2. node {string}:对应告警属性下的node为键,此处为值来查找对应的节点 ,\r\n *                     3. [text] {string}:告警显示的文字信息，可不设或为空 ,\r\n *  @param [clear=false] {boolean} 是否清空图层，默认不清除\r\n *  @returns instance\r\n *  QTopo实例自身,用以链式操作\r\n *  @example\r\n *       topo.setOption({\r\n                node: {\r\n                    style:{//全局样式\r\n                        size:[60,60],\r\n                        image: "img/node.png"\r\n                    },\r\n                    data: [{\r\n                            position:[-200,-200],\r\n                            size:[100,100],\r\n                            id:1111,\r\n                            name:"测试1\\nhhhh" //\\n为名称换行\r\n                           },\r\n                           {\r\n                            position:[0,0],\r\n                            size:[100,100],\r\n                            id:2222,\r\n                            name:"测试2\\nhhhh" //\r\n                           }]\r\n                },\r\n                container: {\r\n                    style:{\r\n                        color:"#165782",\r\n                        alpha:0.3,\r\n                        border:{\r\n                            radius:10\r\n                        },\r\n                        namePosition:"top"\r\n                    },\r\n                    findChildren: "id",//这个决定了 每个分组根据data中的数据查找该加入的子,该属性应在node中的value中有配置\r\n                    data: [{\r\n                            size:[400,400],\r\n                            position:[0,0],\r\n                            layout:{\r\n                                type:"fixed"//布局为固定\r\n                            },\r\n                            children: childrenData,\r\n                            toggle:{ //分组切换的节点样式\r\n                                image: "img/node.png"\r\n                            }\r\n                          //  findChildren: "id", 当然也可以针对某个分组单独设置其查找子元素的标记\r\n                            children:["1111","2222"]//findChildren定义为id ，此处就该是对应元素的id属性\r\n                        }]\r\n                },\r\n                link: {\r\n                    style:{\r\n                        color:"#00FFFF"\r\n                    },\r\n                    path: ["id"],   //决定了线的起始节点由什么属性决定,数组长度为1则起始节点按统一属性查找，可分别设不同，0为起始节点属性.1为终点,该属性应在node中的value中有配置\r\n                    data: [{\r\n                                start:1111,//path指明起始点和终点都是找id属性，那此处就是起点的id\r\n                                end:2222,   //终点的id\r\n                                width:10,   //样式配置，详细参考对应元素的属性\r\n                                radius:25,\r\n                                arrow:{\r\n                                    end:true,\r\n                                    start:true,\r\n                                    size:10\r\n                                },\r\n                                extra:{\r\n                                    type:1  //额外属性，因与下述链路类型的名称一致，移直extra内赋值到生成的链路extra上,可通过link.val(\'type\')取到\r\n                                },\r\n                                type:QTopo.constant.link.FLEXIONAL //建立的链路类型\r\n                            }]\r\n                },\r\n                alarm: {\r\n                    node: "alarmId",    //指明节点上对应的查找属性,该属性应在node中的value中有配置,暂只支持节点告警\r\n                    data: [],\r\n                    animate:{   //可设置动画，每个点亮之间延迟多少毫秒，回调函数中能获取到点亮的节点信息\r\n                        time:1000,\r\n                        callBack:function(node){\r\n                            console.info(node)\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n */\r\nfunction setOption(option, clear) {\r\n    option = option || {};\r\n    QTopo.util.info("start set topo: ", option);\r\n    var scene = this.scene;\r\n    if (clear) {\r\n        scene.clear();\r\n    }\r\n    createNode(scene, option.node);\r\n    createContainer(scene, option.container);\r\n    createLink(scene, option.link);\r\n    createLine(scene, option.line);\r\n    drawAlarm(scene, option.alarm);\r\n    QTopo.util.info("set topo complete: ", {\r\n        node: scene.children.node.length,\r\n        link: scene.children.link.length,\r\n        container: scene.children.container.length,\r\n        line: scene.children.line.length\r\n    });\r\n    return this;\r\n}\r\n/**\r\n * 实例自适应大小\r\n *  @method resize\r\n *  @returns instance QTopo实例自身,用以链式操作\r\n *  @example\r\n *      $(window).resize(function () {\r\n *          IPOSS.resize();\r\n *      });\r\n */\r\nfunction resize(dom, canvas) {\r\n    return function () {\r\n        canvas.setAttribute(\'width\', $(dom).width());\r\n        canvas.setAttribute(\'height\', $(dom).height());\r\n        return this;\r\n    }\r\n}\r\n/**\r\n * 当前图层数据转化为json结构\r\n *  @method toJson\r\n *  @returns {object}\r\n *  @example\r\n        var IPOSS=QTopo.instance[0];\r\n        var json=IPOSS.toJson();    //json={\r\n                                    //         init:图层参数,scene对象的参数配置,\r\n                                    //         option:图层内所有对象的属性提取，可直接用于setOption还原,其中jsonId用做每个元素的唯一标识\r\n                                    //      }\r\n        IPOSS.setOption(json.option,true);\r\n */\r\nfunction toJson() {\r\n    var data = this.scene.children;\r\n    var serialized = {\r\n        init: this.scene.toJson(),\r\n        option: {\r\n            node: {\r\n                data: []\r\n            },\r\n            link: {\r\n                data: []\r\n            },\r\n            container: {\r\n                data: []\r\n            },\r\n            line: {\r\n                data: []\r\n            }\r\n        }\r\n    };\r\n    $.each(data, function (name, elements) {\r\n        if ($.isArray(elements)) {\r\n            elements.map(function (element) {\r\n                if (serialized.option[name]) {\r\n                    serialized.option[name].data.push(element.toJson());\r\n                }\r\n            });\r\n        }\r\n    });\r\n    return serialized;\r\n}\r\nfunction initCanvas(dom, width, height) {\r\n    if (width <= 0 || height <= 0) {\r\n        throw new Error("The dom is not exist /not config width and height!");\r\n    }\r\n    dom.style.position = \'relative\';\r\n    dom.style.overflow = \'hidden\';\r\n    var canvas = document.createElement(\'canvas\');\r\n    dom.appendChild(canvas);\r\n    canvas.setAttribute(\'width\', width);\r\n    canvas.setAttribute(\'height\', height);\r\n    canvas.style.position = "absolute";\r\n    canvas.style.top = 0;\r\n    canvas.style.left = 0;\r\n    canvas.style[\'user-select\'] = \'none\';\r\n    canvas.style[\'-webkit-tap-highlight-color\'] = \'rgba(0, 0, 0, 0)\';\r\n    return canvas;\r\n}\r\n\r\nfunction createNode(scene, config) {\r\n    if (config) {\r\n        setDefaults(scene, QTopo.constant.node, config.style);\r\n        if ($.isArray(config.data)) {\r\n            $.each(config.data, function (i, item) {\r\n                var node = scene.createNode(item);\r\n                //额外属性添加\r\n                setExtra(node, item);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n//排除临时元素\r\nfunction notCasual(arr) {\r\n    if (arr.length == 1) {\r\n        return arr[0];\r\n    } else {\r\n        for (var i = 0; i < arr.length; i++) {\r\n            if (arr[i].getUseType() != QTopo.constant.CASUAL) {\r\n                arr = arr[i];\r\n                return arr;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction createContainer(scene, config) {\r\n    if (config) {\r\n        setDefaults(scene, QTopo.constant.container, config.style);\r\n        makeContainer(scene, config);\r\n    }\r\n}\r\nfunction makeContainer(scene, config) {\r\n    //搜索子的总标记\r\n    var findChild;\r\n    if (config.findChildren) {\r\n        findChild = config.findChildren;\r\n    }\r\n    if ($.isArray(config.data)) {\r\n        //开始构造分组\r\n        $.each(config.data, function (i, item) {\r\n            //无论是否有子元素，分组先创造出来\r\n            var container = scene.createContainer(item);\r\n            //额外属性添加\r\n            setExtra(container, item);\r\n            //确定查找子元素的标记\r\n            var findChild_exact = findChild;\r\n            if (item.findChildren) {\r\n                findChild_exact = item.findChildren;\r\n            }\r\n            makeChildren(scene, container, item, findChild_exact);\r\n        });\r\n    }\r\n}\r\nfunction makeChildren(scene, container, config, findChild) {\r\n    //过滤搜索子类的标记\r\n    findChild = filterTag(findChild);\r\n    if ($.isArray(config.children)) {\r\n        var errorInfo = [];\r\n        $.each(config.children, function (j, children) {\r\n            var child = scene.find(findChild + "=" + children);\r\n            if (child && child.length > 0) {\r\n                $.each(child, function (m, one) {\r\n                    if (one.getUseType() != QTopo.constant.CASUAL) {\r\n                        container.add(one);\r\n                    }\r\n                });\r\n            } else {\r\n                errorInfo.push({\r\n                    index: j,\r\n                    search: findChild + "=" + children\r\n                });\r\n            }\r\n        });\r\n        if (errorInfo.length > 0) {\r\n            QTopo.util.error("some child not found : ", errorInfo);\r\n        }\r\n    }\r\n}\r\nfunction filterTag(tag) {\r\n    if (!tag) {\r\n        tag = \'jsonId\'\r\n    }\r\n    return tag;\r\n}\r\n\r\nfunction createLink(scene, config) {\r\n    if (config) {\r\n        var path = config.path;\r\n        var findStart;\r\n        var findEnd;\r\n        if ($.isArray(path) && path.length > 0) {\r\n            //path为数组，0为起点条件1为终点条件,确定搜索条件,起始点条件可不同\r\n            if (path.length == 1) {\r\n                findEnd = path[0];\r\n                findStart = findEnd;\r\n            } else {\r\n                findStart = path[0];\r\n                findEnd = path[1];\r\n            }\r\n        } else {\r\n            findStart = filterTag(findStart);\r\n            findEnd = filterTag(findEnd);\r\n        }\r\n        //设置默认属性\r\n        setDefaults(scene, QTopo.constant.link, config.style);\r\n        //开始创建\r\n        makeLink(scene, config, findStart, findEnd);\r\n    }\r\n}\r\nfunction makeLink(scene, config, findStart, findEnd) {\r\n    if ($.isArray(config.data)) {\r\n        var errorInfo = [];\r\n        $.each(config.data, function (i, item) {\r\n            if (item) {\r\n                var link;\r\n                //根据确定的条件进行搜索\r\n                var start = notCasual(scene.find(findStart + "=" + item.start));\r\n                var end = notCasual(scene.find(findEnd + "=" + item.end));\r\n                if (start && end) {\r\n                    item.start = start;\r\n                    item.end = end;\r\n                    link = scene.addLink(item);\r\n                    //额外属性添加\r\n                    setExtra(link, item);\r\n                } else {\r\n                    var errorDate = {\r\n                        index: i,\r\n                        data: item\r\n                    };\r\n                    if (!start) {\r\n                        errorDate.missStart = item.start;\r\n                    }\r\n                    if (!end) {\r\n                        errorDate.missEnd = item.end;\r\n                    }\r\n                    errorInfo.push(errorDate);\r\n                }\r\n            } else {\r\n                errorInfo.push({\r\n                    index: i,\r\n                    info: "undefined data"\r\n                });\r\n            }\r\n        });\r\n        if (errorInfo.length > 0) {\r\n            QTopo.util.error("some link invalid : ", errorInfo);\r\n        }\r\n    }\r\n}\r\n//根据配置创建线段\r\nfunction createLine(scene, config) {\r\n    if (config) {\r\n        //设置默认属性\r\n        //设置默认属性\r\n        setDefaults(scene, QTopo.constant.line, config.style);\r\n        //开始创建\r\n        if ($.isArray(config.data)) {\r\n            $.each(config.data, function (i, v) {\r\n                var line = scene.createLine(v);\r\n                //额外属性添加\r\n                setExtra(line, v);\r\n            });\r\n        } else {\r\n            QTopo.util.error("can not draw line,need config \'path\' and \'path\' is Array and not empty,path\'s element need config x y, path used to find start and end");\r\n        }\r\n    }\r\n}\r\n\r\nfunction drawAlarm(scene, config) {\r\n    if (config) {\r\n        if ($.isArray(config.data) && config.node) {\r\n            var alarmData = config.data;\r\n            var alarmNodes = makeAlarmData(scene, alarmData, config);\r\n            QTopo.util.info("告警绘制 :", {\r\n                config: alarmData.length,\r\n                success: alarmNodes.length\r\n            });\r\n            if (config.animate) {\r\n                alarmAnimate(config.animate, alarmNodes);\r\n            } else {\r\n                $.each(alarmNodes, function (i, v) {\r\n                    v.node.set({\r\n                        alarm: v.alarm\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction makeAlarmData(scene, alarmData, config) {\r\n    var alarms = [];\r\n    $.each(alarmData, function (k, v) {\r\n        var node = notCasual(scene.find(config.node + "=" + v["node"], "node"));\r\n        if (node) {\r\n            alarms.push({\r\n                node: node,\r\n                alarm: {\r\n                    show: typeof v.show == "boolean" ? v.show : true,\r\n                    text: v.text,\r\n                    color: v.color,\r\n                    font: v.font\r\n                }\r\n            });\r\n        }\r\n    });\r\n    return alarms;\r\n}\r\nvar animateRuning;\r\nfunction alarmAnimate(animate, alarmNodes) {\r\n    if (animate) {\r\n        if ($.isNumeric(animate.time)) {\r\n            clearAnimat();\r\n            QTopo.util.info("启用告警动画");\r\n            animateRuning = setInterval(function () {\r\n                if (alarmNodes.length > 0) {\r\n                    var data = alarmNodes.pop();\r\n                    data.node.set({\r\n                        alarm: data.alarm\r\n                    });\r\n                    if ($.isFunction(animate.callBack)) {\r\n                        animate.callBack(data.node);\r\n                    }\r\n                } else {\r\n                    QTopo.util.info("告警动画结束");\r\n                    clearAnimat();\r\n                }\r\n            }, parseInt(animate.time));\r\n        }\r\n    }\r\n}\r\nfunction clearAnimat() {\r\n    if (animateRuning) {\r\n        clearInterval(animateRuning);\r\n        animateRuning = "";\r\n    }\r\n}\r\nfunction setExtra(element, data) {\r\n    if (data) {\r\n        $.each(data, function (key, value) {\r\n            if (filterConfig(element, key) && ["start", "end", "children", "toggle", "type", "extra"].indexOf(key) < 0) {\r\n                element.extra[key] = value;\r\n            }\r\n        });\r\n        if (data.extra) {\r\n            $.each(data.extra, function (key, value) {\r\n                if (value) {\r\n                    element.extra[key] = value;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction filterConfig(element, key) {\r\n    return element && typeof element.attr[key] == \'undefined\';\r\n}\r\nfunction setDefaults(scene, typeArr, style) {\r\n    if (style) {\r\n        $.each(typeArr, function (i, types) {\r\n            scene.setDefault(types, style);\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,');
},8:function(module,exports){eval('/**\r\n * @module QTopo\r\n */\r\n/**\r\n * @class QTopo\r\n * @static\r\n */\r\n/**\r\n * 定义的通用常量,一般用getType()来区分元素基本类型,getUseType()区分元素具体类型\r\n * @property constant\r\n * @type Object\r\n * @param SCENE {string}\r\n * @param CONTAINER {string}\r\n * @param LINK {string}\r\n * @param LINE {string}\r\n * @param NODE {string}\r\n * @param CASUAL {string} 临时元素，用以元素变换收缩等操作的过渡元素,一般不对其做操作\r\n * @param node.IMAGE {string}\r\n * @param node.TEXT {string}\r\n * @param container.GROUP {string}\r\n * @param link.CURVE {string}\r\n * @param link.DIRECT {string}\r\n * @param link.FLEXIONAL {string}\r\n * @param link.FOLD {string}\r\n * @param line.DIRECT {string}\r\n * @param mode.NORMAL {string}\r\n * @param mode.EDIT {string}\r\n * @param mode.DRAG {string}\r\n * @param mode.SELECT {string}\r\n * @example\r\n *      if(node.getType()==QTopo.constant.NODE){.....}\r\n *      if(node.getUseType()!=QTopo.constant.CASUAL){.....}\r\n *      if(node.getUseType()==QTopo.constant.node.IMAGE){.....}\r\n */\r\nmodule.exports = {\r\n    SCENE:\'10\',\r\n    CONTAINER:"100",\r\n    LINK:"1000",\r\n    LINE:"1100",\r\n    NODE:\'10000\',\r\n    CASUAL:"临时工",//\r\n    node:{\r\n        IMAGE:"10010",\r\n        TEXT:"10001"\r\n    },\r\n    container:{\r\n        GROUP:"101"\r\n    },\r\n    link:{\r\n        CURVE:"1001",\r\n        DIRECT:"1002",\r\n        FLEXIONAL:"1003",\r\n        FOLD:"1004"\r\n    },\r\n    line:{\r\n        DIRECT:"1101"\r\n    },\r\n    mode:{\r\n        NORMAL:"normal",\r\n        EDIT:"edit",\r\n        DRAG:"drag",\r\n        SELECT:"select"\r\n    }\r\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9kZXZlbG9wL2NvbnN0YW50LmpzPzhiZDkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixxQkFBcUI7QUFDckIsZ0JBQWdCO0FBQ2hCLGdCQUFnQjtBQUNoQixnQkFBZ0I7QUFDaEIsa0JBQWtCLE9BQU87QUFDekIsc0JBQXNCO0FBQ3RCLHFCQUFxQjtBQUNyQiwyQkFBMkI7QUFDM0Isc0JBQXNCO0FBQ3RCLHVCQUF1QjtBQUN2QiwwQkFBMEI7QUFDMUIscUJBQXFCO0FBQ3JCLHVCQUF1QjtBQUN2Qix1QkFBdUI7QUFDdkIscUJBQXFCO0FBQ3JCLHFCQUFxQjtBQUNyQix1QkFBdUI7QUFDdkI7QUFDQSxnREFBZ0Q7QUFDaEQscURBQXFEO0FBQ3JELHlEQUF5RDtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQG1vZHVsZSBRVG9wb1xyXG4gKi9cclxuLyoqXHJcbiAqIEBjbGFzcyBRVG9wb1xyXG4gKiBAc3RhdGljXHJcbiAqL1xyXG4vKipcclxuICog5a6a5LmJ55qE6YCa55So5bi46YePLOS4gOiIrOeUqGdldFR5cGUoKeadpeWMuuWIhuWFg+e0oOWfuuacrOexu+WeiyxnZXRVc2VUeXBlKCnljLrliIblhYPntKDlhbfkvZPnsbvlnotcclxuICogQHByb3BlcnR5IGNvbnN0YW50XHJcbiAqIEB0eXBlIE9iamVjdFxyXG4gKiBAcGFyYW0gU0NFTkUge3N0cmluZ31cclxuICogQHBhcmFtIENPTlRBSU5FUiB7c3RyaW5nfVxyXG4gKiBAcGFyYW0gTElOSyB7c3RyaW5nfVxyXG4gKiBAcGFyYW0gTElORSB7c3RyaW5nfVxyXG4gKiBAcGFyYW0gTk9ERSB7c3RyaW5nfVxyXG4gKiBAcGFyYW0gQ0FTVUFMIHtzdHJpbmd9IOS4tOaXtuWFg+e0oO+8jOeUqOS7peWFg+e0oOWPmOaNouaUtue8qeetieaTjeS9nOeahOi/h+a4oeWFg+e0oCzkuIDoiKzkuI3lr7nlhbblgZrmk43kvZxcclxuICogQHBhcmFtIG5vZGUuSU1BR0Uge3N0cmluZ31cclxuICogQHBhcmFtIG5vZGUuVEVYVCB7c3RyaW5nfVxyXG4gKiBAcGFyYW0gY29udGFpbmVyLkdST1VQIHtzdHJpbmd9XHJcbiAqIEBwYXJhbSBsaW5rLkNVUlZFIHtzdHJpbmd9XHJcbiAqIEBwYXJhbSBsaW5rLkRJUkVDVCB7c3RyaW5nfVxyXG4gKiBAcGFyYW0gbGluay5GTEVYSU9OQUwge3N0cmluZ31cclxuICogQHBhcmFtIGxpbmsuRk9MRCB7c3RyaW5nfVxyXG4gKiBAcGFyYW0gbGluZS5ESVJFQ1Qge3N0cmluZ31cclxuICogQHBhcmFtIG1vZGUuTk9STUFMIHtzdHJpbmd9XHJcbiAqIEBwYXJhbSBtb2RlLkVESVQge3N0cmluZ31cclxuICogQHBhcmFtIG1vZGUuRFJBRyB7c3RyaW5nfVxyXG4gKiBAcGFyYW0gbW9kZS5TRUxFQ1Qge3N0cmluZ31cclxuICogQGV4YW1wbGVcclxuICogICAgICBpZihub2RlLmdldFR5cGUoKT09UVRvcG8uY29uc3RhbnQuTk9ERSl7Li4uLi59XHJcbiAqICAgICAgaWYobm9kZS5nZXRVc2VUeXBlKCkhPVFUb3BvLmNvbnN0YW50LkNBU1VBTCl7Li4uLi59XHJcbiAqICAgICAgaWYobm9kZS5nZXRVc2VUeXBlKCk9PVFUb3BvLmNvbnN0YW50Lm5vZGUuSU1BR0Upey4uLi4ufVxyXG4gKi9cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgICBTQ0VORTonMTAnLFxyXG4gICAgQ09OVEFJTkVSOlwiMTAwXCIsXHJcbiAgICBMSU5LOlwiMTAwMFwiLFxyXG4gICAgTElORTpcIjExMDBcIixcclxuICAgIE5PREU6JzEwMDAwJyxcclxuICAgIENBU1VBTDpcIuS4tOaXtuW3pVwiLC8vXHJcbiAgICBub2RlOntcclxuICAgICAgICBJTUFHRTpcIjEwMDEwXCIsXHJcbiAgICAgICAgVEVYVDpcIjEwMDAxXCJcclxuICAgIH0sXHJcbiAgICBjb250YWluZXI6e1xyXG4gICAgICAgIEdST1VQOlwiMTAxXCJcclxuICAgIH0sXHJcbiAgICBsaW5rOntcclxuICAgICAgICBDVVJWRTpcIjEwMDFcIixcclxuICAgICAgICBESVJFQ1Q6XCIxMDAyXCIsXHJcbiAgICAgICAgRkxFWElPTkFMOlwiMTAwM1wiLFxyXG4gICAgICAgIEZPTEQ6XCIxMDA0XCJcclxuICAgIH0sXHJcbiAgICBsaW5lOntcclxuICAgICAgICBESVJFQ1Q6XCIxMTAxXCJcclxuICAgIH0sXHJcbiAgICBtb2RlOntcclxuICAgICAgICBOT1JNQUw6XCJub3JtYWxcIixcclxuICAgICAgICBFRElUOlwiZWRpdFwiLFxyXG4gICAgICAgIERSQUc6XCJkcmFnXCIsXHJcbiAgICAgICAgU0VMRUNUOlwic2VsZWN0XCJcclxuICAgIH1cclxufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL2RldmVsb3AvY29uc3RhbnQuanNcbi8vIG1vZHVsZSBpZCA9IDhcbi8vIG1vZHVsZSBjaHVua3MgPSAxIl0sInNvdXJjZVJvb3QiOiIifQ==')},9:function(module,exports,__webpack_require__){eval('/**\r\n * @module core\r\n */\r\n//-\r\nvar Node = {\r\n    Image: __webpack_require__(35),\r\n    Text: __webpack_require__(36)\r\n};\r\nvar Link = {\r\n    Curve: __webpack_require__(31),\r\n    Direct: __webpack_require__(32),\r\n    Flexional: __webpack_require__(33),\r\n    Fold: __webpack_require__(34)\r\n};\r\n\r\nvar Line = {\r\n    Direct: __webpack_require__(29)\r\n};\r\nvar Container = {\r\n    Group: __webpack_require__(28)\r\n};\r\nvar events = __webpack_require__(37);\r\nmodule.exports = Scene;\r\n//-\r\n//画布对象\r\nvar defaults = function () {\r\n    return {\r\n        mode: QTopo.constant.mode.NORMAL,\r\n        backgroundImage: ""\r\n    };\r\n};\r\n/**\r\n * 图层对象\r\n * @class Scene\r\n * @constructor\r\n * @param canvas 绘图所在的canvas标签对象\r\n * @param config 图层的基本设置,参见attr属性\r\n */\r\nfunction Scene(canvas, config) {\r\n    var self = this;\r\n    /**\r\n     * 核心Jtopo对象\r\n     * @property jtopo {Object}\r\n     */\r\n    self.jtopo = new JTopo.Scene();\r\n    self.jtopo.qtopo = self;\r\n    /**\r\n     * 图层中有效记录的元素\r\n     * @property children {object}\r\n     * @param node {array}\r\n     * @param link {array}\r\n     * @param container {array}\r\n     * @param line {array}\r\n     */\r\n    self.children = {\r\n        node: [],\r\n        link: [],\r\n        container: [],\r\n        line: []\r\n    };\r\n    /**\r\n     * 图层的主要属性\r\n     * @property attr {objcet}\r\n     * @param [mode=QTopo.constant.mode.NORMAL],\r\n     * @param [backgroundImage=\'\'],\r\n     * @param [backgroundColor=\'\'],\r\n     */\r\n    self.attr = defaults();\r\n    /**\r\n     * 图层的额外属性\r\n     * @property extra {objcet}\r\n     */\r\n    self.extra = config.extra || {};\r\n    new JTopo.Stage(canvas).add(self.jtopo);\r\n    events.init(self);\r\n    //延时执行\r\n    setTimeout(function () {\r\n        if (config) {\r\n            if (config.backgroundImage) {\r\n                self.setBackgroundImage(config.backgroundImage);\r\n            }\r\n            if (config.backgroundColor) {\r\n                self.setBackgroundColor(config.backgroundColor);\r\n            }\r\n            if (config.mode) {\r\n                self.setMode(config.mode);\r\n            }\r\n        }\r\n    });\r\n}\r\n//-\r\n/**\r\n *  获取图层的基本属性\r\n *  @method get\r\n *  @param key {string} 要获取的属性名\r\n *  @returns {string|object} 属性值\r\n *  @example\r\n *          scene.get(\'mode\')       //"normal"\r\n */\r\nScene.prototype.get = function (key) {\r\n    return this.attr[key];\r\n};\r\n/**\r\n *  获取图层的属性,或添加/修改额外属性\r\n *  @method val\r\n *  @param key {string}\r\n *\r\n *  要操作的属性名,与get不同，该函数会在整个对象中查找与key匹配的属性\r\n *  无论是额外属性还是基本属性又或是Scene.xx属性，只要匹配成功即返回.\r\n *  优先级为 额外属性>基本属性>Scene.xx属性\r\n *\r\n *  用该函数赋予额外属性时，可以直接传入一个对象作为参数\r\n *  该函数会遍历该参数对象将其内容全部覆盖到额外属性上\r\n *\r\n *  @param [value] {string|object} 属性值，若无则函数为获取属性，若有则为修改/添加属性\r\n *  @returns {string|object|void}\r\n *  @example\r\n *\r\n *       赋值操作   1. scene.val(\'pid\',\'12345\')\r\n *                  2. scene.val({\r\n *                          pid:"12345",\r\n *                          path:[]\r\n *                      })\r\n *       取属性操作 scene.val(\'pid\')       //"12345"\r\n *                  scene.val(\'position\') //undefined\r\n *                  scene.val(\'path\')       //[]\r\n *                  scene.val(\'mode\')       //"normal"\r\n */\r\nScene.prototype.val = function (key, value) {\r\n    if (QTopo.util.getClass(key) == \'Object\') {\r\n        var self = this;\r\n        $.each(key, function (name, value) {\r\n            self.extra[name] = value;\r\n        })\r\n    } else {\r\n        if (!value) {\r\n            var result;\r\n            if (this.extra[key]) {\r\n                result = this.extra[key];\r\n            } else if (this.attr[key]) {\r\n                result = this.attr[key];\r\n            } else {\r\n                result = this[key];\r\n            }\r\n            return result;\r\n        } else {\r\n            this.extra[key] = value;\r\n        }\r\n    }\r\n};\r\n/**\r\n *  配置图层中元素全局样式\r\n *  @method setDefault\r\n *  @param type {string} 要配置的元素类型 例：QTopo.constant.node.IMAGE\r\n *  @param config {object} 样式属性，可参考对应的元素attr属性\r\n */\r\nScene.prototype.setDefault = function (type, config) {\r\n    if (config) {\r\n        var constant = QTopo.constant;\r\n        switch (type) {\r\n            case constant.node.IMAGE:\r\n                Node.Image.setDefault(config);\r\n                break;\r\n            case constant.node.TEXT:\r\n                Node.Text.setDefault(config);\r\n                break;\r\n            case constant.link.DIRECT:\r\n                Link.Direct.setDefault(config);\r\n                break;\r\n            case constant.link.CURVE:\r\n                Link.Curve.setDefault(config);\r\n                break;\r\n            case constant.link.FLEXIONAL:\r\n                Link.Flexional.setDefault(config);\r\n                break;\r\n            case constant.link.FOLD:\r\n                Link.Fold.setDefault(config);\r\n                break;\r\n            case constant.line.DIRECT:\r\n                Line.Direct.setDefault(config);\r\n                break;\r\n            case constant.container.GROUP:\r\n                Container.Group.setDefault(config);\r\n                break;\r\n        }\r\n    }\r\n};\r\n/**\r\n *  获取图层中元素全局样式\r\n *  @method getDefault\r\n *  @param type {string} 要配置的元素类型 例：QTopo.constant.node.IMAGE\r\n *  @return {object} 样式属性，可参考对应的元素attr属性\r\n */\r\nScene.prototype.getDefault = function (type) {\r\n    if (type) {\r\n        var result;\r\n        var constant = QTopo.constant;\r\n        switch (type) {\r\n            case constant.node.IMAGE:\r\n                result = Node.Image.getDefault();\r\n                break;\r\n            case constant.node.TEXT:\r\n                result = Node.Text.getDefault();\r\n                break;\r\n            case constant.link.DIRECT:\r\n                result = Link.Direct.getDefault();\r\n                break;\r\n            case constant.link.CURVE:\r\n                result = Link.Curve.getDefault();\r\n                break;\r\n            case constant.link.FLEXIONAL:\r\n                result = Link.Flexional.getDefault();\r\n                break;\r\n            case constant.link.FOLD:\r\n                result = Link.Fold.getDefault();\r\n                break;\r\n            case constant.line.DIRECT:\r\n                result = Line.Direct.getDefault();\r\n                break;\r\n            case constant.container.GROUP:\r\n                result = Container.Group.getDefault();\r\n                break;\r\n        }\r\n        return result;\r\n    }\r\n};\r\n/**\r\n *  设置图层背景图片，与setBackgroundColor冲突\r\n *  @method setBackgroundImage\r\n *  @param image {string} 图片url\r\n */\r\nScene.prototype.setBackgroundImage = function (image) {\r\n    this.jtopo.background = image;\r\n    this.attr.background = image;\r\n};\r\n/**\r\n *  设置图层背景颜色，与setBackgroundImage冲突\r\n *  @method setBackgroundColor\r\n *  @param color {string} #xxxxxx/255,255,255\r\n */\r\nScene.prototype.setBackgroundColor = function (color) {\r\n    this.jtopo.backgroundColor = QTopo.util.transHex(color);\r\n    this.jtopo.alpha = 1;\r\n    this.attr.background = QTopo.util.transHex(color);\r\n};\r\n/**\r\n *  设置图层模式\r\n *  @method setMode\r\n *  @param mode {string} 例:QTopo.constant.mode.NORMAL\r\n */\r\nScene.prototype.setMode = function (mode) {\r\n    if (["normal", "edit", "drag", "select"].indexOf(mode) > -1) {\r\n        this.attr.mode = mode;\r\n        this.jtopo.mode = mode;\r\n    } else {\r\n        QTopo.util.error("set wrong mode :", mode);\r\n    }\r\n};\r\n/**\r\n *  图层清空，清除图层内所有元素\r\n *  @method clear\r\n */\r\nScene.prototype.clear = function () {\r\n    QTopo.util.info("scene clear");\r\n    this.children = {\r\n        node: [],\r\n        link: [],\r\n        container: [],\r\n        line: []\r\n    };\r\n    this.jtopo.clear();\r\n};\r\n/**\r\n *  获取类型，常用在右键菜单上对触发对象的识别\r\n *  @method getType\r\n *  @return QTopo.constant.SCENE\r\n */\r\nScene.prototype.getType = function () {\r\n    return QTopo.constant.SCENE;\r\n};\r\n/**\r\n *  获取使用类型，常用在右键菜单上对触发对象的识别\r\n *  @method getUseType\r\n *  @return QTopo.constant.SCENE\r\n */\r\nScene.prototype.getUseType = function () {\r\n    return QTopo.constant.SCENE;\r\n};\r\n/**\r\n *  绑定事件，可用off删除对应事件\r\n *  @method on\r\n *  @param name {string} 事件名\r\n *\r\n *  click,dbclick,mousedown,mouseup,mouseover,mouseout,mousemove,mousedrag,mousewheel,touchstart,touchmove,touchend,keydown,keyup\r\n *\r\n *  @param fn {function} 处理函数\r\n */\r\nScene.prototype.on = function (name, fn) {\r\n    this.jtopo.addEventListener(name, fn);\r\n};\r\n/**\r\n *  删除事件，可删除on绑定的事件\r\n *  @method off\r\n *  @param name {string} 事件名\r\n *\r\n *  click,dbclick,mousedown,mouseup,mouseover,mouseout,mousemove,mousedrag,mousewheel,touchstart,touchmove,touchend,keydown,keyup\r\n *\r\n *  @param [fn]{function} 处理的函数对象，若无参则删除该事件下所有函数\r\n */\r\nScene.prototype.off = function (name, fn) {\r\n    this.jtopo.removeEventListener(name, fn);\r\n};\r\n/**\r\n *  根据搜索当前图层，查找基本属性或额外属性满足条件的元素\r\n *  @method find\r\n *  @param scan {string} 查询条件,格式为"key=value,key=value",多个条件用,分割\r\n *  @param [type] {string} 可指定元素类型精确查找\r\n *  @return {array} 返回数组，数组成员为满足至少一个条件的元素\r\n */\r\nScene.prototype.find = function (scan, type) {\r\n    var children = this.children;\r\n    var result = [];\r\n    var condition = typeof scan == "string" ? scan.split(",") : [];\r\n    if (condition.length > 0) {\r\n        $.each(condition, function (i, temp) {\r\n            temp = temp.split("=");\r\n            if (temp.length >= 2) {\r\n                //制定了类型，缩小查找范围，未指定则全部遍历\r\n                if (type) {\r\n                    switch (type) {\r\n                        case "node":\r\n                            scanArr(children.node, temp[0], temp[1]);\r\n                            break;\r\n                        case "link":\r\n                            scanArr(children.link, temp[0], temp[1]);\r\n                            break;\r\n                        case "container":\r\n                            scanArr(children.container, temp[0], temp[1]);\r\n                            break;\r\n                        case "line":\r\n                            scanArr(children.line, temp[0], temp[1]);\r\n                            break;\r\n                    }\r\n                } else {\r\n                    $.each(children, function (j, arr) {\r\n                        scanArr(arr, temp[0], temp[1]);\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n    return result;\r\n    //扫描数组中对象对应的属性是否相等\r\n    function scanArr(arr, key, value) {\r\n        $.each(arr, function (i, item) {\r\n            //只扫描对象的attr和extra中的属性\r\n            if (equal(item.extra, key, value) || equal(item.attr, key, value)) {\r\n                //排除重复的\r\n                if (result.indexOf(item) < 0) {\r\n                    result.push(item);\r\n                }\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    function equal(object, key, value) {\r\n        return object && object[key] && object[key] == value;\r\n    }\r\n};\r\n/**\r\n *  获取当前图层在正常视角下(未放大缩小)最左上角的坐标\r\n *  @method getOrigin\r\n *  @return {object} 包含 x,y属性\r\n */\r\nScene.prototype.getOrigin = function () {\r\n    return {\r\n        x: 0 - this.jtopo.translateX,\r\n        y: 0 - this.jtopo.translateY\r\n    }\r\n};\r\n//-\r\nfunction addJTopo(element) {\r\n    try {\r\n        this.jtopo.add(element.jtopo);\r\n    } catch (e) {\r\n        QTopo.util.error("In Scene, jtopo add error : ", e);\r\n    }\r\n}\r\nfunction removeJTopo(element) {\r\n    try {\r\n        this.jtopo.remove(element.jtopo);\r\n    } catch (e) {\r\n        QTopo.util.error("In Scene, jtopo remove error : ", e);\r\n    }\r\n}\r\n/**\r\n *  根据配置在当前图层上绘制节点\r\n *  @method createNode\r\n *  @param [config] {object}\r\n *\r\n *  无参则根据全局配置绘制QTopo.constant.node.IMAGE对应的节点,\r\n *\r\n *  config.type可指定绘制节点类型\r\n *\r\n *  参考QTopo.contant.node选择可绘制的种类\r\n *  @return {Node|boolean} 创建成功返回节点对象，失败返回false\r\n */\r\nScene.prototype.createNode = function (config) {\r\n    var newNode;\r\n    var constant = QTopo.constant.node;\r\n    config = config || {};\r\n    switch (config.type) {\r\n        case constant.TEXT:\r\n            newNode = new Node.Text.constructor(config);\r\n            break;\r\n        default:\r\n            newNode = new Node.Image.constructor(config);\r\n    }\r\n    if (newNode && newNode.jtopo) {\r\n        addJTopo.call(this, newNode);\r\n        this.children.node.push(newNode);\r\n        return newNode;\r\n    } else {\r\n        QTopo.util.error("create Node error", config);\r\n        return false;\r\n    }\r\n};\r\n/**\r\n *  根据配置在两个元素之间绘制新的链接\r\n *  @method createLink\r\n *  @param [config] {object}\r\n *  无参则根据全局配置绘制QTopo.constant.link.DIRECT对应的链接,\r\n *\r\n *  config.type可指定绘制链接类型\r\n *\r\n *  参考QTopo.contant.link选择可绘制的种类\r\n *  @return {Link|boolean} 创建成功返回链接对象，失败返回false\r\n */\r\nScene.prototype.createLink = function (config) {\r\n    var newLink;\r\n    var constant = QTopo.constant.link;\r\n    config = config || {};\r\n    switch (config.type) {\r\n        case constant.CURVE:\r\n            newLink = new Link.Curve.constructor(config);\r\n            break;\r\n        case constant.FLEXIONAL:\r\n            newLink = new Link.Flexional.constructor(config);\r\n            break;\r\n        case constant.FOLD:\r\n            newLink = new Link.Fold.constructor(config);\r\n            break;\r\n        default:\r\n            newLink = new Link.Direct.constructor(config);\r\n    }\r\n    if (newLink && newLink.jtopo) {\r\n        addJTopo.call(this, newLink);\r\n        this.children.link.push(newLink);\r\n        return newLink;\r\n    } else {\r\n        QTopo.util.error("create Link error", config);\r\n        return false;\r\n    }\r\n};\r\n//--\r\n/**\r\n *  根据配置在两个元素之间创建链接,若两元素已有链接则原链接计数上加1,\r\n *  可操作于有展开功能的链接上，可自适应选择添加新链接或计数+1\r\n *  @method addLink\r\n *  @param config {object} 创建新链接时所依赖的配置，可参考createLink函数\r\n *  @param [fn] {function} 判断两元素间无链接时的可选操作，若无则调用createLink函数建立链接\r\n *  @return {Link|boolean} 创建成功返回链接对象，失败返回false\r\n */\r\nScene.prototype.addLink = function (config, fn) {\r\n    if (config && config.start && config.end) {\r\n        var links = this.linksBetween(config.start, config.end);//按number属性从大到小排列\r\n        if (links.length == 0) {\r\n            if ($.isFunction(fn)) {\r\n                fn();\r\n            } else {\r\n                return this.createLink(config);\r\n            }\r\n        } else {\r\n            //两点之间连线为1则认为是已有链接，超过1则认为是可以展开且已经展开的直线\r\n            var number = 1;\r\n            if ($.isNumeric(config.number)) {\r\n                number = parseInt(config.number);\r\n                if (number < 1) {\r\n                    number = 1;\r\n                }\r\n            }\r\n            if (links.length == 1) {\r\n                links[0].set({\r\n                    number: links[0].attr.number + number\r\n                });\r\n                return links[0];\r\n            } else if (links.length > 1) {\r\n                var parent = links[0].parent;\r\n                if (parent) {\r\n                    parent.attr.number += number;\r\n                    parent.addChild(number);\r\n                }\r\n                return parent;\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n *\r\n *  获取两元素之间所有的链接\r\n *  @method linksBetween\r\n *  @param start {element} 元素，起始无关\r\n *  @param end {element} 元素，起始无关\r\n *  @return {array} 元素间的链接集合，按链接的计数右大到小排列\r\n */\r\nScene.prototype.linksBetween = function (start, end) {\r\n    var result = [];\r\n    var links = start.links;\r\n    //检测两元素间的连线是否已有\r\n    if ($.isArray(links.out)) {\r\n        $.each(links.out, function (i, linkOut) {\r\n            if (linkOut.path.end == end) {\r\n                result.push(linkOut);\r\n            }\r\n        });\r\n    }\r\n    if ($.isArray(links.in)) {\r\n        $.each(links.in, function (j, linkIn) {\r\n            if (linkIn.path.start == end) {\r\n                result.push(linkIn);\r\n            }\r\n        });\r\n    }\r\n    return result.sort(function (a, b) {\r\n        return b.attr.number - a.attr.number;\r\n    });\r\n};\r\n//--\r\n/**\r\n *\r\n *  在图层上绘制不可以移动的线元素\r\n *  @method createLine\r\n *  @param [config] {object} 配置参数,若无则按全局配置创建\r\n *  @return {Line|boolean} 创建成功返回线元素，失败返回false\r\n */\r\nScene.prototype.createLine = function (config) {\r\n    var newLine;\r\n    var constant = QTopo.constant.line;\r\n    config = config || {};\r\n    switch (config.type) {\r\n        default:\r\n            newLine = new Line.Direct.constructor(config);\r\n    }\r\n    if (newLine && newLine.jtopo) {\r\n        addJTopo.call(this, newLine);\r\n        this.children.line.push(newLine);\r\n        return newLine;\r\n    } else {\r\n        QTopo.util.error("create Link error", config);\r\n        return false;\r\n    }\r\n};\r\n//--\r\n/**\r\n *\r\n *  在图层上绘制分组元素\r\n *  @method createContainer\r\n *  @param [config] {object} 配置参数,若无则按全局配置创建\r\n *  @return {container|boolean} 创建成功返回线元素，失败返回false\r\n */\r\nScene.prototype.createContainer = function (config) {\r\n    var newContainer;\r\n    var constant = QTopo.constant.container;\r\n    config = config || {};\r\n    switch (config.type) {\r\n        default:\r\n            newContainer = new Container.Group.constructor(config);\r\n    }\r\n    if (newContainer && newContainer.jtopo) {\r\n        //分组只加入其本身，切换节点不作数\r\n        var nodeConfig = {};\r\n        if (config.toggle) {\r\n            nodeConfig = config.toggle\r\n        }\r\n        //可选禁用分组切换\r\n        if (!(config.toggle && typeof config.toggle.close == "boolean" && config.toggle.close)) {\r\n            addToggle(this, newContainer, nodeConfig);\r\n        }\r\n        this.children.container.push(newContainer);\r\n        addJTopo.call(this, newContainer);\r\n        return newContainer;\r\n    } else {\r\n        QTopo.util.error("create Container error", config);\r\n        return false;\r\n    }\r\n};\r\nfunction addToggle(scene, container, configToggle) {\r\n    configToggle.useType = QTopo.constant.CASUAL;//标记用途\r\n    container.toggleTo = new Node.Image.constructor(configToggle);\r\n    container.toggleTo.toggleTo = container;//互相索引\r\n    container.toggleTo.hide();//初始隐藏\r\n    addJTopo.call(scene, container.toggleTo);//加入画布\r\n}\r\n//--\r\n//-\r\n/**\r\n *\r\n *  删除图层内元素,元素删除其上的链接也会删除和更新\r\n *  @method remove\r\n *  @param element {element}\r\n */\r\nScene.prototype.remove = function (element) {\r\n    var self = this;\r\n    if (element) {\r\n        if ($.isArray(element)) {\r\n            $.each(element, function (i, item) {\r\n                removeOnce(item);\r\n            });\r\n        } else {\r\n            removeOnce(element);\r\n        }\r\n        function removeOnce(oneElement) {\r\n            if (oneElement.jtopo) {\r\n                switch (oneElement.getType()) {\r\n                    case QTopo.constant.NODE:\r\n                        if (QTopo.util.arrayDelete(self.children.node, oneElement) || oneElement.getUseType() == QTopo.constant.CASUAL) {\r\n                            removeNode.call(self, oneElement);\r\n                        }\r\n                        break;\r\n                    case QTopo.constant.LINK:\r\n                        if (QTopo.util.arrayDelete(self.children.link, oneElement) || oneElement.getUseType() == QTopo.constant.CASUAL) {\r\n                            removeLink.call(self, oneElement);\r\n                        }\r\n                        break;\r\n                    case QTopo.constant.LINE:\r\n                        if (QTopo.util.arrayDelete(self.children.line, oneElement) || oneElement.getUseType() == QTopo.constant.CASUAL) {\r\n                            removeLine.call(self, oneElement);\r\n                        }\r\n                        break;\r\n                    case QTopo.constant.CONTAINER:\r\n                        if (QTopo.util.arrayDelete(self.children.container, oneElement) || oneElement.getUseType() == QTopo.constant.CASUAL) {\r\n                            removeContainer.call(self, oneElement);\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nfunction upDataLinks(element) {\r\n    var links = element.links;\r\n    if (links) {\r\n        //更新其上连线的另一方的links属性\r\n        while (links.in.length > 0) {\r\n            this.remove(links.in.pop());\r\n        }\r\n        while (links.out.length > 0) {\r\n            this.remove(links.out.pop());\r\n        }\r\n    }\r\n}\r\n//线上删除时候,要更新node和container中的links属性\r\nfunction removeLink(link) {\r\n    try {\r\n        QTopo.util.arrayDelete(link.path.start.links.out, link);\r\n        QTopo.util.arrayDelete(link.path.end.links.in, link);\r\n        removeJTopo.call(this, link);\r\n    } catch (e) {\r\n        QTopo.util.error("Scene removeLink error", e);\r\n    }\r\n}\r\nfunction removeLine(line) {\r\n    try {\r\n        removeJTopo.call(this, line);\r\n    } catch (e) {\r\n        QTopo.util.error("Scene removeLine error", e);\r\n    }\r\n}\r\nfunction removeNode(node) {\r\n    //刷新一下现有的线\r\n    try {\r\n        //更新其上线另一头的links属性\r\n        upDataLinks.call(this, node);\r\n        //要更新其父的children属性,父删除子\r\n        if (node.parent && $.isArray(node.parent.children)) {\r\n            node.parent.remove(node);\r\n        }\r\n        //删除分组切换的节点时同时删除其切换的分组\r\n        if (node.toggleTo) {\r\n            //分组若隐藏了,应该展示\r\n            node.toggleTo.toggle();\r\n            this.remove(node.toggleTo);\r\n        }\r\n        removeJTopo.call(this, node);\r\n    } catch (e) {\r\n        QTopo.util.error("Scene removeNode error", e);\r\n    }\r\n}\r\n//容器删除时,要更与其相连的线的另一端的links属性,要更新其子类的parent属性\r\nfunction removeContainer(container) {\r\n    try {\r\n        //分组若隐藏了,应该展示\r\n        container.toggle(true);\r\n        //更新其上线另一头的links属性\r\n        upDataLinks.call(this, container);\r\n        //更新子元素的Parent属性\r\n        if ($.isArray(container.children) && container.children.length > 0) {\r\n            for (var i = 0; i < container.children.length; i++) {\r\n                container.children[i].parent = null;\r\n            }\r\n        }\r\n        //删除分组同时删除其切换节点\r\n        if (container.toggleTo) {\r\n            this.remove(container.toggleTo);\r\n        }\r\n        removeJTopo.call(this, container);\r\n    } catch (e) {\r\n        QTopo.util.error("Scene removeContainer error", e);\r\n    }\r\n}\r\n//-\r\n/**\r\n *\r\n *  图层信息转化为json\r\n *  @method toJson\r\n *  @return {object}\r\n */\r\nScene.prototype.toJson = function () {\r\n    var json = $.extend({}, this.attr);\r\n    json.extra = $.extend({}, this.extra);\r\n    return json;\r\n};\r\n/**\r\n *\r\n *  判断元素是否在当前图层内\r\n *  @method isChildren\r\n *  @param element {element}\r\n *  @return {boolean}\r\n */\r\nScene.prototype.isChildren = function (element) {\r\n    var result = false;\r\n    if (element.jtopo) {\r\n        $.each(this.children, function (name, arr) {\r\n            if (arr.indexOf(element) > -1) {\r\n                result = true;\r\n                return false;\r\n            }\r\n        });\r\n    }\r\n    return result;\r\n};\r\n/**\r\n *\r\n * 图层缩放,元素一屏显示\r\n *  @method goCenter\r\n */\r\nScene.prototype.goCenter = function () {\r\n    if (this.jtopo.childs && this.jtopo.childs.length > 0) {\r\n        this.jtopo.stage.centerAndZoom();\r\n    }\r\n};\r\n/**\r\n *\r\n * 图层缩放\r\n *  @method resize\r\n *  @param size {number} 根据比例放大或缩小 参数可 0-1缩小 1-n放大\r\n */\r\nScene.prototype.resize = function (size) {\r\n    if ($.isNumeric(size)) {\r\n        this.jtopo.scaleX = size;\r\n        this.jtopo.scaleY = size;\r\n    }\r\n};\r\n/**\r\n *\r\n * 启用/禁用鼠标缩放\r\n *  @method toggleZoom\r\n */\r\nScene.prototype.toggleZoom = function () {\r\n    if (!this.jtopo.stage.wheelZoom) {\r\n        this.jtopo.stage.wheelZoom = 0.85; // 设置鼠标缩放比例\r\n    } else {\r\n        this.jtopo.stage.wheelZoom = null;\r\n    }\r\n};\r\n/**\r\n *\r\n * 启用/禁用鹰眼\r\n *  @method toggleEagleEye\r\n */\r\nScene.prototype.toggleEagleEye = function () {\r\n    this.jtopo.stage.eagleEye.visible = !this.jtopo.stage.eagleEye.visible;\r\n};\r\n/**\r\n *\r\n * 获取当前图层的png格式图片在新的窗口打开\r\n *  @method getPicture\r\n */\r\nScene.prototype.getPicture = function () {\r\n    //stage.saveImageInfo();\r\n    //在新页面打开图片\r\n    var image = this.jtopo.stage.canvas.toDataURL("image/png");\r\n    var w = window.open(\'about:blank\', \'image from canvas\');\r\n    w.document.write("<img src=\'" + image + "\' alt=\'from canvas\'/>");\r\n    //下载图片\r\n    // here is the most important part because if you dont replace you will get a DOM 18 exception.\r\n    // var image =  stage.canvas.toDataURL("image/png").replace("image/png", "image/octet-stream;Content-Disposition: attachment;filename=foobar.png");\r\n    //var image = stage.canvas.toDataURL("image/png").replace("image/png", "image/octet-stream");\r\n    //window.location.href=image; // it will save locally\r\n};\r\n/**\r\n * 切换元素的层次\r\n * @method toggleZIndex\r\n * @param element 待控制元素\r\n * @param [flag] true为降低false为提升，无参则默认提升，若已提升到最高则降至最低\r\n */\r\nScene.prototype.toggleZIndex = function (element, flag) {\r\n    if (element) {\r\n        var jtopo = element.jtopo;\r\n        var scene = this.jtopo;\r\n        if (jtopo && scene) {\r\n            var map = scene.zIndexMap[jtopo.zIndex];\r\n            var index = map.indexOf(jtopo);\r\n            var todo = true;\r\n            if (typeof flag == \'boolean\') {\r\n                todo = flag;\r\n            } else {\r\n                if (index == map.length - 1) {\r\n                    todo = false;\r\n                }\r\n            }\r\n            if (todo) {\r\n                //提升层次\r\n                map.push(map[index]);\r\n                map.splice(index, 1);\r\n\r\n            } else {\r\n                //降低层次\r\n                map.splice(0, 0, map[index]);\r\n                map.splice(index + 1, 1);\r\n            }\r\n        }\r\n    }\r\n};\r\nvar selectedCatch = {\r\n    jtopo: [],\r\n    qtopo: []\r\n};\r\n/**\r\n * 获取被选中的元素\r\n * @method getSelected\r\n * @return {array} 返回图层中被选中的元素\r\n */\r\nScene.prototype.getSelected = function () {\r\n    var jtopo = this.jtopo.selectedElements;\r\n    if ($.isArray(jtopo)) {\r\n        if (selectedCatch.jtopo != jtopo) {\r\n            selectedCatch.jtopo = jtopo;\r\n            selectedCatch.qtopo = [];\r\n            jtopo.forEach(function (el) {\r\n                if (el.qtopo && el.qtopo.getUseType() != QTopo.constant.CASUAL) {\r\n                    selectedCatch.qtopo.push(el.qtopo);\r\n                }\r\n            });\r\n        }\r\n        return selectedCatch.qtopo;\r\n    } else {\r\n        return [];\r\n    }\r\n};\r\n/**\r\n * 高亮目标隐藏其他\r\n * @method toggleLight\r\n * @param [target] 数组或对象,高亮其相关对象,无参则全部高亮\r\n * @param [flag] 若为true则只高亮传入的对象,不选则只对传入对象相关的对象高亮\r\n */\r\nScene.prototype.toggleLight = function (target, flag) {\r\n    try {\r\n        var alpha = 1;\r\n        var lighting;\r\n        if (target) {\r\n            alpha = 0.1;\r\n            if (flag) {\r\n                if ($.isArray(target)) {\r\n                    lighting = target;\r\n                } else {\r\n                    lighting = [target];\r\n                }\r\n            } else {\r\n                if ($.isArray(target)) {\r\n                    lighting = getConnectionLightings(target);\r\n                } else {\r\n                    lighting = getConnectionLightings([target]);\r\n                }\r\n            }\r\n        }\r\n        totalSetAlpha(this.children.node.concat(this.children.link), alpha);\r\n        totalSetAlpha(lighting, 1);\r\n    } catch (e) {\r\n        QTopo.util.error("scene toggleLight error", e);\r\n    }\r\n    function getConnectionLightings(arr) {\r\n        var lighting = [];\r\n        $.each(arr, function (i, target) {\r\n            if (target.getType() == QTopo.constant.NODE && target.getUseType() != QTopo.constant.CASUAL) {\r\n                var links = target.links;\r\n                QTopo.util.arrayPush(lighting, target);\r\n                if (links) {\r\n                    if ($.isArray(links.out)) {\r\n                        $.each(links.out, function (l, outlink) {\r\n                            QTopo.util.arrayPush(lighting, outlink);\r\n                            QTopo.util.arrayPush(lighting, outlink.path.end);\r\n                        });\r\n                    }\r\n                    if ($.isArray(links.in)) {\r\n                        $.each(links.in, function (n, inlink) {\r\n                            QTopo.util.arrayPush(lighting, inlink);\r\n                            QTopo.util.arrayPush(lighting, inlink.path.start);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return lighting;\r\n    }\r\n\r\n    function totalSetAlpha(total, alpha) {\r\n        //全部隐藏\r\n        if ($.isArray(total)) {\r\n            $.each(total, function (i, element) {\r\n                element.set({\r\n                    alpha: alpha\r\n                });\r\n            });\r\n        }\r\n    }\r\n};\r\n/**\r\n * 正常尺寸展示，并将视角移动到以参数节点为中心的位置\r\n * @method moveToNode\r\n * @param node 节点对象\r\n */\r\nScene.prototype.moveToNode = function (node) {\r\n    // 查询到的节点居中显示\r\n    if (this.children.node.indexOf(node) > -1) {\r\n        var location = node.jtopo.getCenterLocation();\r\n        this.resize(1);\r\n        this.jtopo.setCenter(location.x, location.y);\r\n        // 闪烁几下\r\n        nodeFlash(node.jtopo, 5);\r\n    }\r\n    function nodeFlash(node, num) {\r\n        if ($.isNumeric(num)) {\r\n            if (num == 0) {\r\n                node.selected = false;\r\n            } else {\r\n                node.selected = !node.selected;\r\n                setTimeout(function () {\r\n                    nodeFlash(node, num - 1);\r\n                }, 300);\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * 自动布局\r\n * @method autoLayout\r\n * @param config 自动布局配置参数\r\n * @example\r\n *      参数配置:\r\n *          config:{\r\n *              type:\r\n *                  1.\'round\'   无需其他配置\r\n *                  2.\'default\' 需配置行数，列间距，行间距\r\n *              rows:行数\r\n *              rowSpace:行间距\r\n *              columnSpace:列间距\r\n *          }\r\n */\r\nScene.prototype.autoLayout = function (config) {\r\n    if (config && config.type) {\r\n        var needSort = [];\r\n        var jtopos = [];\r\n        this.children.node.forEach(function (v) {\r\n            if (!v.parent) {\r\n                needSort.push(v);\r\n                jtopos.push(v.jtopo);\r\n            }\r\n        });\r\n        switch (config.type) {\r\n            case "round":\r\n                layout_round(this.jtopo, jtopos);\r\n                break;\r\n            case "default":\r\n                layout_default(needSort, parseInt(config.rows), parseInt(config.rowSpace), parseInt(config.columnSpace), this.getOrigin());\r\n                break;\r\n        }\r\n    }\r\n};\r\nfunction layout_round(scene, jtopos) {\r\n    JTopo.layout.circleLayoutNodes(jtopos, {animate: {time: 1000}});\r\n}\r\nfunction layout_default(elements, rows, rowSpace, columnSpace, begin) {\r\n    if ($.isNumeric(rows)) {\r\n        rows = parseInt(rows);\r\n        if (rows < 1) {\r\n            rows = 1;\r\n        }\r\n        $.each(elements.sort(function (a, b) {\r\n            return getDegree(b) - getDegree(a);\r\n        }), function (i, v) {\r\n            //v.setLocation(begin.x + (i % rows) * columnSpace, begin.y);\r\n            move(v, begin.x + (i % rows) * columnSpace, begin.y);\r\n            if ((i + 1) % rows == 0) {\r\n                begin.y += rowSpace;\r\n            }\r\n        });\r\n    }\r\n}\r\n//-------工具函数\r\n//获取节点的度\r\nfunction getDegree(node) {\r\n    var inLinks = node.links.in;\r\n    var outLinks = node.links.out;\r\n    var degree = 0;\r\n    if (inLinks.length == 1) {\r\n        degree += inLinks[0].attr.number;\r\n    } else {\r\n        degree += inLinks.length;\r\n    }\r\n    if (outLinks.length == 1) {\r\n        degree += outLinks[0].attr.number;\r\n    } else {\r\n        degree += outLinks.length;\r\n    }\r\n    return degree;\r\n}\r\n//移动动画\r\nfunction move(node, targetX, targetY) {\r\n    targetX = parseInt(targetX);\r\n    targetY = parseInt(targetY);\r\n    var x = node.attr.position[0];\r\n    var y = node.attr.position[1];\r\n    var partX = parseInt((targetX - x)) / 10;\r\n    var partY = parseInt((targetY - y)) / 10;\r\n    var part = 0;\r\n    var temp = setInterval(function () {\r\n        if (Math.abs(targetX - x) > 1) {\r\n            x += partX;\r\n        }\r\n        if (Math.abs(targetY - y) > 1) {\r\n            y += partY;\r\n        }\r\n        node.setPosition([parseInt(x), parseInt(y)]);\r\n        part++;\r\n        if (Math.abs(targetX - x) <= 1 && Math.abs(targetY - y) <= 1) {\r\n            clearInterval(temp);\r\n        } else if (part >= 10) {\r\n            clearInterval(temp);\r\n        }\r\n    }, 100);\r\n}\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,');
}});